import {
  $,
  Ae,
  B,
  Bt,
  C,
  D,
  Dt,
  Et,
  Fn,
  Ft,
  Gt,
  Hn,
  Ht,
  It,
  Jn,
  Jt,
  Kn,
  Kt,
  Ln,
  Lt,
  Mn,
  Mt,
  N,
  Qn,
  S,
  U,
  Un,
  Vn,
  Vt,
  Wt,
  Xn,
  Xt,
  Yt,
  _,
  at,
  dn,
  dt,
  ee,
  en,
  er,
  fn,
  ft,
  gt,
  h,
  ht,
  jt,
  k,
  kn,
  kt,
  ln,
  lt,
  mt,
  nr,
  oe,
  ot,
  p,
  pt,
  qn,
  qt,
  require_cjs,
  rt,
  te,
  tr,
  ut,
  ve,
  vt,
  w,
  wt,
  xn,
  xt,
  yt,
  zt
} from "./chunk-XKXACSPL.js";
import {
  __commonJS,
  __esm,
  __export,
  __reExport,
  __toCommonJS,
  __toESM
} from "./chunk-MSFXBLHD.js";

// node_modules/events/events.js
var require_events = __commonJS({
  "node_modules/events/events.js"(exports, module) {
    "use strict";
    var R2 = typeof Reflect === "object" ? Reflect : null;
    var ReflectApply = R2 && typeof R2.apply === "function" ? R2.apply : function ReflectApply2(target, receiver, args) {
      return Function.prototype.apply.call(target, receiver, args);
    };
    var ReflectOwnKeys;
    if (R2 && typeof R2.ownKeys === "function") {
      ReflectOwnKeys = R2.ownKeys;
    } else if (Object.getOwnPropertySymbols) {
      ReflectOwnKeys = function ReflectOwnKeys2(target) {
        return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
      };
    } else {
      ReflectOwnKeys = function ReflectOwnKeys2(target) {
        return Object.getOwnPropertyNames(target);
      };
    }
    function ProcessEmitWarning(warning) {
      if (console && console.warn) console.warn(warning);
    }
    var NumberIsNaN = Number.isNaN || function NumberIsNaN2(value) {
      return value !== value;
    };
    function EventEmitter3() {
      EventEmitter3.init.call(this);
    }
    module.exports = EventEmitter3;
    module.exports.once = once;
    EventEmitter3.EventEmitter = EventEmitter3;
    EventEmitter3.prototype._events = void 0;
    EventEmitter3.prototype._eventsCount = 0;
    EventEmitter3.prototype._maxListeners = void 0;
    var defaultMaxListeners = 10;
    function checkListener(listener) {
      if (typeof listener !== "function") {
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
      }
    }
    Object.defineProperty(EventEmitter3, "defaultMaxListeners", {
      enumerable: true,
      get: function() {
        return defaultMaxListeners;
      },
      set: function(arg) {
        if (typeof arg !== "number" || arg < 0 || NumberIsNaN(arg)) {
          throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + ".");
        }
        defaultMaxListeners = arg;
      }
    });
    EventEmitter3.init = function() {
      if (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) {
        this._events = /* @__PURE__ */ Object.create(null);
        this._eventsCount = 0;
      }
      this._maxListeners = this._maxListeners || void 0;
    };
    EventEmitter3.prototype.setMaxListeners = function setMaxListeners(n4) {
      if (typeof n4 !== "number" || n4 < 0 || NumberIsNaN(n4)) {
        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n4 + ".");
      }
      this._maxListeners = n4;
      return this;
    };
    function _getMaxListeners(that) {
      if (that._maxListeners === void 0)
        return EventEmitter3.defaultMaxListeners;
      return that._maxListeners;
    }
    EventEmitter3.prototype.getMaxListeners = function getMaxListeners() {
      return _getMaxListeners(this);
    };
    EventEmitter3.prototype.emit = function emit(type) {
      var args = [];
      for (var i3 = 1; i3 < arguments.length; i3++) args.push(arguments[i3]);
      var doError = type === "error";
      var events = this._events;
      if (events !== void 0)
        doError = doError && events.error === void 0;
      else if (!doError)
        return false;
      if (doError) {
        var er4;
        if (args.length > 0)
          er4 = args[0];
        if (er4 instanceof Error) {
          throw er4;
        }
        var err = new Error("Unhandled error." + (er4 ? " (" + er4.message + ")" : ""));
        err.context = er4;
        throw err;
      }
      var handler = events[type];
      if (handler === void 0)
        return false;
      if (typeof handler === "function") {
        ReflectApply(handler, this, args);
      } else {
        var len = handler.length;
        var listeners = arrayClone(handler, len);
        for (var i3 = 0; i3 < len; ++i3)
          ReflectApply(listeners[i3], this, args);
      }
      return true;
    };
    function _addListener(target, type, listener, prepend) {
      var m3;
      var events;
      var existing;
      checkListener(listener);
      events = target._events;
      if (events === void 0) {
        events = target._events = /* @__PURE__ */ Object.create(null);
        target._eventsCount = 0;
      } else {
        if (events.newListener !== void 0) {
          target.emit(
            "newListener",
            type,
            listener.listener ? listener.listener : listener
          );
          events = target._events;
        }
        existing = events[type];
      }
      if (existing === void 0) {
        existing = events[type] = listener;
        ++target._eventsCount;
      } else {
        if (typeof existing === "function") {
          existing = events[type] = prepend ? [listener, existing] : [existing, listener];
        } else if (prepend) {
          existing.unshift(listener);
        } else {
          existing.push(listener);
        }
        m3 = _getMaxListeners(target);
        if (m3 > 0 && existing.length > m3 && !existing.warned) {
          existing.warned = true;
          var w7 = new Error("Possible EventEmitter memory leak detected. " + existing.length + " " + String(type) + " listeners added. Use emitter.setMaxListeners() to increase limit");
          w7.name = "MaxListenersExceededWarning";
          w7.emitter = target;
          w7.type = type;
          w7.count = existing.length;
          ProcessEmitWarning(w7);
        }
      }
      return target;
    }
    EventEmitter3.prototype.addListener = function addListener(type, listener) {
      return _addListener(this, type, listener, false);
    };
    EventEmitter3.prototype.on = EventEmitter3.prototype.addListener;
    EventEmitter3.prototype.prependListener = function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };
    function onceWrapper() {
      if (!this.fired) {
        this.target.removeListener(this.type, this.wrapFn);
        this.fired = true;
        if (arguments.length === 0)
          return this.listener.call(this.target);
        return this.listener.apply(this.target, arguments);
      }
    }
    function _onceWrap(target, type, listener) {
      var state = { fired: false, wrapFn: void 0, target, type, listener };
      var wrapped = onceWrapper.bind(state);
      wrapped.listener = listener;
      state.wrapFn = wrapped;
      return wrapped;
    }
    EventEmitter3.prototype.once = function once2(type, listener) {
      checkListener(listener);
      this.on(type, _onceWrap(this, type, listener));
      return this;
    };
    EventEmitter3.prototype.prependOnceListener = function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };
    EventEmitter3.prototype.removeListener = function removeListener(type, listener) {
      var list, events, position, i3, originalListener;
      checkListener(listener);
      events = this._events;
      if (events === void 0)
        return this;
      list = events[type];
      if (list === void 0)
        return this;
      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = /* @__PURE__ */ Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit("removeListener", type, list.listener || listener);
        }
      } else if (typeof list !== "function") {
        position = -1;
        for (i3 = list.length - 1; i3 >= 0; i3--) {
          if (list[i3] === listener || list[i3].listener === listener) {
            originalListener = list[i3].listener;
            position = i3;
            break;
          }
        }
        if (position < 0)
          return this;
        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }
        if (list.length === 1)
          events[type] = list[0];
        if (events.removeListener !== void 0)
          this.emit("removeListener", type, originalListener || listener);
      }
      return this;
    };
    EventEmitter3.prototype.off = EventEmitter3.prototype.removeListener;
    EventEmitter3.prototype.removeAllListeners = function removeAllListeners(type) {
      var listeners, events, i3;
      events = this._events;
      if (events === void 0)
        return this;
      if (events.removeListener === void 0) {
        if (arguments.length === 0) {
          this._events = /* @__PURE__ */ Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== void 0) {
          if (--this._eventsCount === 0)
            this._events = /* @__PURE__ */ Object.create(null);
          else
            delete events[type];
        }
        return this;
      }
      if (arguments.length === 0) {
        var keys2 = Object.keys(events);
        var key;
        for (i3 = 0; i3 < keys2.length; ++i3) {
          key = keys2[i3];
          if (key === "removeListener") continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners("removeListener");
        this._events = /* @__PURE__ */ Object.create(null);
        this._eventsCount = 0;
        return this;
      }
      listeners = events[type];
      if (typeof listeners === "function") {
        this.removeListener(type, listeners);
      } else if (listeners !== void 0) {
        for (i3 = listeners.length - 1; i3 >= 0; i3--) {
          this.removeListener(type, listeners[i3]);
        }
      }
      return this;
    };
    function _listeners(target, type, unwrap) {
      var events = target._events;
      if (events === void 0)
        return [];
      var evlistener = events[type];
      if (evlistener === void 0)
        return [];
      if (typeof evlistener === "function")
        return unwrap ? [evlistener.listener || evlistener] : [evlistener];
      return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
    }
    EventEmitter3.prototype.listeners = function listeners(type) {
      return _listeners(this, type, true);
    };
    EventEmitter3.prototype.rawListeners = function rawListeners(type) {
      return _listeners(this, type, false);
    };
    EventEmitter3.listenerCount = function(emitter, type) {
      if (typeof emitter.listenerCount === "function") {
        return emitter.listenerCount(type);
      } else {
        return listenerCount.call(emitter, type);
      }
    };
    EventEmitter3.prototype.listenerCount = listenerCount;
    function listenerCount(type) {
      var events = this._events;
      if (events !== void 0) {
        var evlistener = events[type];
        if (typeof evlistener === "function") {
          return 1;
        } else if (evlistener !== void 0) {
          return evlistener.length;
        }
      }
      return 0;
    }
    EventEmitter3.prototype.eventNames = function eventNames() {
      return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
    };
    function arrayClone(arr, n4) {
      var copy = new Array(n4);
      for (var i3 = 0; i3 < n4; ++i3)
        copy[i3] = arr[i3];
      return copy;
    }
    function spliceOne(list, index) {
      for (; index + 1 < list.length; index++)
        list[index] = list[index + 1];
      list.pop();
    }
    function unwrapListeners(arr) {
      var ret = new Array(arr.length);
      for (var i3 = 0; i3 < ret.length; ++i3) {
        ret[i3] = arr[i3].listener || arr[i3];
      }
      return ret;
    }
    function once(emitter, name2) {
      return new Promise(function(resolve, reject) {
        function errorListener(err) {
          emitter.removeListener(name2, resolver);
          reject(err);
        }
        function resolver() {
          if (typeof emitter.removeListener === "function") {
            emitter.removeListener("error", errorListener);
          }
          resolve([].slice.call(arguments));
        }
        ;
        eventTargetAgnosticAddListener(emitter, name2, resolver, { once: true });
        if (name2 !== "error") {
          addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
        }
      });
    }
    function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
      if (typeof emitter.on === "function") {
        eventTargetAgnosticAddListener(emitter, "error", handler, flags);
      }
    }
    function eventTargetAgnosticAddListener(emitter, name2, listener, flags) {
      if (typeof emitter.on === "function") {
        if (flags.once) {
          emitter.once(name2, listener);
        } else {
          emitter.on(name2, listener);
        }
      } else if (typeof emitter.addEventListener === "function") {
        emitter.addEventListener(name2, function wrapListener(arg) {
          if (flags.once) {
            emitter.removeEventListener(name2, wrapListener);
          }
          listener(arg);
        });
      } else {
        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
      }
    }
  }
});

// node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.es6.js
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __assign: () => __assign,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __read: () => __read,
  __rest: () => __rest,
  __spread: () => __spread,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values
});
function __extends(d3, b6) {
  extendStatics(d3, b6);
  function __() {
    this.constructor = d3;
  }
  d3.prototype = b6 === null ? Object.create(b6) : (__.prototype = b6.prototype, new __());
}
function __rest(s2, e2) {
  var t = {};
  for (var p6 in s2) if (Object.prototype.hasOwnProperty.call(s2, p6) && e2.indexOf(p6) < 0)
    t[p6] = s2[p6];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p6 = Object.getOwnPropertySymbols(s2); i3 < p6.length; i3++) {
      if (e2.indexOf(p6[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p6[i3]))
        t[p6[i3]] = s2[p6[i3]];
    }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c5 = arguments.length, r2 = c5 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d3 = decorators[i3]) r2 = (c5 < 3 ? d3(r2) : c5 > 3 ? d3(target, key, r2) : d3(target, key)) || r2;
  return c5 > 3 && r2 && Object.defineProperty(target, key, r2), r2;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P5, generator) {
  function adopt(value) {
    return value instanceof P5 ? value : new P5(function(resolve) {
      resolve(value);
    });
  }
  return new (P5 || (P5 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f5, y7, t, g7;
  return g7 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g7[Symbol.iterator] = function() {
    return this;
  }), g7;
  function verb(n4) {
    return function(v6) {
      return step([n4, v6]);
    };
  }
  function step(op) {
    if (f5) throw new TypeError("Generator is already executing.");
    while (_5) try {
      if (f5 = 1, y7 && (t = op[0] & 2 ? y7["return"] : op[0] ? y7["throw"] || ((t = y7["return"]) && t.call(y7), 0) : y7.next) && !(t = t.call(y7, op[1])).done) return t;
      if (y7 = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _5.label++;
          return { value: op[1], done: false };
        case 5:
          _5.label++;
          y7 = op[1];
          op = [0];
          continue;
        case 7:
          op = _5.ops.pop();
          _5.trys.pop();
          continue;
        default:
          if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _5 = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _5.label = op[1];
            break;
          }
          if (op[0] === 6 && _5.label < t[1]) {
            _5.label = t[1];
            t = op;
            break;
          }
          if (t && _5.label < t[2]) {
            _5.label = t[2];
            _5.ops.push(op);
            break;
          }
          if (t[2]) _5.ops.pop();
          _5.trys.pop();
          continue;
      }
      op = body.call(thisArg, _5);
    } catch (e2) {
      op = [6, e2];
      y7 = 0;
    } finally {
      f5 = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding(o3, m3, k5, k22) {
  if (k22 === void 0) k22 = k5;
  o3[k22] = m3[k5];
}
function __exportStar(m3, exports) {
  for (var p6 in m3) if (p6 !== "default" && !exports.hasOwnProperty(p6)) exports[p6] = m3[p6];
}
function __values(o3) {
  var s2 = typeof Symbol === "function" && Symbol.iterator, m3 = s2 && o3[s2], i3 = 0;
  if (m3) return m3.call(o3);
  if (o3 && typeof o3.length === "number") return {
    next: function() {
      if (o3 && i3 >= o3.length) o3 = void 0;
      return { value: o3 && o3[i3++], done: !o3 };
    }
  };
  throw new TypeError(s2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o3, n4) {
  var m3 = typeof Symbol === "function" && o3[Symbol.iterator];
  if (!m3) return o3;
  var i3 = m3.call(o3), r2, ar3 = [], e2;
  try {
    while ((n4 === void 0 || n4-- > 0) && !(r2 = i3.next()).done) ar3.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m3 = i3["return"])) m3.call(i3);
    } finally {
      if (e2) throw e2.error;
    }
  }
  return ar3;
}
function __spread() {
  for (var ar3 = [], i3 = 0; i3 < arguments.length; i3++)
    ar3 = ar3.concat(__read(arguments[i3]));
  return ar3;
}
function __spreadArrays() {
  for (var s2 = 0, i3 = 0, il = arguments.length; i3 < il; i3++) s2 += arguments[i3].length;
  for (var r2 = Array(s2), k5 = 0, i3 = 0; i3 < il; i3++)
    for (var a3 = arguments[i3], j6 = 0, jl = a3.length; j6 < jl; j6++, k5++)
      r2[k5] = a3[j6];
  return r2;
}
function __await(v6) {
  return this instanceof __await ? (this.v = v6, this) : new __await(v6);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g7 = generator.apply(thisArg, _arguments || []), i3, q2 = [];
  return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3;
  function verb(n4) {
    if (g7[n4]) i3[n4] = function(v6) {
      return new Promise(function(a3, b6) {
        q2.push([n4, v6, a3, b6]) > 1 || resume(n4, v6);
      });
    };
  }
  function resume(n4, v6) {
    try {
      step(g7[n4](v6));
    } catch (e2) {
      settle(q2[0][3], e2);
    }
  }
  function step(r2) {
    r2.value instanceof __await ? Promise.resolve(r2.value.v).then(fulfill, reject) : settle(q2[0][2], r2);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f5, v6) {
    if (f5(v6), q2.shift(), q2.length) resume(q2[0][0], q2[0][1]);
  }
}
function __asyncDelegator(o3) {
  var i3, p6;
  return i3 = {}, verb("next"), verb("throw", function(e2) {
    throw e2;
  }), verb("return"), i3[Symbol.iterator] = function() {
    return this;
  }, i3;
  function verb(n4, f5) {
    i3[n4] = o3[n4] ? function(v6) {
      return (p6 = !p6) ? { value: __await(o3[n4](v6)), done: n4 === "return" } : f5 ? f5(v6) : v6;
    } : f5;
  }
}
function __asyncValues(o3) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m3 = o3[Symbol.asyncIterator], i3;
  return m3 ? m3.call(o3) : (o3 = typeof __values === "function" ? __values(o3) : o3[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3);
  function verb(n4) {
    i3[n4] = o3[n4] && function(v6) {
      return new Promise(function(resolve, reject) {
        v6 = o3[n4](v6), settle(resolve, reject, v6.done, v6.value);
      });
    };
  }
  function settle(resolve, reject, d3, v6) {
    Promise.resolve(v6).then(function(v7) {
      resolve({ value: v7, done: d3 });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k5 in mod) if (Object.hasOwnProperty.call(mod, k5)) result[k5] = mod[k5];
  }
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var extendStatics, __assign;
var init_tslib_es6 = __esm({
  "node_modules/@walletconnect/heartbeat/node_modules/tslib/tslib.es6.js"() {
    extendStatics = function(d3, b6) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b7) {
        d4.__proto__ = b7;
      } || function(d4, b7) {
        for (var p6 in b7) if (b7.hasOwnProperty(p6)) d4[p6] = b7[p6];
      };
      return extendStatics(d3, b6);
    };
    __assign = function() {
      __assign = Object.assign || function __assign3(t) {
        for (var s2, i3 = 1, n4 = arguments.length; i3 < n4; i3++) {
          s2 = arguments[i3];
          for (var p6 in s2) if (Object.prototype.hasOwnProperty.call(s2, p6)) t[p6] = s2[p6];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
  }
});

// node_modules/@walletconnect/events/dist/esm/events.js
var IEvents;
var init_events = __esm({
  "node_modules/@walletconnect/events/dist/esm/events.js"() {
    IEvents = class {
    };
  }
});

// node_modules/@walletconnect/events/dist/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  IEvents: () => IEvents
});
var init_esm = __esm({
  "node_modules/@walletconnect/events/dist/esm/index.js"() {
    init_events();
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js
var require_heartbeat = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IHeartBeat = void 0;
    var events_1 = (init_esm(), __toCommonJS(esm_exports));
    var IHeartBeat = class extends events_1.IEvents {
      constructor(opts) {
        super();
      }
    };
    exports.IHeartBeat = IHeartBeat;
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js
var require_types = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_heartbeat(), exports);
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js
var require_heartbeat2 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HEARTBEAT_EVENTS = exports.HEARTBEAT_INTERVAL = void 0;
    var time_1 = require_cjs();
    exports.HEARTBEAT_INTERVAL = time_1.FIVE_SECONDS;
    exports.HEARTBEAT_EVENTS = {
      pulse: "heartbeat_pulse"
    };
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js
var require_constants = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_heartbeat2(), exports);
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js
var require_heartbeat3 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HeartBeat = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var events_1 = require_events();
    var time_1 = require_cjs();
    var types_1 = require_types();
    var constants_1 = require_constants();
    var HeartBeat = class _HeartBeat extends types_1.IHeartBeat {
      constructor(opts) {
        super(opts);
        this.events = new events_1.EventEmitter();
        this.interval = constants_1.HEARTBEAT_INTERVAL;
        this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || constants_1.HEARTBEAT_INTERVAL;
      }
      static init(opts) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          const heartbeat = new _HeartBeat(opts);
          yield heartbeat.init();
          return heartbeat;
        });
      }
      init() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          yield this.initialize();
        });
      }
      stop() {
        clearInterval(this.intervalRef);
      }
      on(event, listener) {
        this.events.on(event, listener);
      }
      once(event, listener) {
        this.events.once(event, listener);
      }
      off(event, listener) {
        this.events.off(event, listener);
      }
      removeListener(event, listener) {
        this.events.removeListener(event, listener);
      }
      initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          this.intervalRef = setInterval(() => this.pulse(), time_1.toMiliseconds(this.interval));
        });
      }
      pulse() {
        this.events.emit(constants_1.HEARTBEAT_EVENTS.pulse);
      }
    };
    exports.HeartBeat = HeartBeat;
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_heartbeat3(), exports);
    tslib_1.__exportStar(require_types(), exports);
    tslib_1.__exportStar(require_constants(), exports);
  }
});

// node_modules/quick-format-unescaped/index.js
var require_quick_format_unescaped = __commonJS({
  "node_modules/quick-format-unescaped/index.js"(exports, module) {
    "use strict";
    function tryStringify(o3) {
      try {
        return JSON.stringify(o3);
      } catch (e2) {
        return '"[Circular]"';
      }
    }
    module.exports = format;
    function format(f5, args, opts) {
      var ss2 = opts && opts.stringify || tryStringify;
      var offset = 1;
      if (typeof f5 === "object" && f5 !== null) {
        var len = args.length + offset;
        if (len === 1) return f5;
        var objects = new Array(len);
        objects[0] = ss2(f5);
        for (var index = 1; index < len; index++) {
          objects[index] = ss2(args[index]);
        }
        return objects.join(" ");
      }
      if (typeof f5 !== "string") {
        return f5;
      }
      var argLen = args.length;
      if (argLen === 0) return f5;
      var str = "";
      var a3 = 1 - offset;
      var lastPos = -1;
      var flen = f5 && f5.length || 0;
      for (var i3 = 0; i3 < flen; ) {
        if (f5.charCodeAt(i3) === 37 && i3 + 1 < flen) {
          lastPos = lastPos > -1 ? lastPos : 0;
          switch (f5.charCodeAt(i3 + 1)) {
            case 100:
            case 102:
              if (a3 >= argLen)
                break;
              if (args[a3] == null) break;
              if (lastPos < i3)
                str += f5.slice(lastPos, i3);
              str += Number(args[a3]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 105:
              if (a3 >= argLen)
                break;
              if (args[a3] == null) break;
              if (lastPos < i3)
                str += f5.slice(lastPos, i3);
              str += Math.floor(Number(args[a3]));
              lastPos = i3 + 2;
              i3++;
              break;
            case 79:
            case 111:
            case 106:
              if (a3 >= argLen)
                break;
              if (args[a3] === void 0) break;
              if (lastPos < i3)
                str += f5.slice(lastPos, i3);
              var type = typeof args[a3];
              if (type === "string") {
                str += "'" + args[a3] + "'";
                lastPos = i3 + 2;
                i3++;
                break;
              }
              if (type === "function") {
                str += args[a3].name || "<anonymous>";
                lastPos = i3 + 2;
                i3++;
                break;
              }
              str += ss2(args[a3]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 115:
              if (a3 >= argLen)
                break;
              if (lastPos < i3)
                str += f5.slice(lastPos, i3);
              str += String(args[a3]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 37:
              if (lastPos < i3)
                str += f5.slice(lastPos, i3);
              str += "%";
              lastPos = i3 + 2;
              i3++;
              a3--;
              break;
          }
          ++a3;
        }
        ++i3;
      }
      if (lastPos === -1)
        return f5;
      else if (lastPos < flen) {
        str += f5.slice(lastPos);
      }
      return str;
    }
  }
});

// node_modules/pino/browser.js
var require_browser = __commonJS({
  "node_modules/pino/browser.js"(exports, module) {
    "use strict";
    var format = require_quick_format_unescaped();
    module.exports = pino;
    var _console = pfGlobalThisOrFallback().console || {};
    var stdSerializers = {
      mapHttpRequest: mock,
      mapHttpResponse: mock,
      wrapRequestSerializer: passthrough,
      wrapResponseSerializer: passthrough,
      wrapErrorSerializer: passthrough,
      req: mock,
      res: mock,
      err: asErrValue
    };
    function shouldSerialize(serialize, serializers) {
      if (Array.isArray(serialize)) {
        const hasToFilter = serialize.filter(function(k5) {
          return k5 !== "!stdSerializers.err";
        });
        return hasToFilter;
      } else if (serialize === true) {
        return Object.keys(serializers);
      }
      return false;
    }
    function pino(opts) {
      opts = opts || {};
      opts.browser = opts.browser || {};
      const transmit2 = opts.browser.transmit;
      if (transmit2 && typeof transmit2.send !== "function") {
        throw Error("pino: transmit option must have a send function");
      }
      const proto = opts.browser.write || _console;
      if (opts.browser.write) opts.browser.asObject = true;
      const serializers = opts.serializers || {};
      const serialize = shouldSerialize(opts.browser.serialize, serializers);
      let stdErrSerialize = opts.browser.serialize;
      if (Array.isArray(opts.browser.serialize) && opts.browser.serialize.indexOf("!stdSerializers.err") > -1) stdErrSerialize = false;
      const levels = ["error", "fatal", "warn", "info", "debug", "trace"];
      if (typeof proto === "function") {
        proto.error = proto.fatal = proto.warn = proto.info = proto.debug = proto.trace = proto;
      }
      if (opts.enabled === false) opts.level = "silent";
      const level = opts.level || "info";
      const logger = Object.create(proto);
      if (!logger.log) logger.log = noop;
      Object.defineProperty(logger, "levelVal", {
        get: getLevelVal
      });
      Object.defineProperty(logger, "level", {
        get: getLevel,
        set: setLevel
      });
      const setOpts = {
        transmit: transmit2,
        serialize,
        asObject: opts.browser.asObject,
        levels,
        timestamp: getTimeFunction(opts)
      };
      logger.levels = pino.levels;
      logger.level = level;
      logger.setMaxListeners = logger.getMaxListeners = logger.emit = logger.addListener = logger.on = logger.prependListener = logger.once = logger.prependOnceListener = logger.removeListener = logger.removeAllListeners = logger.listeners = logger.listenerCount = logger.eventNames = logger.write = logger.flush = noop;
      logger.serializers = serializers;
      logger._serialize = serialize;
      logger._stdErrSerialize = stdErrSerialize;
      logger.child = child;
      if (transmit2) logger._logEvent = createLogEventShape();
      function getLevelVal() {
        return this.level === "silent" ? Infinity : this.levels.values[this.level];
      }
      function getLevel() {
        return this._level;
      }
      function setLevel(level2) {
        if (level2 !== "silent" && !this.levels.values[level2]) {
          throw Error("unknown level " + level2);
        }
        this._level = level2;
        set2(setOpts, logger, "error", "log");
        set2(setOpts, logger, "fatal", "error");
        set2(setOpts, logger, "warn", "error");
        set2(setOpts, logger, "info", "log");
        set2(setOpts, logger, "debug", "log");
        set2(setOpts, logger, "trace", "log");
      }
      function child(bindings, childOptions) {
        if (!bindings) {
          throw new Error("missing bindings for child Pino");
        }
        childOptions = childOptions || {};
        if (serialize && bindings.serializers) {
          childOptions.serializers = bindings.serializers;
        }
        const childOptionsSerializers = childOptions.serializers;
        if (serialize && childOptionsSerializers) {
          var childSerializers = Object.assign({}, serializers, childOptionsSerializers);
          var childSerialize = opts.browser.serialize === true ? Object.keys(childSerializers) : serialize;
          delete bindings.serializers;
          applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize);
        }
        function Child(parent) {
          this._childLevel = (parent._childLevel | 0) + 1;
          this.error = bind(parent, bindings, "error");
          this.fatal = bind(parent, bindings, "fatal");
          this.warn = bind(parent, bindings, "warn");
          this.info = bind(parent, bindings, "info");
          this.debug = bind(parent, bindings, "debug");
          this.trace = bind(parent, bindings, "trace");
          if (childSerializers) {
            this.serializers = childSerializers;
            this._serialize = childSerialize;
          }
          if (transmit2) {
            this._logEvent = createLogEventShape(
              [].concat(parent._logEvent.bindings, bindings)
            );
          }
        }
        Child.prototype = this;
        return new Child(this);
      }
      return logger;
    }
    pino.levels = {
      values: {
        fatal: 60,
        error: 50,
        warn: 40,
        info: 30,
        debug: 20,
        trace: 10
      },
      labels: {
        10: "trace",
        20: "debug",
        30: "info",
        40: "warn",
        50: "error",
        60: "fatal"
      }
    };
    pino.stdSerializers = stdSerializers;
    pino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime });
    function set2(opts, logger, level, fallback) {
      const proto = Object.getPrototypeOf(logger);
      logger[level] = logger.levelVal > logger.levels.values[level] ? noop : proto[level] ? proto[level] : _console[level] || _console[fallback] || noop;
      wrap(opts, logger, level);
    }
    function wrap(opts, logger, level) {
      if (!opts.transmit && logger[level] === noop) return;
      logger[level] = /* @__PURE__ */ function(write) {
        return function LOG() {
          const ts2 = opts.timestamp();
          const args = new Array(arguments.length);
          const proto = Object.getPrototypeOf && Object.getPrototypeOf(this) === _console ? _console : this;
          for (var i3 = 0; i3 < args.length; i3++) args[i3] = arguments[i3];
          if (opts.serialize && !opts.asObject) {
            applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize);
          }
          if (opts.asObject) write.call(proto, asObject(this, level, args, ts2));
          else write.apply(proto, args);
          if (opts.transmit) {
            const transmitLevel = opts.transmit.level || logger.level;
            const transmitValue = pino.levels.values[transmitLevel];
            const methodValue = pino.levels.values[level];
            if (methodValue < transmitValue) return;
            transmit(this, {
              ts: ts2,
              methodLevel: level,
              methodValue,
              transmitLevel,
              transmitValue: pino.levels.values[opts.transmit.level || logger.level],
              send: opts.transmit.send,
              val: logger.levelVal
            }, args);
          }
        };
      }(logger[level]);
    }
    function asObject(logger, level, args, ts2) {
      if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize);
      const argsCloned = args.slice();
      let msg = argsCloned[0];
      const o3 = {};
      if (ts2) {
        o3.time = ts2;
      }
      o3.level = pino.levels.values[level];
      let lvl = (logger._childLevel | 0) + 1;
      if (lvl < 1) lvl = 1;
      if (msg !== null && typeof msg === "object") {
        while (lvl-- && typeof argsCloned[0] === "object") {
          Object.assign(o3, argsCloned.shift());
        }
        msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : void 0;
      } else if (typeof msg === "string") msg = format(argsCloned.shift(), argsCloned);
      if (msg !== void 0) o3.msg = msg;
      return o3;
    }
    function applySerializers(args, serialize, serializers, stdErrSerialize) {
      for (const i3 in args) {
        if (stdErrSerialize && args[i3] instanceof Error) {
          args[i3] = pino.stdSerializers.err(args[i3]);
        } else if (typeof args[i3] === "object" && !Array.isArray(args[i3])) {
          for (const k5 in args[i3]) {
            if (serialize && serialize.indexOf(k5) > -1 && k5 in serializers) {
              args[i3][k5] = serializers[k5](args[i3][k5]);
            }
          }
        }
      }
    }
    function bind(parent, bindings, level) {
      return function() {
        const args = new Array(1 + arguments.length);
        args[0] = bindings;
        for (var i3 = 1; i3 < args.length; i3++) {
          args[i3] = arguments[i3 - 1];
        }
        return parent[level].apply(this, args);
      };
    }
    function transmit(logger, opts, args) {
      const send = opts.send;
      const ts2 = opts.ts;
      const methodLevel = opts.methodLevel;
      const methodValue = opts.methodValue;
      const val = opts.val;
      const bindings = logger._logEvent.bindings;
      applySerializers(
        args,
        logger._serialize || Object.keys(logger.serializers),
        logger.serializers,
        logger._stdErrSerialize === void 0 ? true : logger._stdErrSerialize
      );
      logger._logEvent.ts = ts2;
      logger._logEvent.messages = args.filter(function(arg) {
        return bindings.indexOf(arg) === -1;
      });
      logger._logEvent.level.label = methodLevel;
      logger._logEvent.level.value = methodValue;
      send(methodLevel, logger._logEvent, val);
      logger._logEvent = createLogEventShape(bindings);
    }
    function createLogEventShape(bindings) {
      return {
        ts: 0,
        messages: [],
        bindings: bindings || [],
        level: { label: "", value: 0 }
      };
    }
    function asErrValue(err) {
      const obj = {
        type: err.constructor.name,
        msg: err.message,
        stack: err.stack
      };
      for (const key in err) {
        if (obj[key] === void 0) {
          obj[key] = err[key];
        }
      }
      return obj;
    }
    function getTimeFunction(opts) {
      if (typeof opts.timestamp === "function") {
        return opts.timestamp;
      }
      if (opts.timestamp === false) {
        return nullTime;
      }
      return epochTime;
    }
    function mock() {
      return {};
    }
    function passthrough(a3) {
      return a3;
    }
    function noop() {
    }
    function nullTime() {
      return false;
    }
    function epochTime() {
      return Date.now();
    }
    function unixTime() {
      return Math.round(Date.now() / 1e3);
    }
    function isoTime() {
      return new Date(Date.now()).toISOString();
    }
    function pfGlobalThisOrFallback() {
      function defd(o3) {
        return typeof o3 !== "undefined" && o3;
      }
      try {
        if (typeof globalThis !== "undefined") return globalThis;
        Object.defineProperty(Object.prototype, "globalThis", {
          get: function() {
            delete Object.prototype.globalThis;
            return this.globalThis = this;
          },
          configurable: true
        });
        return globalThis;
      } catch (e2) {
        return defd(self) || defd(window) || defd(this) || {};
      }
    }
  }
});

// node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js
var tslib_es6_exports2 = {};
__export(tslib_es6_exports2, {
  __assign: () => __assign2,
  __asyncDelegator: () => __asyncDelegator2,
  __asyncGenerator: () => __asyncGenerator2,
  __asyncValues: () => __asyncValues2,
  __await: () => __await2,
  __awaiter: () => __awaiter2,
  __classPrivateFieldGet: () => __classPrivateFieldGet2,
  __classPrivateFieldSet: () => __classPrivateFieldSet2,
  __createBinding: () => __createBinding2,
  __decorate: () => __decorate2,
  __exportStar: () => __exportStar2,
  __extends: () => __extends2,
  __generator: () => __generator2,
  __importDefault: () => __importDefault2,
  __importStar: () => __importStar2,
  __makeTemplateObject: () => __makeTemplateObject2,
  __metadata: () => __metadata2,
  __param: () => __param2,
  __read: () => __read2,
  __rest: () => __rest2,
  __spread: () => __spread2,
  __spreadArrays: () => __spreadArrays2,
  __values: () => __values2
});
function __extends2(d3, b6) {
  extendStatics2(d3, b6);
  function __() {
    this.constructor = d3;
  }
  d3.prototype = b6 === null ? Object.create(b6) : (__.prototype = b6.prototype, new __());
}
function __rest2(s2, e2) {
  var t = {};
  for (var p6 in s2) if (Object.prototype.hasOwnProperty.call(s2, p6) && e2.indexOf(p6) < 0)
    t[p6] = s2[p6];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p6 = Object.getOwnPropertySymbols(s2); i3 < p6.length; i3++) {
      if (e2.indexOf(p6[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p6[i3]))
        t[p6[i3]] = s2[p6[i3]];
    }
  return t;
}
function __decorate2(decorators, target, key, desc) {
  var c5 = arguments.length, r2 = c5 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d3 = decorators[i3]) r2 = (c5 < 3 ? d3(r2) : c5 > 3 ? d3(target, key, r2) : d3(target, key)) || r2;
  return c5 > 3 && r2 && Object.defineProperty(target, key, r2), r2;
}
function __param2(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata2(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter2(thisArg, _arguments, P5, generator) {
  function adopt(value) {
    return value instanceof P5 ? value : new P5(function(resolve) {
      resolve(value);
    });
  }
  return new (P5 || (P5 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator2(thisArg, body) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f5, y7, t, g7;
  return g7 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g7[Symbol.iterator] = function() {
    return this;
  }), g7;
  function verb(n4) {
    return function(v6) {
      return step([n4, v6]);
    };
  }
  function step(op) {
    if (f5) throw new TypeError("Generator is already executing.");
    while (_5) try {
      if (f5 = 1, y7 && (t = op[0] & 2 ? y7["return"] : op[0] ? y7["throw"] || ((t = y7["return"]) && t.call(y7), 0) : y7.next) && !(t = t.call(y7, op[1])).done) return t;
      if (y7 = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _5.label++;
          return { value: op[1], done: false };
        case 5:
          _5.label++;
          y7 = op[1];
          op = [0];
          continue;
        case 7:
          op = _5.ops.pop();
          _5.trys.pop();
          continue;
        default:
          if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _5 = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _5.label = op[1];
            break;
          }
          if (op[0] === 6 && _5.label < t[1]) {
            _5.label = t[1];
            t = op;
            break;
          }
          if (t && _5.label < t[2]) {
            _5.label = t[2];
            _5.ops.push(op);
            break;
          }
          if (t[2]) _5.ops.pop();
          _5.trys.pop();
          continue;
      }
      op = body.call(thisArg, _5);
    } catch (e2) {
      op = [6, e2];
      y7 = 0;
    } finally {
      f5 = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding2(o3, m3, k5, k22) {
  if (k22 === void 0) k22 = k5;
  o3[k22] = m3[k5];
}
function __exportStar2(m3, exports) {
  for (var p6 in m3) if (p6 !== "default" && !exports.hasOwnProperty(p6)) exports[p6] = m3[p6];
}
function __values2(o3) {
  var s2 = typeof Symbol === "function" && Symbol.iterator, m3 = s2 && o3[s2], i3 = 0;
  if (m3) return m3.call(o3);
  if (o3 && typeof o3.length === "number") return {
    next: function() {
      if (o3 && i3 >= o3.length) o3 = void 0;
      return { value: o3 && o3[i3++], done: !o3 };
    }
  };
  throw new TypeError(s2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read2(o3, n4) {
  var m3 = typeof Symbol === "function" && o3[Symbol.iterator];
  if (!m3) return o3;
  var i3 = m3.call(o3), r2, ar3 = [], e2;
  try {
    while ((n4 === void 0 || n4-- > 0) && !(r2 = i3.next()).done) ar3.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m3 = i3["return"])) m3.call(i3);
    } finally {
      if (e2) throw e2.error;
    }
  }
  return ar3;
}
function __spread2() {
  for (var ar3 = [], i3 = 0; i3 < arguments.length; i3++)
    ar3 = ar3.concat(__read2(arguments[i3]));
  return ar3;
}
function __spreadArrays2() {
  for (var s2 = 0, i3 = 0, il = arguments.length; i3 < il; i3++) s2 += arguments[i3].length;
  for (var r2 = Array(s2), k5 = 0, i3 = 0; i3 < il; i3++)
    for (var a3 = arguments[i3], j6 = 0, jl = a3.length; j6 < jl; j6++, k5++)
      r2[k5] = a3[j6];
  return r2;
}
function __await2(v6) {
  return this instanceof __await2 ? (this.v = v6, this) : new __await2(v6);
}
function __asyncGenerator2(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g7 = generator.apply(thisArg, _arguments || []), i3, q2 = [];
  return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3;
  function verb(n4) {
    if (g7[n4]) i3[n4] = function(v6) {
      return new Promise(function(a3, b6) {
        q2.push([n4, v6, a3, b6]) > 1 || resume(n4, v6);
      });
    };
  }
  function resume(n4, v6) {
    try {
      step(g7[n4](v6));
    } catch (e2) {
      settle(q2[0][3], e2);
    }
  }
  function step(r2) {
    r2.value instanceof __await2 ? Promise.resolve(r2.value.v).then(fulfill, reject) : settle(q2[0][2], r2);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f5, v6) {
    if (f5(v6), q2.shift(), q2.length) resume(q2[0][0], q2[0][1]);
  }
}
function __asyncDelegator2(o3) {
  var i3, p6;
  return i3 = {}, verb("next"), verb("throw", function(e2) {
    throw e2;
  }), verb("return"), i3[Symbol.iterator] = function() {
    return this;
  }, i3;
  function verb(n4, f5) {
    i3[n4] = o3[n4] ? function(v6) {
      return (p6 = !p6) ? { value: __await2(o3[n4](v6)), done: n4 === "return" } : f5 ? f5(v6) : v6;
    } : f5;
  }
}
function __asyncValues2(o3) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m3 = o3[Symbol.asyncIterator], i3;
  return m3 ? m3.call(o3) : (o3 = typeof __values2 === "function" ? __values2(o3) : o3[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3);
  function verb(n4) {
    i3[n4] = o3[n4] && function(v6) {
      return new Promise(function(resolve, reject) {
        v6 = o3[n4](v6), settle(resolve, reject, v6.done, v6.value);
      });
    };
  }
  function settle(resolve, reject, d3, v6) {
    Promise.resolve(v6).then(function(v7) {
      resolve({ value: v7, done: d3 });
    }, reject);
  }
}
function __makeTemplateObject2(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar2(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k5 in mod) if (Object.hasOwnProperty.call(mod, k5)) result[k5] = mod[k5];
  }
  result.default = mod;
  return result;
}
function __importDefault2(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet2(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet2(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var extendStatics2, __assign2;
var init_tslib_es62 = __esm({
  "node_modules/@walletconnect/environment/node_modules/tslib/tslib.es6.js"() {
    extendStatics2 = function(d3, b6) {
      extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b7) {
        d4.__proto__ = b7;
      } || function(d4, b7) {
        for (var p6 in b7) if (b7.hasOwnProperty(p6)) d4[p6] = b7[p6];
      };
      return extendStatics2(d3, b6);
    };
    __assign2 = function() {
      __assign2 = Object.assign || function __assign3(t) {
        for (var s2, i3 = 1, n4 = arguments.length; i3 < n4; i3++) {
          s2 = arguments[i3];
          for (var p6 in s2) if (Object.prototype.hasOwnProperty.call(s2, p6)) t[p6] = s2[p6];
        }
        return t;
      };
      return __assign2.apply(this, arguments);
    };
  }
});

// node_modules/@walletconnect/environment/dist/cjs/crypto.js
var require_crypto = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/crypto.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;
    function getBrowerCrypto() {
      return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};
    }
    exports.getBrowerCrypto = getBrowerCrypto;
    function getSubtleCrypto() {
      const browserCrypto = getBrowerCrypto();
      return browserCrypto.subtle || browserCrypto.webkitSubtle;
    }
    exports.getSubtleCrypto = getSubtleCrypto;
    function isBrowserCryptoAvailable() {
      return !!getBrowerCrypto() && !!getSubtleCrypto();
    }
    exports.isBrowserCryptoAvailable = isBrowserCryptoAvailable;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/env.js
var require_env = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/env.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowser = exports.isNode = exports.isReactNative = void 0;
    function isReactNative() {
      return typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative";
    }
    exports.isReactNative = isReactNative;
    function isNode2() {
      return typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined";
    }
    exports.isNode = isNode2;
    function isBrowser() {
      return !isReactNative() && !isNode2();
    }
    exports.isBrowser = isBrowser;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/index.js
var require_cjs3 = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es62(), __toCommonJS(tslib_es6_exports2));
    tslib_1.__exportStar(require_crypto(), exports);
    tslib_1.__exportStar(require_env(), exports);
  }
});

// node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/browser.js
var require_browser2 = __commonJS({
  "node_modules/@walletconnect/jsonrpc-ws-connection/node_modules/ws/browser.js"(exports, module) {
    "use strict";
    module.exports = function() {
      throw new Error(
        "ws does not work in the browser. Browser clients must use the native WebSocket object"
      );
    };
  }
});

// node_modules/lodash.isequal/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.isequal/index.js"(exports, module) {
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var asyncTag = "[object AsyncFunction]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var nullTag = "[object Null]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var proxyTag = "[object Proxy]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var undefinedTag = "[object Undefined]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e2) {
      }
    }();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function arrayFilter(array, predicate) {
      var index = -1, length2 = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length2) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1, length2 = values.length, offset = array.length;
      while (++index < length2) {
        array[offset + index] = values[index];
      }
      return array;
    }
    function arraySome(array, predicate) {
      var index = -1, length2 = array == null ? 0 : array.length;
      while (++index < length2) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    function baseTimes(n4, iteratee) {
      var index = -1, result = Array(n4);
      while (++index < n4) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    function setToArray(set2) {
      var index = -1, result = Array(set2.size);
      set2.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var nativeObjectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var Symbol2 = root.Symbol;
    var Uint8Array2 = root.Uint8Array;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice = arrayProto.splice;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var nativeKeys = overArg(Object.keys, Object);
    var DataView2 = getNative(root, "DataView");
    var Map2 = getNative(root, "Map");
    var Promise2 = getNative(root, "Promise");
    var Set2 = getNative(root, "Set");
    var WeakMap2 = getNative(root, "WeakMap");
    var nativeCreate = getNative(Object, "create");
    var dataViewCtorString = toSource(DataView2);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap2);
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function Hash(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values) {
      var index = -1, length2 = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length2) {
        this.add(values[index]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    function stackGet(key) {
      return this.__data__.get(key);
    }
    function stackHas(key) {
      return this.__data__.has(key);
    }
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length2 = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length2)))) {
          result.push(key);
        }
      }
      return result;
    }
    function assocIndexOf(array, key) {
      var length2 = array.length;
      while (length2--) {
        if (eq(array[length2][0], key)) {
          return length2;
        }
      }
      return -1;
    }
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys2, getSymbols);
    }
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e2) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    var getTag = baseGetTag;
    if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    function isIndex(value, length2) {
      length2 = length2 == null ? MAX_SAFE_INTEGER : length2;
      return !!length2 && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length2);
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e2) {
        }
        try {
          return func + "";
        } catch (e2) {
        }
      }
      return "";
    }
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    var isArguments = baseIsArguments(/* @__PURE__ */ function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    var isBuffer = nativeIsBuffer || stubFalse;
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function keys2(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function stubArray() {
      return [];
    }
    function stubFalse() {
      return false;
    }
    module.exports = isEqual;
  }
});

// node_modules/unfetch/dist/unfetch.module.js
var unfetch_module_exports = {};
__export(unfetch_module_exports, {
  default: () => unfetch_module_default
});
function unfetch_module_default(e2, n4) {
  return n4 = n4 || {}, new Promise(function(t, r2) {
    var s2 = new XMLHttpRequest(), o3 = [], u4 = [], i3 = {}, a3 = function() {
      return { ok: 2 == (s2.status / 100 | 0), statusText: s2.statusText, status: s2.status, url: s2.responseURL, text: function() {
        return Promise.resolve(s2.responseText);
      }, json: function() {
        return Promise.resolve(s2.responseText).then(JSON.parse);
      }, blob: function() {
        return Promise.resolve(new Blob([s2.response]));
      }, clone: a3, headers: { keys: function() {
        return o3;
      }, entries: function() {
        return u4;
      }, get: function(e3) {
        return i3[e3.toLowerCase()];
      }, has: function(e3) {
        return e3.toLowerCase() in i3;
      } } };
    };
    for (var l4 in s2.open(n4.method || "get", e2, true), s2.onload = function() {
      s2.getAllResponseHeaders().replace(/^(.*?):[^\S\n]*([\s\S]*?)$/gm, function(e3, n5, t2) {
        o3.push(n5 = n5.toLowerCase()), u4.push([n5, t2]), i3[n5] = i3[n5] ? i3[n5] + "," + t2 : t2;
      }), t(a3());
    }, s2.onerror = r2, s2.withCredentials = "include" == n4.credentials, n4.headers) s2.setRequestHeader(l4, n4.headers[l4]);
    s2.send(n4.body || null);
  });
}
var init_unfetch_module = __esm({
  "node_modules/unfetch/dist/unfetch.module.js"() {
  }
});

// node_modules/isomorphic-unfetch/browser.js
var require_browser3 = __commonJS({
  "node_modules/isomorphic-unfetch/browser.js"(exports, module) {
    module.exports = self.fetch || (self.fetch = (init_unfetch_module(), __toCommonJS(unfetch_module_exports)).default || (init_unfetch_module(), __toCommonJS(unfetch_module_exports)));
  }
});

// node_modules/cross-fetch/dist/browser-ponyfill.js
var require_browser_ponyfill = __commonJS({
  "node_modules/cross-fetch/dist/browser-ponyfill.js"(exports, module) {
    var __global__ = typeof globalThis !== "undefined" && globalThis || typeof self !== "undefined" && self || typeof global !== "undefined" && global;
    var __globalThis__ = function() {
      function F3() {
        this.fetch = false;
        this.DOMException = __global__.DOMException;
      }
      F3.prototype = __global__;
      return new F3();
    }();
    (function(globalThis2) {
      var irrelevant = function(exports2) {
        var g7 = typeof globalThis2 !== "undefined" && globalThis2 || typeof self !== "undefined" && self || // eslint-disable-next-line no-undef
        typeof global !== "undefined" && global || {};
        var support = {
          searchParams: "URLSearchParams" in g7,
          iterable: "Symbol" in g7 && "iterator" in Symbol,
          blob: "FileReader" in g7 && "Blob" in g7 && function() {
            try {
              new Blob();
              return true;
            } catch (e2) {
              return false;
            }
          }(),
          formData: "FormData" in g7,
          arrayBuffer: "ArrayBuffer" in g7
        };
        function isDataView(obj) {
          return obj && DataView.prototype.isPrototypeOf(obj);
        }
        if (support.arrayBuffer) {
          var viewClasses = [
            "[object Int8Array]",
            "[object Uint8Array]",
            "[object Uint8ClampedArray]",
            "[object Int16Array]",
            "[object Uint16Array]",
            "[object Int32Array]",
            "[object Uint32Array]",
            "[object Float32Array]",
            "[object Float64Array]"
          ];
          var isArrayBufferView = ArrayBuffer.isView || function(obj) {
            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
          };
        }
        function normalizeName(name2) {
          if (typeof name2 !== "string") {
            name2 = String(name2);
          }
          if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name2) || name2 === "") {
            throw new TypeError('Invalid character in header field name: "' + name2 + '"');
          }
          return name2.toLowerCase();
        }
        function normalizeValue(value) {
          if (typeof value !== "string") {
            value = String(value);
          }
          return value;
        }
        function iteratorFor(items) {
          var iterator = {
            next: function() {
              var value = items.shift();
              return { done: value === void 0, value };
            }
          };
          if (support.iterable) {
            iterator[Symbol.iterator] = function() {
              return iterator;
            };
          }
          return iterator;
        }
        function Headers(headers) {
          this.map = {};
          if (headers instanceof Headers) {
            headers.forEach(function(value, name2) {
              this.append(name2, value);
            }, this);
          } else if (Array.isArray(headers)) {
            headers.forEach(function(header) {
              if (header.length != 2) {
                throw new TypeError("Headers constructor: expected name/value pair to be length 2, found" + header.length);
              }
              this.append(header[0], header[1]);
            }, this);
          } else if (headers) {
            Object.getOwnPropertyNames(headers).forEach(function(name2) {
              this.append(name2, headers[name2]);
            }, this);
          }
        }
        Headers.prototype.append = function(name2, value) {
          name2 = normalizeName(name2);
          value = normalizeValue(value);
          var oldValue = this.map[name2];
          this.map[name2] = oldValue ? oldValue + ", " + value : value;
        };
        Headers.prototype["delete"] = function(name2) {
          delete this.map[normalizeName(name2)];
        };
        Headers.prototype.get = function(name2) {
          name2 = normalizeName(name2);
          return this.has(name2) ? this.map[name2] : null;
        };
        Headers.prototype.has = function(name2) {
          return this.map.hasOwnProperty(normalizeName(name2));
        };
        Headers.prototype.set = function(name2, value) {
          this.map[normalizeName(name2)] = normalizeValue(value);
        };
        Headers.prototype.forEach = function(callback, thisArg) {
          for (var name2 in this.map) {
            if (this.map.hasOwnProperty(name2)) {
              callback.call(thisArg, this.map[name2], name2, this);
            }
          }
        };
        Headers.prototype.keys = function() {
          var items = [];
          this.forEach(function(value, name2) {
            items.push(name2);
          });
          return iteratorFor(items);
        };
        Headers.prototype.values = function() {
          var items = [];
          this.forEach(function(value) {
            items.push(value);
          });
          return iteratorFor(items);
        };
        Headers.prototype.entries = function() {
          var items = [];
          this.forEach(function(value, name2) {
            items.push([name2, value]);
          });
          return iteratorFor(items);
        };
        if (support.iterable) {
          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
        }
        function consumed(body) {
          if (body._noBody) return;
          if (body.bodyUsed) {
            return Promise.reject(new TypeError("Already read"));
          }
          body.bodyUsed = true;
        }
        function fileReaderReady(reader) {
          return new Promise(function(resolve, reject) {
            reader.onload = function() {
              resolve(reader.result);
            };
            reader.onerror = function() {
              reject(reader.error);
            };
          });
        }
        function readBlobAsArrayBuffer(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsArrayBuffer(blob);
          return promise;
        }
        function readBlobAsText(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);
          var encoding = match ? match[1] : "utf-8";
          reader.readAsText(blob, encoding);
          return promise;
        }
        function readArrayBufferAsText(buf) {
          var view = new Uint8Array(buf);
          var chars = new Array(view.length);
          for (var i3 = 0; i3 < view.length; i3++) {
            chars[i3] = String.fromCharCode(view[i3]);
          }
          return chars.join("");
        }
        function bufferClone(buf) {
          if (buf.slice) {
            return buf.slice(0);
          } else {
            var view = new Uint8Array(buf.byteLength);
            view.set(new Uint8Array(buf));
            return view.buffer;
          }
        }
        function Body() {
          this.bodyUsed = false;
          this._initBody = function(body) {
            this.bodyUsed = this.bodyUsed;
            this._bodyInit = body;
            if (!body) {
              this._noBody = true;
              this._bodyText = "";
            } else if (typeof body === "string") {
              this._bodyText = body;
            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
              this._bodyBlob = body;
            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
              this._bodyFormData = body;
            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
              this._bodyText = body.toString();
            } else if (support.arrayBuffer && support.blob && isDataView(body)) {
              this._bodyArrayBuffer = bufferClone(body.buffer);
              this._bodyInit = new Blob([this._bodyArrayBuffer]);
            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
              this._bodyArrayBuffer = bufferClone(body);
            } else {
              this._bodyText = body = Object.prototype.toString.call(body);
            }
            if (!this.headers.get("content-type")) {
              if (typeof body === "string") {
                this.headers.set("content-type", "text/plain;charset=UTF-8");
              } else if (this._bodyBlob && this._bodyBlob.type) {
                this.headers.set("content-type", this._bodyBlob.type);
              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8");
              }
            }
          };
          if (support.blob) {
            this.blob = function() {
              var rejected = consumed(this);
              if (rejected) {
                return rejected;
              }
              if (this._bodyBlob) {
                return Promise.resolve(this._bodyBlob);
              } else if (this._bodyArrayBuffer) {
                return Promise.resolve(new Blob([this._bodyArrayBuffer]));
              } else if (this._bodyFormData) {
                throw new Error("could not read FormData body as blob");
              } else {
                return Promise.resolve(new Blob([this._bodyText]));
              }
            };
          }
          this.arrayBuffer = function() {
            if (this._bodyArrayBuffer) {
              var isConsumed = consumed(this);
              if (isConsumed) {
                return isConsumed;
              } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {
                return Promise.resolve(
                  this._bodyArrayBuffer.buffer.slice(
                    this._bodyArrayBuffer.byteOffset,
                    this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength
                  )
                );
              } else {
                return Promise.resolve(this._bodyArrayBuffer);
              }
            } else if (support.blob) {
              return this.blob().then(readBlobAsArrayBuffer);
            } else {
              throw new Error("could not read as ArrayBuffer");
            }
          };
          this.text = function() {
            var rejected = consumed(this);
            if (rejected) {
              return rejected;
            }
            if (this._bodyBlob) {
              return readBlobAsText(this._bodyBlob);
            } else if (this._bodyArrayBuffer) {
              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
            } else if (this._bodyFormData) {
              throw new Error("could not read FormData body as text");
            } else {
              return Promise.resolve(this._bodyText);
            }
          };
          if (support.formData) {
            this.formData = function() {
              return this.text().then(decode6);
            };
          }
          this.json = function() {
            return this.text().then(JSON.parse);
          };
          return this;
        }
        var methods = ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE"];
        function normalizeMethod(method) {
          var upcased = method.toUpperCase();
          return methods.indexOf(upcased) > -1 ? upcased : method;
        }
        function Request(input, options) {
          if (!(this instanceof Request)) {
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          }
          options = options || {};
          var body = options.body;
          if (input instanceof Request) {
            if (input.bodyUsed) {
              throw new TypeError("Already read");
            }
            this.url = input.url;
            this.credentials = input.credentials;
            if (!options.headers) {
              this.headers = new Headers(input.headers);
            }
            this.method = input.method;
            this.mode = input.mode;
            this.signal = input.signal;
            if (!body && input._bodyInit != null) {
              body = input._bodyInit;
              input.bodyUsed = true;
            }
          } else {
            this.url = String(input);
          }
          this.credentials = options.credentials || this.credentials || "same-origin";
          if (options.headers || !this.headers) {
            this.headers = new Headers(options.headers);
          }
          this.method = normalizeMethod(options.method || this.method || "GET");
          this.mode = options.mode || this.mode || null;
          this.signal = options.signal || this.signal || function() {
            if ("AbortController" in g7) {
              var ctrl = new AbortController();
              return ctrl.signal;
            }
          }();
          this.referrer = null;
          if ((this.method === "GET" || this.method === "HEAD") && body) {
            throw new TypeError("Body not allowed for GET or HEAD requests");
          }
          this._initBody(body);
          if (this.method === "GET" || this.method === "HEAD") {
            if (options.cache === "no-store" || options.cache === "no-cache") {
              var reParamSearch = /([?&])_=[^&]*/;
              if (reParamSearch.test(this.url)) {
                this.url = this.url.replace(reParamSearch, "$1_=" + (/* @__PURE__ */ new Date()).getTime());
              } else {
                var reQueryString = /\?/;
                this.url += (reQueryString.test(this.url) ? "&" : "?") + "_=" + (/* @__PURE__ */ new Date()).getTime();
              }
            }
          }
        }
        Request.prototype.clone = function() {
          return new Request(this, { body: this._bodyInit });
        };
        function decode6(body) {
          var form = new FormData();
          body.trim().split("&").forEach(function(bytes) {
            if (bytes) {
              var split = bytes.split("=");
              var name2 = split.shift().replace(/\+/g, " ");
              var value = split.join("=").replace(/\+/g, " ");
              form.append(decodeURIComponent(name2), decodeURIComponent(value));
            }
          });
          return form;
        }
        function parseHeaders(rawHeaders) {
          var headers = new Headers();
          var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, " ");
          preProcessedHeaders.split("\r").map(function(header) {
            return header.indexOf("\n") === 0 ? header.substr(1, header.length) : header;
          }).forEach(function(line) {
            var parts = line.split(":");
            var key = parts.shift().trim();
            if (key) {
              var value = parts.join(":").trim();
              try {
                headers.append(key, value);
              } catch (error) {
                console.warn("Response " + error.message);
              }
            }
          });
          return headers;
        }
        Body.call(Request.prototype);
        function Response(bodyInit, options) {
          if (!(this instanceof Response)) {
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          }
          if (!options) {
            options = {};
          }
          this.type = "default";
          this.status = options.status === void 0 ? 200 : options.status;
          if (this.status < 200 || this.status > 599) {
            throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].");
          }
          this.ok = this.status >= 200 && this.status < 300;
          this.statusText = options.statusText === void 0 ? "" : "" + options.statusText;
          this.headers = new Headers(options.headers);
          this.url = options.url || "";
          this._initBody(bodyInit);
        }
        Body.call(Response.prototype);
        Response.prototype.clone = function() {
          return new Response(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new Headers(this.headers),
            url: this.url
          });
        };
        Response.error = function() {
          var response = new Response(null, { status: 200, statusText: "" });
          response.ok = false;
          response.status = 0;
          response.type = "error";
          return response;
        };
        var redirectStatuses = [301, 302, 303, 307, 308];
        Response.redirect = function(url, status) {
          if (redirectStatuses.indexOf(status) === -1) {
            throw new RangeError("Invalid status code");
          }
          return new Response(null, { status, headers: { location: url } });
        };
        exports2.DOMException = g7.DOMException;
        try {
          new exports2.DOMException();
        } catch (err) {
          exports2.DOMException = function(message, name2) {
            this.message = message;
            this.name = name2;
            var error = Error(message);
            this.stack = error.stack;
          };
          exports2.DOMException.prototype = Object.create(Error.prototype);
          exports2.DOMException.prototype.constructor = exports2.DOMException;
        }
        function fetch2(input, init) {
          return new Promise(function(resolve, reject) {
            var request = new Request(input, init);
            if (request.signal && request.signal.aborted) {
              return reject(new exports2.DOMException("Aborted", "AbortError"));
            }
            var xhr = new XMLHttpRequest();
            function abortXhr() {
              xhr.abort();
            }
            xhr.onload = function() {
              var options = {
                statusText: xhr.statusText,
                headers: parseHeaders(xhr.getAllResponseHeaders() || "")
              };
              if (request.url.indexOf("file://") === 0 && (xhr.status < 200 || xhr.status > 599)) {
                options.status = 200;
              } else {
                options.status = xhr.status;
              }
              options.url = "responseURL" in xhr ? xhr.responseURL : options.headers.get("X-Request-URL");
              var body = "response" in xhr ? xhr.response : xhr.responseText;
              setTimeout(function() {
                resolve(new Response(body, options));
              }, 0);
            };
            xhr.onerror = function() {
              setTimeout(function() {
                reject(new TypeError("Network request failed"));
              }, 0);
            };
            xhr.ontimeout = function() {
              setTimeout(function() {
                reject(new TypeError("Network request timed out"));
              }, 0);
            };
            xhr.onabort = function() {
              setTimeout(function() {
                reject(new exports2.DOMException("Aborted", "AbortError"));
              }, 0);
            };
            function fixUrl(url) {
              try {
                return url === "" && g7.location.href ? g7.location.href : url;
              } catch (e2) {
                return url;
              }
            }
            xhr.open(request.method, fixUrl(request.url), true);
            if (request.credentials === "include") {
              xhr.withCredentials = true;
            } else if (request.credentials === "omit") {
              xhr.withCredentials = false;
            }
            if ("responseType" in xhr) {
              if (support.blob) {
                xhr.responseType = "blob";
              } else if (support.arrayBuffer) {
                xhr.responseType = "arraybuffer";
              }
            }
            if (init && typeof init.headers === "object" && !(init.headers instanceof Headers || g7.Headers && init.headers instanceof g7.Headers)) {
              var names = [];
              Object.getOwnPropertyNames(init.headers).forEach(function(name2) {
                names.push(normalizeName(name2));
                xhr.setRequestHeader(name2, normalizeValue(init.headers[name2]));
              });
              request.headers.forEach(function(value, name2) {
                if (names.indexOf(name2) === -1) {
                  xhr.setRequestHeader(name2, value);
                }
              });
            } else {
              request.headers.forEach(function(value, name2) {
                xhr.setRequestHeader(name2, value);
              });
            }
            if (request.signal) {
              request.signal.addEventListener("abort", abortXhr);
              xhr.onreadystatechange = function() {
                if (xhr.readyState === 4) {
                  request.signal.removeEventListener("abort", abortXhr);
                }
              };
            }
            xhr.send(typeof request._bodyInit === "undefined" ? null : request._bodyInit);
          });
        }
        fetch2.polyfill = true;
        if (!g7.fetch) {
          g7.fetch = fetch2;
          g7.Headers = Headers;
          g7.Request = Request;
          g7.Response = Response;
        }
        exports2.Headers = Headers;
        exports2.Request = Request;
        exports2.Response = Response;
        exports2.fetch = fetch2;
        Object.defineProperty(exports2, "__esModule", { value: true });
        return exports2;
      }({});
    })(__globalThis__);
    __globalThis__.fetch.ponyfill = true;
    delete __globalThis__.fetch.polyfill;
    var ctx = __global__.fetch ? __global__ : __globalThis__;
    exports = ctx.fetch;
    exports.default = ctx.fetch;
    exports.fetch = ctx.fetch;
    exports.Headers = ctx.Headers;
    exports.Request = ctx.Request;
    exports.Response = ctx.Response;
    module.exports = exports;
  }
});

// node_modules/@walletconnect/ethereum-provider/dist/index.es.js
var import_events10 = __toESM(require_events());

// node_modules/@walletconnect/core/dist/index.es.js
var import_events5 = __toESM(require_events());

// node_modules/destr/dist/index.mjs
var suspectProtoRx = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/;
var suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
var JsonSigRx = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
function jsonParseTransform(key, value) {
  if (key === "__proto__" || key === "constructor" && value && typeof value === "object" && "prototype" in value) {
    warnKeyDropped(key);
    return;
  }
  return value;
}
function warnKeyDropped(key) {
  console.warn(`[destr] Dropping "${key}" key to prevent prototype pollution.`);
}
function destr(value, options = {}) {
  if (typeof value !== "string") {
    return value;
  }
  if (value[0] === '"' && value[value.length - 1] === '"' && value.indexOf("\\") === -1) {
    return value.slice(1, -1);
  }
  const _value = value.trim();
  if (_value.length <= 9) {
    switch (_value.toLowerCase()) {
      case "true": {
        return true;
      }
      case "false": {
        return false;
      }
      case "undefined": {
        return void 0;
      }
      case "null": {
        return null;
      }
      case "nan": {
        return Number.NaN;
      }
      case "infinity": {
        return Number.POSITIVE_INFINITY;
      }
      case "-infinity": {
        return Number.NEGATIVE_INFINITY;
      }
    }
  }
  if (!JsonSigRx.test(value)) {
    if (options.strict) {
      throw new SyntaxError("[destr] Invalid JSON");
    }
    return value;
  }
  try {
    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {
      if (options.strict) {
        throw new Error("[destr] Possible prototype pollution");
      }
      return JSON.parse(value, jsonParseTransform);
    }
    return JSON.parse(value);
  } catch (error) {
    if (options.strict) {
      throw error;
    }
    return value;
  }
}

// node_modules/unstorage/dist/shared/unstorage.CoCt7NXC.mjs
function wrapToPromise(value) {
  if (!value || typeof value.then !== "function") {
    return Promise.resolve(value);
  }
  return value;
}
function asyncCall(function_, ...arguments_) {
  try {
    return wrapToPromise(function_(...arguments_));
  } catch (error) {
    return Promise.reject(error);
  }
}
function isPrimitive(value) {
  const type = typeof value;
  return value === null || type !== "object" && type !== "function";
}
function isPureObject(value) {
  const proto = Object.getPrototypeOf(value);
  return !proto || proto.isPrototypeOf(Object);
}
function stringify(value) {
  if (isPrimitive(value)) {
    return String(value);
  }
  if (isPureObject(value) || Array.isArray(value)) {
    return JSON.stringify(value);
  }
  if (typeof value.toJSON === "function") {
    return stringify(value.toJSON());
  }
  throw new Error("[unstorage] Cannot stringify value!");
}
var BASE64_PREFIX = "base64:";
function serializeRaw(value) {
  if (typeof value === "string") {
    return value;
  }
  return BASE64_PREFIX + base64Encode(value);
}
function deserializeRaw(value) {
  if (typeof value !== "string") {
    return value;
  }
  if (!value.startsWith(BASE64_PREFIX)) {
    return value;
  }
  return base64Decode(value.slice(BASE64_PREFIX.length));
}
function base64Decode(input) {
  if (globalThis.Buffer) {
    return Buffer.from(input, "base64");
  }
  return Uint8Array.from(
    globalThis.atob(input),
    (c5) => c5.codePointAt(0)
  );
}
function base64Encode(input) {
  if (globalThis.Buffer) {
    return Buffer.from(input).toString("base64");
  }
  return globalThis.btoa(String.fromCodePoint(...input));
}
function normalizeKey(key) {
  var _a;
  if (!key) {
    return "";
  }
  return ((_a = key.split("?")[0]) == null ? void 0 : _a.replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "")) || "";
}
function joinKeys(...keys2) {
  return normalizeKey(keys2.join(":"));
}
function normalizeBaseKey(base3) {
  base3 = normalizeKey(base3);
  return base3 ? base3 + ":" : "";
}
function filterKeyByDepth(key, depth) {
  if (depth === void 0) {
    return true;
  }
  let substrCount = 0;
  let index = key.indexOf(":");
  while (index > -1) {
    substrCount++;
    index = key.indexOf(":", index + 1);
  }
  return substrCount <= depth;
}
function filterKeyByBase(key, base3) {
  if (base3) {
    return key.startsWith(base3) && key[key.length - 1] !== "$";
  }
  return key[key.length - 1] !== "$";
}

// node_modules/unstorage/dist/index.mjs
function defineDriver(factory) {
  return factory;
}
var DRIVER_NAME = "memory";
var memory = defineDriver(() => {
  const data = /* @__PURE__ */ new Map();
  return {
    name: DRIVER_NAME,
    getInstance: () => data,
    hasItem(key) {
      return data.has(key);
    },
    getItem(key) {
      return data.get(key) ?? null;
    },
    getItemRaw(key) {
      return data.get(key) ?? null;
    },
    setItem(key, value) {
      data.set(key, value);
    },
    setItemRaw(key, value) {
      data.set(key, value);
    },
    removeItem(key) {
      data.delete(key);
    },
    getKeys() {
      return [...data.keys()];
    },
    clear() {
      data.clear();
    },
    dispose() {
      data.clear();
    }
  };
});
function createStorage(options = {}) {
  const context = {
    mounts: { "": options.driver || memory() },
    mountpoints: [""],
    watching: false,
    watchListeners: [],
    unwatch: {}
  };
  const getMount = (key) => {
    for (const base3 of context.mountpoints) {
      if (key.startsWith(base3)) {
        return {
          base: base3,
          relativeKey: key.slice(base3.length),
          driver: context.mounts[base3]
        };
      }
    }
    return {
      base: "",
      relativeKey: key,
      driver: context.mounts[""]
    };
  };
  const getMounts = (base3, includeParent) => {
    return context.mountpoints.filter(
      (mountpoint) => mountpoint.startsWith(base3) || includeParent && base3.startsWith(mountpoint)
    ).map((mountpoint) => ({
      relativeBase: base3.length > mountpoint.length ? base3.slice(mountpoint.length) : void 0,
      mountpoint,
      driver: context.mounts[mountpoint]
    }));
  };
  const onChange = (event, key) => {
    if (!context.watching) {
      return;
    }
    key = normalizeKey(key);
    for (const listener of context.watchListeners) {
      listener(event, key);
    }
  };
  const startWatch = async () => {
    if (context.watching) {
      return;
    }
    context.watching = true;
    for (const mountpoint in context.mounts) {
      context.unwatch[mountpoint] = await watch(
        context.mounts[mountpoint],
        onChange,
        mountpoint
      );
    }
  };
  const stopWatch = async () => {
    if (!context.watching) {
      return;
    }
    for (const mountpoint in context.unwatch) {
      await context.unwatch[mountpoint]();
    }
    context.unwatch = {};
    context.watching = false;
  };
  const runBatch = (items, commonOptions, cb) => {
    const batches = /* @__PURE__ */ new Map();
    const getBatch = (mount) => {
      let batch = batches.get(mount.base);
      if (!batch) {
        batch = {
          driver: mount.driver,
          base: mount.base,
          items: []
        };
        batches.set(mount.base, batch);
      }
      return batch;
    };
    for (const item of items) {
      const isStringItem = typeof item === "string";
      const key = normalizeKey(isStringItem ? item : item.key);
      const value = isStringItem ? void 0 : item.value;
      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };
      const mount = getMount(key);
      getBatch(mount).items.push({
        key,
        value,
        relativeKey: mount.relativeKey,
        options: options2
      });
    }
    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(
      (r2) => r2.flat()
    );
  };
  const storage = {
    // Item
    hasItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.hasItem, relativeKey, opts);
    },
    getItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => destr(value)
      );
    },
    getItems(items, commonOptions = {}) {
      return runBatch(items, commonOptions, (batch) => {
        if (batch.driver.getItems) {
          return asyncCall(
            batch.driver.getItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              options: item.options
            })),
            commonOptions
          ).then(
            (r2) => r2.map((item) => ({
              key: joinKeys(batch.base, item.key),
              value: destr(item.value)
            }))
          );
        }
        return Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.getItem,
              item.relativeKey,
              item.options
            ).then((value) => ({
              key: item.key,
              value: destr(value)
            }));
          })
        );
      });
    },
    getItemRaw(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.getItemRaw) {
        return asyncCall(driver.getItemRaw, relativeKey, opts);
      }
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => deserializeRaw(value)
      );
    },
    async setItem(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.setItem) {
        return;
      }
      await asyncCall(driver.setItem, relativeKey, stringify(value), opts);
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async setItems(items, commonOptions) {
      await runBatch(items, commonOptions, async (batch) => {
        if (batch.driver.setItems) {
          return asyncCall(
            batch.driver.setItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              value: stringify(item.value),
              options: item.options
            })),
            commonOptions
          );
        }
        if (!batch.driver.setItem) {
          return;
        }
        await Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.setItem,
              item.relativeKey,
              stringify(item.value),
              item.options
            );
          })
        );
      });
    },
    async setItemRaw(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key, opts);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.setItemRaw) {
        await asyncCall(driver.setItemRaw, relativeKey, value, opts);
      } else if (driver.setItem) {
        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);
      } else {
        return;
      }
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async removeItem(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { removeMeta: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.removeItem) {
        return;
      }
      await asyncCall(driver.removeItem, relativeKey, opts);
      if (opts.removeMeta || opts.removeMata) {
        await asyncCall(driver.removeItem, relativeKey + "$", opts);
      }
      if (!driver.watch) {
        onChange("remove", key);
      }
    },
    // Meta
    async getMeta(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { nativeOnly: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      const meta = /* @__PURE__ */ Object.create(null);
      if (driver.getMeta) {
        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));
      }
      if (!opts.nativeOnly) {
        const value = await asyncCall(
          driver.getItem,
          relativeKey + "$",
          opts
        ).then((value_) => destr(value_));
        if (value && typeof value === "object") {
          if (typeof value.atime === "string") {
            value.atime = new Date(value.atime);
          }
          if (typeof value.mtime === "string") {
            value.mtime = new Date(value.mtime);
          }
          Object.assign(meta, value);
        }
      }
      return meta;
    },
    setMeta(key, value, opts = {}) {
      return this.setItem(key + "$", value, opts);
    },
    removeMeta(key, opts = {}) {
      return this.removeItem(key + "$", opts);
    },
    // Keys
    async getKeys(base3, opts = {}) {
      var _a;
      base3 = normalizeBaseKey(base3);
      const mounts = getMounts(base3, true);
      let maskedMounts = [];
      const allKeys = [];
      let allMountsSupportMaxDepth = true;
      for (const mount of mounts) {
        if (!((_a = mount.driver.flags) == null ? void 0 : _a.maxDepth)) {
          allMountsSupportMaxDepth = false;
        }
        const rawKeys = await asyncCall(
          mount.driver.getKeys,
          mount.relativeBase,
          opts
        );
        for (const key of rawKeys) {
          const fullKey = mount.mountpoint + normalizeKey(key);
          if (!maskedMounts.some((p6) => fullKey.startsWith(p6))) {
            allKeys.push(fullKey);
          }
        }
        maskedMounts = [
          mount.mountpoint,
          ...maskedMounts.filter((p6) => !p6.startsWith(mount.mountpoint))
        ];
      }
      const shouldFilterByDepth = opts.maxDepth !== void 0 && !allMountsSupportMaxDepth;
      return allKeys.filter(
        (key) => (!shouldFilterByDepth || filterKeyByDepth(key, opts.maxDepth)) && filterKeyByBase(key, base3)
      );
    },
    // Utils
    async clear(base3, opts = {}) {
      base3 = normalizeBaseKey(base3);
      await Promise.all(
        getMounts(base3, false).map(async (m3) => {
          if (m3.driver.clear) {
            return asyncCall(m3.driver.clear, m3.relativeBase, opts);
          }
          if (m3.driver.removeItem) {
            const keys2 = await m3.driver.getKeys(m3.relativeBase || "", opts);
            return Promise.all(
              keys2.map((key) => m3.driver.removeItem(key, opts))
            );
          }
        })
      );
    },
    async dispose() {
      await Promise.all(
        Object.values(context.mounts).map((driver) => dispose(driver))
      );
    },
    async watch(callback) {
      await startWatch();
      context.watchListeners.push(callback);
      return async () => {
        context.watchListeners = context.watchListeners.filter(
          (listener) => listener !== callback
        );
        if (context.watchListeners.length === 0) {
          await stopWatch();
        }
      };
    },
    async unwatch() {
      context.watchListeners = [];
      await stopWatch();
    },
    // Mount
    mount(base3, driver) {
      base3 = normalizeBaseKey(base3);
      if (base3 && context.mounts[base3]) {
        throw new Error(`already mounted at ${base3}`);
      }
      if (base3) {
        context.mountpoints.push(base3);
        context.mountpoints.sort((a3, b6) => b6.length - a3.length);
      }
      context.mounts[base3] = driver;
      if (context.watching) {
        Promise.resolve(watch(driver, onChange, base3)).then((unwatcher) => {
          context.unwatch[base3] = unwatcher;
        }).catch(console.error);
      }
      return storage;
    },
    async unmount(base3, _dispose = true) {
      var _a, _b;
      base3 = normalizeBaseKey(base3);
      if (!base3 || !context.mounts[base3]) {
        return;
      }
      if (context.watching && base3 in context.unwatch) {
        (_b = (_a = context.unwatch)[base3]) == null ? void 0 : _b.call(_a);
        delete context.unwatch[base3];
      }
      if (_dispose) {
        await dispose(context.mounts[base3]);
      }
      context.mountpoints = context.mountpoints.filter((key) => key !== base3);
      delete context.mounts[base3];
    },
    getMount(key = "") {
      key = normalizeKey(key) + ":";
      const m3 = getMount(key);
      return {
        driver: m3.driver,
        base: m3.base
      };
    },
    getMounts(base3 = "", opts = {}) {
      base3 = normalizeKey(base3);
      const mounts = getMounts(base3, opts.parents);
      return mounts.map((m3) => ({
        driver: m3.driver,
        base: m3.mountpoint
      }));
    },
    // Aliases
    keys: (base3, opts = {}) => storage.getKeys(base3, opts),
    get: (key, opts = {}) => storage.getItem(key, opts),
    set: (key, value, opts = {}) => storage.setItem(key, value, opts),
    has: (key, opts = {}) => storage.hasItem(key, opts),
    del: (key, opts = {}) => storage.removeItem(key, opts),
    remove: (key, opts = {}) => storage.removeItem(key, opts)
  };
  return storage;
}
function watch(driver, onChange, base3) {
  return driver.watch ? driver.watch((event, key) => onChange(event, base3 + key)) : () => {
  };
}
async function dispose(driver) {
  if (typeof driver.dispose === "function") {
    await asyncCall(driver.dispose);
  }
}

// node_modules/idb-keyval/dist/index.js
function promisifyRequest(request) {
  return new Promise((resolve, reject) => {
    request.oncomplete = request.onsuccess = () => resolve(request.result);
    request.onabort = request.onerror = () => reject(request.error);
  });
}
function createStore(dbName, storeName) {
  let dbp;
  const getDB = () => {
    if (dbp)
      return dbp;
    const request = indexedDB.open(dbName);
    request.onupgradeneeded = () => request.result.createObjectStore(storeName);
    dbp = promisifyRequest(request);
    dbp.then((db) => {
      db.onclose = () => dbp = void 0;
    }, () => {
    });
    return dbp;
  };
  return (txMode, callback) => getDB().then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));
}
var defaultGetStoreFunc;
function defaultGetStore() {
  if (!defaultGetStoreFunc) {
    defaultGetStoreFunc = createStore("keyval-store", "keyval");
  }
  return defaultGetStoreFunc;
}
function get(key, customStore = defaultGetStore()) {
  return customStore("readonly", (store) => promisifyRequest(store.get(key)));
}
function set(key, value, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.put(value, key);
    return promisifyRequest(store.transaction);
  });
}
function del(key, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.delete(key);
    return promisifyRequest(store.transaction);
  });
}
function clear(customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.clear();
    return promisifyRequest(store.transaction);
  });
}
function eachCursor(store, callback) {
  store.openCursor().onsuccess = function() {
    if (!this.result)
      return;
    callback(this.result);
    this.result.continue();
  };
  return promisifyRequest(store.transaction);
}
function keys(customStore = defaultGetStore()) {
  return customStore("readonly", (store) => {
    if (store.getAllKeys) {
      return promisifyRequest(store.getAllKeys());
    }
    const items = [];
    return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);
  });
}

// node_modules/@walletconnect/safe-json/dist/esm/index.js
var JSONStringify = (data) => JSON.stringify(data, (_5, value) => typeof value === "bigint" ? value.toString() + "n" : value);
var JSONParse = (json) => {
  const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
  const serializedData = json.replace(numbersBiggerThanMaxInt, '$1"$2n"$3');
  return JSON.parse(serializedData, (_5, value) => {
    const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
    if (isCustomFormatBigInt)
      return BigInt(value.substring(0, value.length - 1));
    return value;
  });
};
function safeJsonParse(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSONParse(value);
  } catch (_a) {
    return value;
  }
}
function safeJsonStringify(value) {
  return typeof value === "string" ? value : JSONStringify(value) || "";
}

// node_modules/@walletconnect/keyvaluestorage/dist/index.es.js
var x = "idb-keyval";
var z = (i3 = {}) => {
  const t = i3.base && i3.base.length > 0 ? `${i3.base}:` : "", e2 = (s2) => t + s2;
  let n4;
  return i3.dbName && i3.storeName && (n4 = createStore(i3.dbName, i3.storeName)), { name: x, options: i3, async hasItem(s2) {
    return !(typeof await get(e2(s2), n4) > "u");
  }, async getItem(s2) {
    return await get(e2(s2), n4) ?? null;
  }, setItem(s2, a3) {
    return set(e2(s2), a3, n4);
  }, removeItem(s2) {
    return del(e2(s2), n4);
  }, getKeys() {
    return keys(n4);
  }, clear() {
    return clear(n4);
  } };
};
var D2 = "WALLET_CONNECT_V2_INDEXED_DB";
var E = "keyvaluestorage";
var _2 = class {
  constructor() {
    this.indexedDb = createStorage({ driver: z({ dbName: D2, storeName: E }) });
  }
  async getKeys() {
    return this.indexedDb.getKeys();
  }
  async getEntries() {
    return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t) => [t.key, t.value]);
  }
  async getItem(t) {
    const e2 = await this.indexedDb.getItem(t);
    if (e2 !== null) return e2;
  }
  async setItem(t, e2) {
    await this.indexedDb.setItem(t, safeJsonStringify(e2));
  }
  async removeItem(t) {
    await this.indexedDb.removeItem(t);
  }
};
var l = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var c = { exports: {} };
(function() {
  let i3;
  function t() {
  }
  i3 = t, i3.prototype.getItem = function(e2) {
    return this.hasOwnProperty(e2) ? String(this[e2]) : null;
  }, i3.prototype.setItem = function(e2, n4) {
    this[e2] = String(n4);
  }, i3.prototype.removeItem = function(e2) {
    delete this[e2];
  }, i3.prototype.clear = function() {
    const e2 = this;
    Object.keys(e2).forEach(function(n4) {
      e2[n4] = void 0, delete e2[n4];
    });
  }, i3.prototype.key = function(e2) {
    return e2 = e2 || 0, Object.keys(this)[e2];
  }, i3.prototype.__defineGetter__("length", function() {
    return Object.keys(this).length;
  }), typeof l < "u" && l.localStorage ? c.exports = l.localStorage : typeof window < "u" && window.localStorage ? c.exports = window.localStorage : c.exports = new t();
})();
function k2(i3) {
  var t;
  return [i3[0], safeJsonParse((t = i3[1]) != null ? t : "")];
}
var K = class {
  constructor() {
    this.localStorage = c.exports;
  }
  async getKeys() {
    return Object.keys(this.localStorage);
  }
  async getEntries() {
    return Object.entries(this.localStorage).map(k2);
  }
  async getItem(t) {
    const e2 = this.localStorage.getItem(t);
    if (e2 !== null) return safeJsonParse(e2);
  }
  async setItem(t, e2) {
    this.localStorage.setItem(t, safeJsonStringify(e2));
  }
  async removeItem(t) {
    this.localStorage.removeItem(t);
  }
};
var N2 = "wc_storage_version";
var y = 1;
var O = async (i3, t, e2) => {
  const n4 = N2, s2 = await t.getItem(n4);
  if (s2 && s2 >= y) {
    e2(t);
    return;
  }
  const a3 = await i3.getKeys();
  if (!a3.length) {
    e2(t);
    return;
  }
  const m3 = [];
  for (; a3.length; ) {
    const r2 = a3.shift();
    if (!r2) continue;
    const o3 = r2.toLowerCase();
    if (o3.includes("wc@") || o3.includes("walletconnect") || o3.includes("wc_") || o3.includes("wallet_connect")) {
      const f5 = await i3.getItem(r2);
      await t.setItem(r2, f5), m3.push(r2);
    }
  }
  await t.setItem(n4, y), e2(t), j(i3, m3);
};
var j = async (i3, t) => {
  t.length && t.forEach(async (e2) => {
    await i3.removeItem(e2);
  });
};
var h2 = class {
  constructor() {
    this.initialized = false, this.setInitialized = (e2) => {
      this.storage = e2, this.initialized = true;
    };
    const t = new K();
    this.storage = t;
    try {
      const e2 = new _2();
      O(t, e2, this.setInitialized);
    } catch {
      this.initialized = true;
    }
  }
  async getKeys() {
    return await this.initialize(), this.storage.getKeys();
  }
  async getEntries() {
    return await this.initialize(), this.storage.getEntries();
  }
  async getItem(t) {
    return await this.initialize(), this.storage.getItem(t);
  }
  async setItem(t, e2) {
    return await this.initialize(), this.storage.setItem(t, e2);
  }
  async removeItem(t) {
    return await this.initialize(), this.storage.removeItem(t);
  }
  async initialize() {
    this.initialized || await new Promise((t) => {
      const e2 = setInterval(() => {
        this.initialized && (clearInterval(e2), t());
      }, 20);
    });
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
var import_heartbeat = __toESM(require_cjs2());

// node_modules/@walletconnect/logger/dist/index.es.js
var import_pino = __toESM(require_browser());
var import_pino2 = __toESM(require_browser());
var c2 = { level: "info" };
var n = "custom_context";
var l2 = 1e3 * 1024;
var x2 = Object.defineProperty;
var S2 = Object.defineProperties;
var _3 = Object.getOwnPropertyDescriptors;
var p2 = Object.getOwnPropertySymbols;
var T = Object.prototype.hasOwnProperty;
var z2 = Object.prototype.propertyIsEnumerable;
var f = (r2, e2, t) => e2 in r2 ? x2(r2, e2, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e2] = t;
var i = (r2, e2) => {
  for (var t in e2 || (e2 = {})) T.call(e2, t) && f(r2, t, e2[t]);
  if (p2) for (var t of p2(e2)) z2.call(e2, t) && f(r2, t, e2[t]);
  return r2;
};
var g = (r2, e2) => S2(r2, _3(e2));
function k3(r2) {
  return g(i({}, r2), { level: (r2 == null ? void 0 : r2.level) || c2.level });
}
function v(r2, e2 = n) {
  return r2[e2] || "";
}
function b(r2, e2, t = n) {
  return r2[t] = e2, r2;
}
function y2(r2, e2 = n) {
  let t = "";
  return typeof r2.bindings > "u" ? t = v(r2, e2) : t = r2.bindings().context || "", t;
}
function w2(r2, e2, t = n) {
  const o3 = y2(r2, t);
  return o3.trim() ? `${o3}/${e2}` : e2;
}
function E2(r2, e2, t = n) {
  const o3 = w2(r2, e2, t), a3 = r2.child({ context: o3 });
  return b(a3, o3, t);
}

// node_modules/@walletconnect/types/dist/index.es.js
init_esm();
var import_events2 = __toESM(require_events());
var n2 = class extends IEvents {
  constructor(s2) {
    super(), this.opts = s2, this.protocol = "wc", this.version = 2;
  }
};
var h4 = class extends IEvents {
  constructor(s2, t) {
    super(), this.core = s2, this.logger = t, this.records = /* @__PURE__ */ new Map();
  }
};
var a = class {
  constructor(s2, t) {
    this.logger = s2, this.core = t;
  }
};
var u = class extends IEvents {
  constructor(s2, t) {
    super(), this.relayer = s2, this.logger = t;
  }
};
var g2 = class extends IEvents {
  constructor(s2) {
    super();
  }
};
var p3 = class {
  constructor(s2, t, o3, M4) {
    this.core = s2, this.logger = t, this.name = o3;
  }
};
var d = class extends IEvents {
  constructor(s2, t) {
    super(), this.relayer = s2, this.logger = t;
  }
};
var E3 = class extends IEvents {
  constructor(s2, t) {
    super(), this.core = s2, this.logger = t;
  }
};
var y3 = class {
  constructor(s2, t) {
    this.projectId = s2, this.logger = t;
  }
};
var v2 = class {
  constructor(s2, t) {
    this.projectId = s2, this.logger = t;
  }
};
var b2 = class {
  constructor(s2) {
    this.opts = s2, this.protocol = "wc", this.version = 2;
  }
};
var w3 = class {
  constructor(s2) {
    this.client = s2;
  }
};

// node_modules/@walletconnect/relay-auth/dist/index.es.js
var import_time = __toESM(require_cjs());
function En(t) {
  return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
}
function fe(t, ...e2) {
  if (!En(t)) throw new Error("Uint8Array expected");
  if (e2.length > 0 && !e2.includes(t.length)) throw new Error("Uint8Array expected of length " + e2 + ", got length=" + t.length);
}
function De(t, e2 = true) {
  if (t.destroyed) throw new Error("Hash instance has been destroyed");
  if (e2 && t.finished) throw new Error("Hash#digest() has already been called");
}
function gn(t, e2) {
  fe(t);
  const n4 = e2.outputLen;
  if (t.length < n4) throw new Error("digestInto() expects output buffer of length at least " + n4);
}
var it = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
var _t = (t) => new DataView(t.buffer, t.byteOffset, t.byteLength);
function yn(t) {
  if (typeof t != "string") throw new Error("utf8ToBytes expected string, got " + typeof t);
  return new Uint8Array(new TextEncoder().encode(t));
}
function de(t) {
  return typeof t == "string" && (t = yn(t)), fe(t), t;
}
var xn2 = class {
  clone() {
    return this._cloneInto();
  }
};
function Bn(t) {
  const e2 = (r2) => t().update(de(r2)).digest(), n4 = t();
  return e2.outputLen = n4.outputLen, e2.blockLen = n4.blockLen, e2.create = () => t(), e2;
}
function he(t = 32) {
  if (it && typeof it.getRandomValues == "function") return it.getRandomValues(new Uint8Array(t));
  if (it && typeof it.randomBytes == "function") return it.randomBytes(t);
  throw new Error("crypto.getRandomValues must be defined");
}
function Cn(t, e2, n4, r2) {
  if (typeof t.setBigUint64 == "function") return t.setBigUint64(e2, n4, r2);
  const o3 = BigInt(32), s2 = BigInt(4294967295), a3 = Number(n4 >> o3 & s2), u4 = Number(n4 & s2), i3 = r2 ? 4 : 0, D5 = r2 ? 0 : 4;
  t.setUint32(e2 + i3, a3, r2), t.setUint32(e2 + D5, u4, r2);
}
var An = class extends xn2 {
  constructor(e2, n4, r2, o3) {
    super(), this.blockLen = e2, this.outputLen = n4, this.padOffset = r2, this.isLE = o3, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(e2), this.view = _t(this.buffer);
  }
  update(e2) {
    De(this);
    const { view: n4, buffer: r2, blockLen: o3 } = this;
    e2 = de(e2);
    const s2 = e2.length;
    for (let a3 = 0; a3 < s2; ) {
      const u4 = Math.min(o3 - this.pos, s2 - a3);
      if (u4 === o3) {
        const i3 = _t(e2);
        for (; o3 <= s2 - a3; a3 += o3) this.process(i3, a3);
        continue;
      }
      r2.set(e2.subarray(a3, a3 + u4), this.pos), this.pos += u4, a3 += u4, this.pos === o3 && (this.process(n4, 0), this.pos = 0);
    }
    return this.length += e2.length, this.roundClean(), this;
  }
  digestInto(e2) {
    De(this), gn(e2, this), this.finished = true;
    const { buffer: n4, view: r2, blockLen: o3, isLE: s2 } = this;
    let { pos: a3 } = this;
    n4[a3++] = 128, this.buffer.subarray(a3).fill(0), this.padOffset > o3 - a3 && (this.process(r2, 0), a3 = 0);
    for (let l4 = a3; l4 < o3; l4++) n4[l4] = 0;
    Cn(r2, o3 - 8, BigInt(this.length * 8), s2), this.process(r2, 0);
    const u4 = _t(e2), i3 = this.outputLen;
    if (i3 % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
    const D5 = i3 / 4, c5 = this.get();
    if (D5 > c5.length) throw new Error("_sha2: outputLen bigger than state");
    for (let l4 = 0; l4 < D5; l4++) u4.setUint32(4 * l4, c5[l4], s2);
  }
  digest() {
    const { buffer: e2, outputLen: n4 } = this;
    this.digestInto(e2);
    const r2 = e2.slice(0, n4);
    return this.destroy(), r2;
  }
  _cloneInto(e2) {
    e2 || (e2 = new this.constructor()), e2.set(...this.get());
    const { blockLen: n4, buffer: r2, length: o3, finished: s2, destroyed: a3, pos: u4 } = this;
    return e2.length = o3, e2.pos = u4, e2.finished = s2, e2.destroyed = a3, o3 % n4 && e2.buffer.set(r2), e2;
  }
};
var wt2 = BigInt(2 ** 32 - 1);
var St = BigInt(32);
function le(t, e2 = false) {
  return e2 ? { h: Number(t & wt2), l: Number(t >> St & wt2) } : { h: Number(t >> St & wt2) | 0, l: Number(t & wt2) | 0 };
}
function mn(t, e2 = false) {
  let n4 = new Uint32Array(t.length), r2 = new Uint32Array(t.length);
  for (let o3 = 0; o3 < t.length; o3++) {
    const { h: s2, l: a3 } = le(t[o3], e2);
    [n4[o3], r2[o3]] = [s2, a3];
  }
  return [n4, r2];
}
var _n = (t, e2) => BigInt(t >>> 0) << St | BigInt(e2 >>> 0);
var Sn = (t, e2, n4) => t >>> n4;
var vn = (t, e2, n4) => t << 32 - n4 | e2 >>> n4;
var In = (t, e2, n4) => t >>> n4 | e2 << 32 - n4;
var Un2 = (t, e2, n4) => t << 32 - n4 | e2 >>> n4;
var Tn = (t, e2, n4) => t << 64 - n4 | e2 >>> n4 - 32;
var Fn2 = (t, e2, n4) => t >>> n4 - 32 | e2 << 64 - n4;
var Nn = (t, e2) => e2;
var Ln2 = (t, e2) => t;
var On = (t, e2, n4) => t << n4 | e2 >>> 32 - n4;
var Hn2 = (t, e2, n4) => e2 << n4 | t >>> 32 - n4;
var zn = (t, e2, n4) => e2 << n4 - 32 | t >>> 64 - n4;
var Mn2 = (t, e2, n4) => t << n4 - 32 | e2 >>> 64 - n4;
function qn2(t, e2, n4, r2) {
  const o3 = (e2 >>> 0) + (r2 >>> 0);
  return { h: t + n4 + (o3 / 2 ** 32 | 0) | 0, l: o3 | 0 };
}
var $n = (t, e2, n4) => (t >>> 0) + (e2 >>> 0) + (n4 >>> 0);
var kn2 = (t, e2, n4, r2) => e2 + n4 + r2 + (t / 2 ** 32 | 0) | 0;
var Rn = (t, e2, n4, r2) => (t >>> 0) + (e2 >>> 0) + (n4 >>> 0) + (r2 >>> 0);
var jn = (t, e2, n4, r2, o3) => e2 + n4 + r2 + o3 + (t / 2 ** 32 | 0) | 0;
var Zn = (t, e2, n4, r2, o3) => (t >>> 0) + (e2 >>> 0) + (n4 >>> 0) + (r2 >>> 0) + (o3 >>> 0);
var Gn = (t, e2, n4, r2, o3, s2) => e2 + n4 + r2 + o3 + s2 + (t / 2 ** 32 | 0) | 0;
var x3 = { fromBig: le, split: mn, toBig: _n, shrSH: Sn, shrSL: vn, rotrSH: In, rotrSL: Un2, rotrBH: Tn, rotrBL: Fn2, rotr32H: Nn, rotr32L: Ln2, rotlSH: On, rotlSL: Hn2, rotlBH: zn, rotlBL: Mn2, add: qn2, add3L: $n, add3H: kn2, add4L: Rn, add4H: jn, add5H: Gn, add5L: Zn };
var [Vn2, Yn] = (() => x3.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((t) => BigInt(t))))();
var P = new Uint32Array(80);
var Q = new Uint32Array(80);
var Jn2 = class extends An {
  constructor() {
    super(128, 64, 16, false), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
  }
  get() {
    const { Ah: e2, Al: n4, Bh: r2, Bl: o3, Ch: s2, Cl: a3, Dh: u4, Dl: i3, Eh: D5, El: c5, Fh: l4, Fl: p6, Gh: w7, Gl: h6, Hh: g7, Hl: S5 } = this;
    return [e2, n4, r2, o3, s2, a3, u4, i3, D5, c5, l4, p6, w7, h6, g7, S5];
  }
  set(e2, n4, r2, o3, s2, a3, u4, i3, D5, c5, l4, p6, w7, h6, g7, S5) {
    this.Ah = e2 | 0, this.Al = n4 | 0, this.Bh = r2 | 0, this.Bl = o3 | 0, this.Ch = s2 | 0, this.Cl = a3 | 0, this.Dh = u4 | 0, this.Dl = i3 | 0, this.Eh = D5 | 0, this.El = c5 | 0, this.Fh = l4 | 0, this.Fl = p6 | 0, this.Gh = w7 | 0, this.Gl = h6 | 0, this.Hh = g7 | 0, this.Hl = S5 | 0;
  }
  process(e2, n4) {
    for (let d3 = 0; d3 < 16; d3++, n4 += 4) P[d3] = e2.getUint32(n4), Q[d3] = e2.getUint32(n4 += 4);
    for (let d3 = 16; d3 < 80; d3++) {
      const m3 = P[d3 - 15] | 0, F3 = Q[d3 - 15] | 0, q2 = x3.rotrSH(m3, F3, 1) ^ x3.rotrSH(m3, F3, 8) ^ x3.shrSH(m3, F3, 7), z4 = x3.rotrSL(m3, F3, 1) ^ x3.rotrSL(m3, F3, 8) ^ x3.shrSL(m3, F3, 7), I2 = P[d3 - 2] | 0, O6 = Q[d3 - 2] | 0, ot3 = x3.rotrSH(I2, O6, 19) ^ x3.rotrBH(I2, O6, 61) ^ x3.shrSH(I2, O6, 6), tt2 = x3.rotrSL(I2, O6, 19) ^ x3.rotrBL(I2, O6, 61) ^ x3.shrSL(I2, O6, 6), st2 = x3.add4L(z4, tt2, Q[d3 - 7], Q[d3 - 16]), at3 = x3.add4H(st2, q2, ot3, P[d3 - 7], P[d3 - 16]);
      P[d3] = at3 | 0, Q[d3] = st2 | 0;
    }
    let { Ah: r2, Al: o3, Bh: s2, Bl: a3, Ch: u4, Cl: i3, Dh: D5, Dl: c5, Eh: l4, El: p6, Fh: w7, Fl: h6, Gh: g7, Gl: S5, Hh: v6, Hl: L4 } = this;
    for (let d3 = 0; d3 < 80; d3++) {
      const m3 = x3.rotrSH(l4, p6, 14) ^ x3.rotrSH(l4, p6, 18) ^ x3.rotrBH(l4, p6, 41), F3 = x3.rotrSL(l4, p6, 14) ^ x3.rotrSL(l4, p6, 18) ^ x3.rotrBL(l4, p6, 41), q2 = l4 & w7 ^ ~l4 & g7, z4 = p6 & h6 ^ ~p6 & S5, I2 = x3.add5L(L4, F3, z4, Yn[d3], Q[d3]), O6 = x3.add5H(I2, v6, m3, q2, Vn2[d3], P[d3]), ot3 = I2 | 0, tt2 = x3.rotrSH(r2, o3, 28) ^ x3.rotrBH(r2, o3, 34) ^ x3.rotrBH(r2, o3, 39), st2 = x3.rotrSL(r2, o3, 28) ^ x3.rotrBL(r2, o3, 34) ^ x3.rotrBL(r2, o3, 39), at3 = r2 & s2 ^ r2 & u4 ^ s2 & u4, Ct3 = o3 & a3 ^ o3 & i3 ^ a3 & i3;
      v6 = g7 | 0, L4 = S5 | 0, g7 = w7 | 0, S5 = h6 | 0, w7 = l4 | 0, h6 = p6 | 0, { h: l4, l: p6 } = x3.add(D5 | 0, c5 | 0, O6 | 0, ot3 | 0), D5 = u4 | 0, c5 = i3 | 0, u4 = s2 | 0, i3 = a3 | 0, s2 = r2 | 0, a3 = o3 | 0;
      const At2 = x3.add3L(ot3, st2, Ct3);
      r2 = x3.add3H(At2, O6, tt2, at3), o3 = At2 | 0;
    }
    ({ h: r2, l: o3 } = x3.add(this.Ah | 0, this.Al | 0, r2 | 0, o3 | 0)), { h: s2, l: a3 } = x3.add(this.Bh | 0, this.Bl | 0, s2 | 0, a3 | 0), { h: u4, l: i3 } = x3.add(this.Ch | 0, this.Cl | 0, u4 | 0, i3 | 0), { h: D5, l: c5 } = x3.add(this.Dh | 0, this.Dl | 0, D5 | 0, c5 | 0), { h: l4, l: p6 } = x3.add(this.Eh | 0, this.El | 0, l4 | 0, p6 | 0), { h: w7, l: h6 } = x3.add(this.Fh | 0, this.Fl | 0, w7 | 0, h6 | 0), { h: g7, l: S5 } = x3.add(this.Gh | 0, this.Gl | 0, g7 | 0, S5 | 0), { h: v6, l: L4 } = x3.add(this.Hh | 0, this.Hl | 0, v6 | 0, L4 | 0), this.set(r2, o3, s2, a3, u4, i3, D5, c5, l4, p6, w7, h6, g7, S5, v6, L4);
  }
  roundClean() {
    P.fill(0), Q.fill(0);
  }
  destroy() {
    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
};
var Kn2 = Bn(() => new Jn2());
var vt2 = BigInt(0);
var be = BigInt(1);
var Wn = BigInt(2);
function It2(t) {
  return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
}
function Ut(t) {
  if (!It2(t)) throw new Error("Uint8Array expected");
}
function Tt(t, e2) {
  if (typeof e2 != "boolean") throw new Error(t + " boolean expected, got " + e2);
}
var Xn2 = Array.from({ length: 256 }, (t, e2) => e2.toString(16).padStart(2, "0"));
function Ft2(t) {
  Ut(t);
  let e2 = "";
  for (let n4 = 0; n4 < t.length; n4++) e2 += Xn2[t[n4]];
  return e2;
}
function pe(t) {
  if (typeof t != "string") throw new Error("hex string expected, got " + typeof t);
  return t === "" ? vt2 : BigInt("0x" + t);
}
var K2 = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function we(t) {
  if (t >= K2._0 && t <= K2._9) return t - K2._0;
  if (t >= K2.A && t <= K2.F) return t - (K2.A - 10);
  if (t >= K2.a && t <= K2.f) return t - (K2.a - 10);
}
function Ee(t) {
  if (typeof t != "string") throw new Error("hex string expected, got " + typeof t);
  const e2 = t.length, n4 = e2 / 2;
  if (e2 % 2) throw new Error("hex string expected, got unpadded hex of length " + e2);
  const r2 = new Uint8Array(n4);
  for (let o3 = 0, s2 = 0; o3 < n4; o3++, s2 += 2) {
    const a3 = we(t.charCodeAt(s2)), u4 = we(t.charCodeAt(s2 + 1));
    if (a3 === void 0 || u4 === void 0) {
      const i3 = t[s2] + t[s2 + 1];
      throw new Error('hex string expected, got non-hex character "' + i3 + '" at index ' + s2);
    }
    r2[o3] = a3 * 16 + u4;
  }
  return r2;
}
function Pn(t) {
  return pe(Ft2(t));
}
function Et2(t) {
  return Ut(t), pe(Ft2(Uint8Array.from(t).reverse()));
}
function ge(t, e2) {
  return Ee(t.toString(16).padStart(e2 * 2, "0"));
}
function Nt(t, e2) {
  return ge(t, e2).reverse();
}
function W(t, e2, n4) {
  let r2;
  if (typeof e2 == "string") try {
    r2 = Ee(e2);
  } catch (s2) {
    throw new Error(t + " must be hex string or Uint8Array, cause: " + s2);
  }
  else if (It2(e2)) r2 = Uint8Array.from(e2);
  else throw new Error(t + " must be hex string or Uint8Array");
  const o3 = r2.length;
  if (typeof n4 == "number" && o3 !== n4) throw new Error(t + " of length " + n4 + " expected, got " + o3);
  return r2;
}
function ye(...t) {
  let e2 = 0;
  for (let r2 = 0; r2 < t.length; r2++) {
    const o3 = t[r2];
    Ut(o3), e2 += o3.length;
  }
  const n4 = new Uint8Array(e2);
  for (let r2 = 0, o3 = 0; r2 < t.length; r2++) {
    const s2 = t[r2];
    n4.set(s2, o3), o3 += s2.length;
  }
  return n4;
}
var Lt2 = (t) => typeof t == "bigint" && vt2 <= t;
function Qn2(t, e2, n4) {
  return Lt2(t) && Lt2(e2) && Lt2(n4) && e2 <= t && t < n4;
}
function ft2(t, e2, n4, r2) {
  if (!Qn2(e2, n4, r2)) throw new Error("expected valid " + t + ": " + n4 + " <= n < " + r2 + ", got " + e2);
}
function tr2(t) {
  let e2;
  for (e2 = 0; t > vt2; t >>= be, e2 += 1) ;
  return e2;
}
var er2 = (t) => (Wn << BigInt(t - 1)) - be;
var nr2 = { bigint: (t) => typeof t == "bigint", function: (t) => typeof t == "function", boolean: (t) => typeof t == "boolean", string: (t) => typeof t == "string", stringOrUint8Array: (t) => typeof t == "string" || It2(t), isSafeInteger: (t) => Number.isSafeInteger(t), array: (t) => Array.isArray(t), field: (t, e2) => e2.Fp.isValid(t), hash: (t) => typeof t == "function" && Number.isSafeInteger(t.outputLen) };
function Ot(t, e2, n4 = {}) {
  const r2 = (o3, s2, a3) => {
    const u4 = nr2[s2];
    if (typeof u4 != "function") throw new Error("invalid validator function");
    const i3 = t[o3];
    if (!(a3 && i3 === void 0) && !u4(i3, t)) throw new Error("param " + String(o3) + " is invalid. Expected " + s2 + ", got " + i3);
  };
  for (const [o3, s2] of Object.entries(e2)) r2(o3, s2, false);
  for (const [o3, s2] of Object.entries(n4)) r2(o3, s2, true);
  return t;
}
function xe(t) {
  const e2 = /* @__PURE__ */ new WeakMap();
  return (n4, ...r2) => {
    const o3 = e2.get(n4);
    if (o3 !== void 0) return o3;
    const s2 = t(n4, ...r2);
    return e2.set(n4, s2), s2;
  };
}
var M = BigInt(0);
var N3 = BigInt(1);
var nt = BigInt(2);
var rr = BigInt(3);
var Ht2 = BigInt(4);
var Be = BigInt(5);
var Ce = BigInt(8);
function H(t, e2) {
  const n4 = t % e2;
  return n4 >= M ? n4 : e2 + n4;
}
function or(t, e2, n4) {
  if (e2 < M) throw new Error("invalid exponent, negatives unsupported");
  if (n4 <= M) throw new Error("invalid modulus");
  if (n4 === N3) return M;
  let r2 = N3;
  for (; e2 > M; ) e2 & N3 && (r2 = r2 * t % n4), t = t * t % n4, e2 >>= N3;
  return r2;
}
function J(t, e2, n4) {
  let r2 = t;
  for (; e2-- > M; ) r2 *= r2, r2 %= n4;
  return r2;
}
function Ae2(t, e2) {
  if (t === M) throw new Error("invert: expected non-zero number");
  if (e2 <= M) throw new Error("invert: expected positive modulus, got " + e2);
  let n4 = H(t, e2), r2 = e2, o3 = M, s2 = N3;
  for (; n4 !== M; ) {
    const u4 = r2 / n4, i3 = r2 % n4, D5 = o3 - s2 * u4;
    r2 = n4, n4 = i3, o3 = s2, s2 = D5;
  }
  if (r2 !== N3) throw new Error("invert: does not exist");
  return H(o3, e2);
}
function sr(t) {
  const e2 = (t - N3) / nt;
  let n4, r2, o3;
  for (n4 = t - N3, r2 = 0; n4 % nt === M; n4 /= nt, r2++) ;
  for (o3 = nt; o3 < t && or(o3, e2, t) !== t - N3; o3++) if (o3 > 1e3) throw new Error("Cannot find square root: likely non-prime P");
  if (r2 === 1) {
    const a3 = (t + N3) / Ht2;
    return function(i3, D5) {
      const c5 = i3.pow(D5, a3);
      if (!i3.eql(i3.sqr(c5), D5)) throw new Error("Cannot find square root");
      return c5;
    };
  }
  const s2 = (n4 + N3) / nt;
  return function(u4, i3) {
    if (u4.pow(i3, e2) === u4.neg(u4.ONE)) throw new Error("Cannot find square root");
    let D5 = r2, c5 = u4.pow(u4.mul(u4.ONE, o3), n4), l4 = u4.pow(i3, s2), p6 = u4.pow(i3, n4);
    for (; !u4.eql(p6, u4.ONE); ) {
      if (u4.eql(p6, u4.ZERO)) return u4.ZERO;
      let w7 = 1;
      for (let g7 = u4.sqr(p6); w7 < D5 && !u4.eql(g7, u4.ONE); w7++) g7 = u4.sqr(g7);
      const h6 = u4.pow(c5, N3 << BigInt(D5 - w7 - 1));
      c5 = u4.sqr(h6), l4 = u4.mul(l4, h6), p6 = u4.mul(p6, c5), D5 = w7;
    }
    return l4;
  };
}
function ir(t) {
  if (t % Ht2 === rr) {
    const e2 = (t + N3) / Ht2;
    return function(r2, o3) {
      const s2 = r2.pow(o3, e2);
      if (!r2.eql(r2.sqr(s2), o3)) throw new Error("Cannot find square root");
      return s2;
    };
  }
  if (t % Ce === Be) {
    const e2 = (t - Be) / Ce;
    return function(r2, o3) {
      const s2 = r2.mul(o3, nt), a3 = r2.pow(s2, e2), u4 = r2.mul(o3, a3), i3 = r2.mul(r2.mul(u4, nt), a3), D5 = r2.mul(u4, r2.sub(i3, r2.ONE));
      if (!r2.eql(r2.sqr(D5), o3)) throw new Error("Cannot find square root");
      return D5;
    };
  }
  return sr(t);
}
var ur = (t, e2) => (H(t, e2) & N3) === N3;
var cr = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
function ar(t) {
  const e2 = { ORDER: "bigint", MASK: "bigint", BYTES: "isSafeInteger", BITS: "isSafeInteger" }, n4 = cr.reduce((r2, o3) => (r2[o3] = "function", r2), e2);
  return Ot(t, n4);
}
function fr(t, e2, n4) {
  if (n4 < M) throw new Error("invalid exponent, negatives unsupported");
  if (n4 === M) return t.ONE;
  if (n4 === N3) return e2;
  let r2 = t.ONE, o3 = e2;
  for (; n4 > M; ) n4 & N3 && (r2 = t.mul(r2, o3)), o3 = t.sqr(o3), n4 >>= N3;
  return r2;
}
function Dr(t, e2) {
  const n4 = new Array(e2.length), r2 = e2.reduce((s2, a3, u4) => t.is0(a3) ? s2 : (n4[u4] = s2, t.mul(s2, a3)), t.ONE), o3 = t.inv(r2);
  return e2.reduceRight((s2, a3, u4) => t.is0(a3) ? s2 : (n4[u4] = t.mul(s2, n4[u4]), t.mul(s2, a3)), o3), n4;
}
function me(t, e2) {
  const n4 = e2 !== void 0 ? e2 : t.toString(2).length, r2 = Math.ceil(n4 / 8);
  return { nBitLength: n4, nByteLength: r2 };
}
function _e(t, e2, n4 = false, r2 = {}) {
  if (t <= M) throw new Error("invalid field: expected ORDER > 0, got " + t);
  const { nBitLength: o3, nByteLength: s2 } = me(t, e2);
  if (s2 > 2048) throw new Error("invalid field: expected ORDER of <= 2048 bytes");
  let a3;
  const u4 = Object.freeze({ ORDER: t, isLE: n4, BITS: o3, BYTES: s2, MASK: er2(o3), ZERO: M, ONE: N3, create: (i3) => H(i3, t), isValid: (i3) => {
    if (typeof i3 != "bigint") throw new Error("invalid field element: expected bigint, got " + typeof i3);
    return M <= i3 && i3 < t;
  }, is0: (i3) => i3 === M, isOdd: (i3) => (i3 & N3) === N3, neg: (i3) => H(-i3, t), eql: (i3, D5) => i3 === D5, sqr: (i3) => H(i3 * i3, t), add: (i3, D5) => H(i3 + D5, t), sub: (i3, D5) => H(i3 - D5, t), mul: (i3, D5) => H(i3 * D5, t), pow: (i3, D5) => fr(u4, i3, D5), div: (i3, D5) => H(i3 * Ae2(D5, t), t), sqrN: (i3) => i3 * i3, addN: (i3, D5) => i3 + D5, subN: (i3, D5) => i3 - D5, mulN: (i3, D5) => i3 * D5, inv: (i3) => Ae2(i3, t), sqrt: r2.sqrt || ((i3) => (a3 || (a3 = ir(t)), a3(u4, i3))), invertBatch: (i3) => Dr(u4, i3), cmov: (i3, D5, c5) => c5 ? D5 : i3, toBytes: (i3) => n4 ? Nt(i3, s2) : ge(i3, s2), fromBytes: (i3) => {
    if (i3.length !== s2) throw new Error("Field.fromBytes: expected " + s2 + " bytes, got " + i3.length);
    return n4 ? Et2(i3) : Pn(i3);
  } });
  return Object.freeze(u4);
}
var Se = BigInt(0);
var gt2 = BigInt(1);
function zt2(t, e2) {
  const n4 = e2.negate();
  return t ? n4 : e2;
}
function ve2(t, e2) {
  if (!Number.isSafeInteger(t) || t <= 0 || t > e2) throw new Error("invalid window size, expected [1.." + e2 + "], got W=" + t);
}
function Mt2(t, e2) {
  ve2(t, e2);
  const n4 = Math.ceil(e2 / t) + 1, r2 = 2 ** (t - 1);
  return { windows: n4, windowSize: r2 };
}
function dr(t, e2) {
  if (!Array.isArray(t)) throw new Error("array expected");
  t.forEach((n4, r2) => {
    if (!(n4 instanceof e2)) throw new Error("invalid point at index " + r2);
  });
}
function hr(t, e2) {
  if (!Array.isArray(t)) throw new Error("array of scalars expected");
  t.forEach((n4, r2) => {
    if (!e2.isValid(n4)) throw new Error("invalid scalar at index " + r2);
  });
}
var qt2 = /* @__PURE__ */ new WeakMap();
var Ie = /* @__PURE__ */ new WeakMap();
function $t(t) {
  return Ie.get(t) || 1;
}
function lr(t, e2) {
  return { constTimeNegate: zt2, hasPrecomputes(n4) {
    return $t(n4) !== 1;
  }, unsafeLadder(n4, r2, o3 = t.ZERO) {
    let s2 = n4;
    for (; r2 > Se; ) r2 & gt2 && (o3 = o3.add(s2)), s2 = s2.double(), r2 >>= gt2;
    return o3;
  }, precomputeWindow(n4, r2) {
    const { windows: o3, windowSize: s2 } = Mt2(r2, e2), a3 = [];
    let u4 = n4, i3 = u4;
    for (let D5 = 0; D5 < o3; D5++) {
      i3 = u4, a3.push(i3);
      for (let c5 = 1; c5 < s2; c5++) i3 = i3.add(u4), a3.push(i3);
      u4 = i3.double();
    }
    return a3;
  }, wNAF(n4, r2, o3) {
    const { windows: s2, windowSize: a3 } = Mt2(n4, e2);
    let u4 = t.ZERO, i3 = t.BASE;
    const D5 = BigInt(2 ** n4 - 1), c5 = 2 ** n4, l4 = BigInt(n4);
    for (let p6 = 0; p6 < s2; p6++) {
      const w7 = p6 * a3;
      let h6 = Number(o3 & D5);
      o3 >>= l4, h6 > a3 && (h6 -= c5, o3 += gt2);
      const g7 = w7, S5 = w7 + Math.abs(h6) - 1, v6 = p6 % 2 !== 0, L4 = h6 < 0;
      h6 === 0 ? i3 = i3.add(zt2(v6, r2[g7])) : u4 = u4.add(zt2(L4, r2[S5]));
    }
    return { p: u4, f: i3 };
  }, wNAFUnsafe(n4, r2, o3, s2 = t.ZERO) {
    const { windows: a3, windowSize: u4 } = Mt2(n4, e2), i3 = BigInt(2 ** n4 - 1), D5 = 2 ** n4, c5 = BigInt(n4);
    for (let l4 = 0; l4 < a3; l4++) {
      const p6 = l4 * u4;
      if (o3 === Se) break;
      let w7 = Number(o3 & i3);
      if (o3 >>= c5, w7 > u4 && (w7 -= D5, o3 += gt2), w7 === 0) continue;
      let h6 = r2[p6 + Math.abs(w7) - 1];
      w7 < 0 && (h6 = h6.negate()), s2 = s2.add(h6);
    }
    return s2;
  }, getPrecomputes(n4, r2, o3) {
    let s2 = qt2.get(r2);
    return s2 || (s2 = this.precomputeWindow(r2, n4), n4 !== 1 && qt2.set(r2, o3(s2))), s2;
  }, wNAFCached(n4, r2, o3) {
    const s2 = $t(n4);
    return this.wNAF(s2, this.getPrecomputes(s2, n4, o3), r2);
  }, wNAFCachedUnsafe(n4, r2, o3, s2) {
    const a3 = $t(n4);
    return a3 === 1 ? this.unsafeLadder(n4, r2, s2) : this.wNAFUnsafe(a3, this.getPrecomputes(a3, n4, o3), r2, s2);
  }, setWindowSize(n4, r2) {
    ve2(r2, e2), Ie.set(n4, r2), qt2.delete(n4);
  } };
}
function br(t, e2, n4, r2) {
  if (dr(n4, t), hr(r2, e2), n4.length !== r2.length) throw new Error("arrays of points and scalars must have equal length");
  const o3 = t.ZERO, s2 = tr2(BigInt(n4.length)), a3 = s2 > 12 ? s2 - 3 : s2 > 4 ? s2 - 2 : s2 ? 2 : 1, u4 = (1 << a3) - 1, i3 = new Array(u4 + 1).fill(o3), D5 = Math.floor((e2.BITS - 1) / a3) * a3;
  let c5 = o3;
  for (let l4 = D5; l4 >= 0; l4 -= a3) {
    i3.fill(o3);
    for (let w7 = 0; w7 < r2.length; w7++) {
      const h6 = r2[w7], g7 = Number(h6 >> BigInt(l4) & BigInt(u4));
      i3[g7] = i3[g7].add(n4[w7]);
    }
    let p6 = o3;
    for (let w7 = i3.length - 1, h6 = o3; w7 > 0; w7--) h6 = h6.add(i3[w7]), p6 = p6.add(h6);
    if (c5 = c5.add(p6), l4 !== 0) for (let w7 = 0; w7 < a3; w7++) c5 = c5.double();
  }
  return c5;
}
function pr(t) {
  return ar(t.Fp), Ot(t, { n: "bigint", h: "bigint", Gx: "field", Gy: "field" }, { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }), Object.freeze({ ...me(t.n, t.nBitLength), ...t, p: t.Fp.ORDER });
}
var G = BigInt(0);
var j2 = BigInt(1);
var yt2 = BigInt(2);
var wr = BigInt(8);
var Er = { zip215: true };
function gr(t) {
  const e2 = pr(t);
  return Ot(t, { hash: "function", a: "bigint", d: "bigint", randomBytes: "function" }, { adjustScalarBytes: "function", domain: "function", uvRatio: "function", mapToCurve: "function" }), Object.freeze({ ...e2 });
}
function yr(t) {
  const e2 = gr(t), { Fp: n4, n: r2, prehash: o3, hash: s2, randomBytes: a3, nByteLength: u4, h: i3 } = e2, D5 = yt2 << BigInt(u4 * 8) - j2, c5 = n4.create, l4 = _e(e2.n, e2.nBitLength), p6 = e2.uvRatio || ((y7, f5) => {
    try {
      return { isValid: true, value: n4.sqrt(y7 * n4.inv(f5)) };
    } catch {
      return { isValid: false, value: G };
    }
  }), w7 = e2.adjustScalarBytes || ((y7) => y7), h6 = e2.domain || ((y7, f5, b6) => {
    if (Tt("phflag", b6), f5.length || b6) throw new Error("Contexts/pre-hash are not supported");
    return y7;
  });
  function g7(y7, f5) {
    ft2("coordinate " + y7, f5, G, D5);
  }
  function S5(y7) {
    if (!(y7 instanceof d3)) throw new Error("ExtendedPoint expected");
  }
  const v6 = xe((y7, f5) => {
    const { ex: b6, ey: E6, ez: B3 } = y7, C2 = y7.is0();
    f5 == null && (f5 = C2 ? wr : n4.inv(B3));
    const A2 = c5(b6 * f5), U6 = c5(E6 * f5), _5 = c5(B3 * f5);
    if (C2) return { x: G, y: j2 };
    if (_5 !== j2) throw new Error("invZ was invalid");
    return { x: A2, y: U6 };
  }), L4 = xe((y7) => {
    const { a: f5, d: b6 } = e2;
    if (y7.is0()) throw new Error("bad point: ZERO");
    const { ex: E6, ey: B3, ez: C2, et: A2 } = y7, U6 = c5(E6 * E6), _5 = c5(B3 * B3), T3 = c5(C2 * C2), $4 = c5(T3 * T3), R2 = c5(U6 * f5), V3 = c5(T3 * c5(R2 + _5)), Y = c5($4 + c5(b6 * c5(U6 * _5)));
    if (V3 !== Y) throw new Error("bad point: equation left != right (1)");
    const Z2 = c5(E6 * B3), X3 = c5(C2 * A2);
    if (Z2 !== X3) throw new Error("bad point: equation left != right (2)");
    return true;
  });
  class d3 {
    constructor(f5, b6, E6, B3) {
      this.ex = f5, this.ey = b6, this.ez = E6, this.et = B3, g7("x", f5), g7("y", b6), g7("z", E6), g7("t", B3), Object.freeze(this);
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    static fromAffine(f5) {
      if (f5 instanceof d3) throw new Error("extended point not allowed");
      const { x: b6, y: E6 } = f5 || {};
      return g7("x", b6), g7("y", E6), new d3(b6, E6, j2, c5(b6 * E6));
    }
    static normalizeZ(f5) {
      const b6 = n4.invertBatch(f5.map((E6) => E6.ez));
      return f5.map((E6, B3) => E6.toAffine(b6[B3])).map(d3.fromAffine);
    }
    static msm(f5, b6) {
      return br(d3, l4, f5, b6);
    }
    _setWindowSize(f5) {
      q2.setWindowSize(this, f5);
    }
    assertValidity() {
      L4(this);
    }
    equals(f5) {
      S5(f5);
      const { ex: b6, ey: E6, ez: B3 } = this, { ex: C2, ey: A2, ez: U6 } = f5, _5 = c5(b6 * U6), T3 = c5(C2 * B3), $4 = c5(E6 * U6), R2 = c5(A2 * B3);
      return _5 === T3 && $4 === R2;
    }
    is0() {
      return this.equals(d3.ZERO);
    }
    negate() {
      return new d3(c5(-this.ex), this.ey, this.ez, c5(-this.et));
    }
    double() {
      const { a: f5 } = e2, { ex: b6, ey: E6, ez: B3 } = this, C2 = c5(b6 * b6), A2 = c5(E6 * E6), U6 = c5(yt2 * c5(B3 * B3)), _5 = c5(f5 * C2), T3 = b6 + E6, $4 = c5(c5(T3 * T3) - C2 - A2), R2 = _5 + A2, V3 = R2 - U6, Y = _5 - A2, Z2 = c5($4 * V3), X3 = c5(R2 * Y), et2 = c5($4 * Y), pt3 = c5(V3 * R2);
      return new d3(Z2, X3, pt3, et2);
    }
    add(f5) {
      S5(f5);
      const { a: b6, d: E6 } = e2, { ex: B3, ey: C2, ez: A2, et: U6 } = this, { ex: _5, ey: T3, ez: $4, et: R2 } = f5;
      if (b6 === BigInt(-1)) {
        const re2 = c5((C2 - B3) * (T3 + _5)), oe3 = c5((C2 + B3) * (T3 - _5)), mt3 = c5(oe3 - re2);
        if (mt3 === G) return this.double();
        const se = c5(A2 * yt2 * R2), ie2 = c5(U6 * yt2 * $4), ue3 = ie2 + se, ce3 = oe3 + re2, ae2 = ie2 - se, Dn = c5(ue3 * mt3), dn2 = c5(ce3 * ae2), hn = c5(ue3 * ae2), ln2 = c5(mt3 * ce3);
        return new d3(Dn, dn2, ln2, hn);
      }
      const V3 = c5(B3 * _5), Y = c5(C2 * T3), Z2 = c5(U6 * E6 * R2), X3 = c5(A2 * $4), et2 = c5((B3 + C2) * (_5 + T3) - V3 - Y), pt3 = X3 - Z2, ee3 = X3 + Z2, ne2 = c5(Y - b6 * V3), un = c5(et2 * pt3), cn = c5(ee3 * ne2), an = c5(et2 * ne2), fn2 = c5(pt3 * ee3);
      return new d3(un, cn, fn2, an);
    }
    subtract(f5) {
      return this.add(f5.negate());
    }
    wNAF(f5) {
      return q2.wNAFCached(this, f5, d3.normalizeZ);
    }
    multiply(f5) {
      const b6 = f5;
      ft2("scalar", b6, j2, r2);
      const { p: E6, f: B3 } = this.wNAF(b6);
      return d3.normalizeZ([E6, B3])[0];
    }
    multiplyUnsafe(f5, b6 = d3.ZERO) {
      const E6 = f5;
      return ft2("scalar", E6, G, r2), E6 === G ? F3 : this.is0() || E6 === j2 ? this : q2.wNAFCachedUnsafe(this, E6, d3.normalizeZ, b6);
    }
    isSmallOrder() {
      return this.multiplyUnsafe(i3).is0();
    }
    isTorsionFree() {
      return q2.unsafeLadder(this, r2).is0();
    }
    toAffine(f5) {
      return v6(this, f5);
    }
    clearCofactor() {
      const { h: f5 } = e2;
      return f5 === j2 ? this : this.multiplyUnsafe(f5);
    }
    static fromHex(f5, b6 = false) {
      const { d: E6, a: B3 } = e2, C2 = n4.BYTES;
      f5 = W("pointHex", f5, C2), Tt("zip215", b6);
      const A2 = f5.slice(), U6 = f5[C2 - 1];
      A2[C2 - 1] = U6 & -129;
      const _5 = Et2(A2), T3 = b6 ? D5 : n4.ORDER;
      ft2("pointHex.y", _5, G, T3);
      const $4 = c5(_5 * _5), R2 = c5($4 - j2), V3 = c5(E6 * $4 - B3);
      let { isValid: Y, value: Z2 } = p6(R2, V3);
      if (!Y) throw new Error("Point.fromHex: invalid y coordinate");
      const X3 = (Z2 & j2) === j2, et2 = (U6 & 128) !== 0;
      if (!b6 && Z2 === G && et2) throw new Error("Point.fromHex: x=0 and x_0=1");
      return et2 !== X3 && (Z2 = c5(-Z2)), d3.fromAffine({ x: Z2, y: _5 });
    }
    static fromPrivateKey(f5) {
      return O6(f5).point;
    }
    toRawBytes() {
      const { x: f5, y: b6 } = this.toAffine(), E6 = Nt(b6, n4.BYTES);
      return E6[E6.length - 1] |= f5 & j2 ? 128 : 0, E6;
    }
    toHex() {
      return Ft2(this.toRawBytes());
    }
  }
  d3.BASE = new d3(e2.Gx, e2.Gy, j2, c5(e2.Gx * e2.Gy)), d3.ZERO = new d3(G, j2, j2, G);
  const { BASE: m3, ZERO: F3 } = d3, q2 = lr(d3, u4 * 8);
  function z4(y7) {
    return H(y7, r2);
  }
  function I2(y7) {
    return z4(Et2(y7));
  }
  function O6(y7) {
    const f5 = n4.BYTES;
    y7 = W("private key", y7, f5);
    const b6 = W("hashed private key", s2(y7), 2 * f5), E6 = w7(b6.slice(0, f5)), B3 = b6.slice(f5, 2 * f5), C2 = I2(E6), A2 = m3.multiply(C2), U6 = A2.toRawBytes();
    return { head: E6, prefix: B3, scalar: C2, point: A2, pointBytes: U6 };
  }
  function ot3(y7) {
    return O6(y7).pointBytes;
  }
  function tt2(y7 = new Uint8Array(), ...f5) {
    const b6 = ye(...f5);
    return I2(s2(h6(b6, W("context", y7), !!o3)));
  }
  function st2(y7, f5, b6 = {}) {
    y7 = W("message", y7), o3 && (y7 = o3(y7));
    const { prefix: E6, scalar: B3, pointBytes: C2 } = O6(f5), A2 = tt2(b6.context, E6, y7), U6 = m3.multiply(A2).toRawBytes(), _5 = tt2(b6.context, U6, C2, y7), T3 = z4(A2 + _5 * B3);
    ft2("signature.s", T3, G, r2);
    const $4 = ye(U6, Nt(T3, n4.BYTES));
    return W("result", $4, n4.BYTES * 2);
  }
  const at3 = Er;
  function Ct3(y7, f5, b6, E6 = at3) {
    const { context: B3, zip215: C2 } = E6, A2 = n4.BYTES;
    y7 = W("signature", y7, 2 * A2), f5 = W("message", f5), b6 = W("publicKey", b6, A2), C2 !== void 0 && Tt("zip215", C2), o3 && (f5 = o3(f5));
    const U6 = Et2(y7.slice(A2, 2 * A2));
    let _5, T3, $4;
    try {
      _5 = d3.fromHex(b6, C2), T3 = d3.fromHex(y7.slice(0, A2), C2), $4 = m3.multiplyUnsafe(U6);
    } catch {
      return false;
    }
    if (!C2 && _5.isSmallOrder()) return false;
    const R2 = tt2(B3, T3.toRawBytes(), _5.toRawBytes(), f5);
    return T3.add(_5.multiplyUnsafe(R2)).subtract($4).clearCofactor().equals(d3.ZERO);
  }
  return m3._setWindowSize(8), { CURVE: e2, getPublicKey: ot3, sign: st2, verify: Ct3, ExtendedPoint: d3, utils: { getExtendedPublicKey: O6, randomPrivateKey: () => a3(n4.BYTES), precompute(y7 = 8, f5 = d3.BASE) {
    return f5._setWindowSize(y7), f5.multiply(BigInt(3)), f5;
  } } };
}
BigInt(0), BigInt(1);
var kt2 = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949");
var Ue = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");
BigInt(0);
var xr = BigInt(1);
var Te = BigInt(2);
BigInt(3);
var Br = BigInt(5);
var Cr = BigInt(8);
function Ar(t) {
  const e2 = BigInt(10), n4 = BigInt(20), r2 = BigInt(40), o3 = BigInt(80), s2 = kt2, u4 = t * t % s2 * t % s2, i3 = J(u4, Te, s2) * u4 % s2, D5 = J(i3, xr, s2) * t % s2, c5 = J(D5, Br, s2) * D5 % s2, l4 = J(c5, e2, s2) * c5 % s2, p6 = J(l4, n4, s2) * l4 % s2, w7 = J(p6, r2, s2) * p6 % s2, h6 = J(w7, o3, s2) * w7 % s2, g7 = J(h6, o3, s2) * w7 % s2, S5 = J(g7, e2, s2) * c5 % s2;
  return { pow_p_5_8: J(S5, Te, s2) * t % s2, b2: u4 };
}
function mr(t) {
  return t[0] &= 248, t[31] &= 127, t[31] |= 64, t;
}
function _r(t, e2) {
  const n4 = kt2, r2 = H(e2 * e2 * e2, n4), o3 = H(r2 * r2 * e2, n4), s2 = Ar(t * o3).pow_p_5_8;
  let a3 = H(t * r2 * s2, n4);
  const u4 = H(e2 * a3 * a3, n4), i3 = a3, D5 = H(a3 * Ue, n4), c5 = u4 === t, l4 = u4 === H(-t, n4), p6 = u4 === H(-t * Ue, n4);
  return c5 && (a3 = i3), (l4 || p6) && (a3 = D5), ur(a3, n4) && (a3 = H(-a3, n4)), { isValid: c5 || l4, value: a3 };
}
var Sr = (() => _e(kt2, void 0, true))();
var vr = (() => ({ a: BigInt(-1), d: BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"), Fp: Sr, n: BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"), h: Cr, Gx: BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"), Gy: BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"), hash: Kn2, randomBytes: he, adjustScalarBytes: mr, uvRatio: _r }))();
var Rt = (() => yr(vr))();
var jt2 = "EdDSA";
var Zt = "JWT";
var ut2 = ".";
var Dt2 = "base64url";
var Gt2 = "utf8";
var xt2 = "utf8";
var Vt2 = ":";
var Yt2 = "did";
var Jt2 = "key";
var dt2 = "base58btc";
var Kt2 = "z";
var Wt2 = "K36";
var Ne = 32;
function Xt2(t) {
  return globalThis.Buffer != null ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : t;
}
function Le(t = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? Xt2(globalThis.Buffer.allocUnsafe(t)) : new Uint8Array(t);
}
function Oe(t, e2) {
  e2 || (e2 = t.reduce((o3, s2) => o3 + s2.length, 0));
  const n4 = Le(e2);
  let r2 = 0;
  for (const o3 of t) n4.set(o3, r2), r2 += o3.length;
  return Xt2(n4);
}
function Ir(t, e2) {
  if (t.length >= 255) throw new TypeError("Alphabet too long");
  for (var n4 = new Uint8Array(256), r2 = 0; r2 < n4.length; r2++) n4[r2] = 255;
  for (var o3 = 0; o3 < t.length; o3++) {
    var s2 = t.charAt(o3), a3 = s2.charCodeAt(0);
    if (n4[a3] !== 255) throw new TypeError(s2 + " is ambiguous");
    n4[a3] = o3;
  }
  var u4 = t.length, i3 = t.charAt(0), D5 = Math.log(u4) / Math.log(256), c5 = Math.log(256) / Math.log(u4);
  function l4(h6) {
    if (h6 instanceof Uint8Array || (ArrayBuffer.isView(h6) ? h6 = new Uint8Array(h6.buffer, h6.byteOffset, h6.byteLength) : Array.isArray(h6) && (h6 = Uint8Array.from(h6))), !(h6 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (h6.length === 0) return "";
    for (var g7 = 0, S5 = 0, v6 = 0, L4 = h6.length; v6 !== L4 && h6[v6] === 0; ) v6++, g7++;
    for (var d3 = (L4 - v6) * c5 + 1 >>> 0, m3 = new Uint8Array(d3); v6 !== L4; ) {
      for (var F3 = h6[v6], q2 = 0, z4 = d3 - 1; (F3 !== 0 || q2 < S5) && z4 !== -1; z4--, q2++) F3 += 256 * m3[z4] >>> 0, m3[z4] = F3 % u4 >>> 0, F3 = F3 / u4 >>> 0;
      if (F3 !== 0) throw new Error("Non-zero carry");
      S5 = q2, v6++;
    }
    for (var I2 = d3 - S5; I2 !== d3 && m3[I2] === 0; ) I2++;
    for (var O6 = i3.repeat(g7); I2 < d3; ++I2) O6 += t.charAt(m3[I2]);
    return O6;
  }
  function p6(h6) {
    if (typeof h6 != "string") throw new TypeError("Expected String");
    if (h6.length === 0) return new Uint8Array();
    var g7 = 0;
    if (h6[g7] !== " ") {
      for (var S5 = 0, v6 = 0; h6[g7] === i3; ) S5++, g7++;
      for (var L4 = (h6.length - g7) * D5 + 1 >>> 0, d3 = new Uint8Array(L4); h6[g7]; ) {
        var m3 = n4[h6.charCodeAt(g7)];
        if (m3 === 255) return;
        for (var F3 = 0, q2 = L4 - 1; (m3 !== 0 || F3 < v6) && q2 !== -1; q2--, F3++) m3 += u4 * d3[q2] >>> 0, d3[q2] = m3 % 256 >>> 0, m3 = m3 / 256 >>> 0;
        if (m3 !== 0) throw new Error("Non-zero carry");
        v6 = F3, g7++;
      }
      if (h6[g7] !== " ") {
        for (var z4 = L4 - v6; z4 !== L4 && d3[z4] === 0; ) z4++;
        for (var I2 = new Uint8Array(S5 + (L4 - z4)), O6 = S5; z4 !== L4; ) I2[O6++] = d3[z4++];
        return I2;
      }
    }
  }
  function w7(h6) {
    var g7 = p6(h6);
    if (g7) return g7;
    throw new Error(`Non-${e2} character`);
  }
  return { encode: l4, decodeUnsafe: p6, decode: w7 };
}
var Ur = Ir;
var Tr = Ur;
var He = (t) => {
  if (t instanceof Uint8Array && t.constructor.name === "Uint8Array") return t;
  if (t instanceof ArrayBuffer) return new Uint8Array(t);
  if (ArrayBuffer.isView(t)) return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Fr = (t) => new TextEncoder().encode(t);
var Nr = (t) => new TextDecoder().decode(t);
var Lr = class {
  constructor(e2, n4, r2) {
    this.name = e2, this.prefix = n4, this.baseEncode = r2;
  }
  encode(e2) {
    if (e2 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e2)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var Or = class {
  constructor(e2, n4, r2) {
    if (this.name = e2, this.prefix = n4, n4.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = n4.codePointAt(0), this.baseDecode = r2;
  }
  decode(e2) {
    if (typeof e2 == "string") {
      if (e2.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e2)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e2.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e2) {
    return ze(this, e2);
  }
};
var Hr = class {
  constructor(e2) {
    this.decoders = e2;
  }
  or(e2) {
    return ze(this, e2);
  }
  decode(e2) {
    const n4 = e2[0], r2 = this.decoders[n4];
    if (r2) return r2.decode(e2);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e2)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var ze = (t, e2) => new Hr({ ...t.decoders || { [t.prefix]: t }, ...e2.decoders || { [e2.prefix]: e2 } });
var zr = class {
  constructor(e2, n4, r2, o3) {
    this.name = e2, this.prefix = n4, this.baseEncode = r2, this.baseDecode = o3, this.encoder = new Lr(e2, n4, r2), this.decoder = new Or(e2, n4, o3);
  }
  encode(e2) {
    return this.encoder.encode(e2);
  }
  decode(e2) {
    return this.decoder.decode(e2);
  }
};
var Bt2 = ({ name: t, prefix: e2, encode: n4, decode: r2 }) => new zr(t, e2, n4, r2);
var ht2 = ({ prefix: t, name: e2, alphabet: n4 }) => {
  const { encode: r2, decode: o3 } = Tr(n4, e2);
  return Bt2({ prefix: t, name: e2, encode: r2, decode: (s2) => He(o3(s2)) });
};
var Mr = (t, e2, n4, r2) => {
  const o3 = {};
  for (let c5 = 0; c5 < e2.length; ++c5) o3[e2[c5]] = c5;
  let s2 = t.length;
  for (; t[s2 - 1] === "="; ) --s2;
  const a3 = new Uint8Array(s2 * n4 / 8 | 0);
  let u4 = 0, i3 = 0, D5 = 0;
  for (let c5 = 0; c5 < s2; ++c5) {
    const l4 = o3[t[c5]];
    if (l4 === void 0) throw new SyntaxError(`Non-${r2} character`);
    i3 = i3 << n4 | l4, u4 += n4, u4 >= 8 && (u4 -= 8, a3[D5++] = 255 & i3 >> u4);
  }
  if (u4 >= n4 || 255 & i3 << 8 - u4) throw new SyntaxError("Unexpected end of data");
  return a3;
};
var qr = (t, e2, n4) => {
  const r2 = e2[e2.length - 1] === "=", o3 = (1 << n4) - 1;
  let s2 = "", a3 = 0, u4 = 0;
  for (let i3 = 0; i3 < t.length; ++i3) for (u4 = u4 << 8 | t[i3], a3 += 8; a3 > n4; ) a3 -= n4, s2 += e2[o3 & u4 >> a3];
  if (a3 && (s2 += e2[o3 & u4 << n4 - a3]), r2) for (; s2.length * n4 & 7; ) s2 += "=";
  return s2;
};
var k4 = ({ name: t, prefix: e2, bitsPerChar: n4, alphabet: r2 }) => Bt2({ prefix: e2, name: t, encode(o3) {
  return qr(o3, r2, n4);
}, decode(o3) {
  return Mr(o3, r2, n4, t);
} });
var $r = Bt2({ prefix: "\0", name: "identity", encode: (t) => Nr(t), decode: (t) => Fr(t) });
var kr = Object.freeze({ __proto__: null, identity: $r });
var Rr = k4({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var jr = Object.freeze({ __proto__: null, base2: Rr });
var Zr = k4({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Gr = Object.freeze({ __proto__: null, base8: Zr });
var Vr = ht2({ prefix: "9", name: "base10", alphabet: "0123456789" });
var Yr = Object.freeze({ __proto__: null, base10: Vr });
var Jr = k4({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var Kr = k4({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var Wr = Object.freeze({ __proto__: null, base16: Jr, base16upper: Kr });
var Xr = k4({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var Pr = k4({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var Qr = k4({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var to = k4({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var eo = k4({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var no = k4({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var ro = k4({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var oo = k4({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var so = k4({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var io = Object.freeze({ __proto__: null, base32: Xr, base32upper: Pr, base32pad: Qr, base32padupper: to, base32hex: eo, base32hexupper: no, base32hexpad: ro, base32hexpadupper: oo, base32z: so });
var uo = ht2({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var co = ht2({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var ao = Object.freeze({ __proto__: null, base36: uo, base36upper: co });
var fo = ht2({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Do = ht2({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var ho = Object.freeze({ __proto__: null, base58btc: fo, base58flickr: Do });
var lo = k4({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var bo = k4({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var po = k4({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var wo = k4({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var Eo = Object.freeze({ __proto__: null, base64: lo, base64pad: bo, base64url: po, base64urlpad: wo });
var Me = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var go = Me.reduce((t, e2, n4) => (t[n4] = e2, t), []);
var yo = Me.reduce((t, e2, n4) => (t[e2.codePointAt(0)] = n4, t), []);
function xo(t) {
  return t.reduce((e2, n4) => (e2 += go[n4], e2), "");
}
function Bo(t) {
  const e2 = [];
  for (const n4 of t) {
    const r2 = yo[n4.codePointAt(0)];
    if (r2 === void 0) throw new Error(`Non-base256emoji character: ${n4}`);
    e2.push(r2);
  }
  return new Uint8Array(e2);
}
var Co = Bt2({ prefix: "🚀", name: "base256emoji", encode: xo, decode: Bo });
var Ao = Object.freeze({ __proto__: null, base256emoji: Co });
var mo = $e;
var qe = 128;
var _o = 127;
var So = ~_o;
var vo = Math.pow(2, 31);
function $e(t, e2, n4) {
  e2 = e2 || [], n4 = n4 || 0;
  for (var r2 = n4; t >= vo; ) e2[n4++] = t & 255 | qe, t /= 128;
  for (; t & So; ) e2[n4++] = t & 255 | qe, t >>>= 7;
  return e2[n4] = t | 0, $e.bytes = n4 - r2 + 1, e2;
}
var Io = Pt;
var Uo = 128;
var ke = 127;
function Pt(t, r2) {
  var n4 = 0, r2 = r2 || 0, o3 = 0, s2 = r2, a3, u4 = t.length;
  do {
    if (s2 >= u4) throw Pt.bytes = 0, new RangeError("Could not decode varint");
    a3 = t[s2++], n4 += o3 < 28 ? (a3 & ke) << o3 : (a3 & ke) * Math.pow(2, o3), o3 += 7;
  } while (a3 >= Uo);
  return Pt.bytes = s2 - r2, n4;
}
var To = Math.pow(2, 7);
var Fo = Math.pow(2, 14);
var No = Math.pow(2, 21);
var Lo = Math.pow(2, 28);
var Oo = Math.pow(2, 35);
var Ho = Math.pow(2, 42);
var zo = Math.pow(2, 49);
var Mo = Math.pow(2, 56);
var qo = Math.pow(2, 63);
var $o = function(t) {
  return t < To ? 1 : t < Fo ? 2 : t < No ? 3 : t < Lo ? 4 : t < Oo ? 5 : t < Ho ? 6 : t < zo ? 7 : t < Mo ? 8 : t < qo ? 9 : 10;
};
var ko = { encode: mo, decode: Io, encodingLength: $o };
var Re = ko;
var je = (t, e2, n4 = 0) => (Re.encode(t, e2, n4), e2);
var Ze = (t) => Re.encodingLength(t);
var Qt = (t, e2) => {
  const n4 = e2.byteLength, r2 = Ze(t), o3 = r2 + Ze(n4), s2 = new Uint8Array(o3 + n4);
  return je(t, s2, 0), je(n4, s2, r2), s2.set(e2, o3), new Ro(t, n4, e2, s2);
};
var Ro = class {
  constructor(e2, n4, r2, o3) {
    this.code = e2, this.size = n4, this.digest = r2, this.bytes = o3;
  }
};
var Ge = ({ name: t, code: e2, encode: n4 }) => new jo(t, e2, n4);
var jo = class {
  constructor(e2, n4, r2) {
    this.name = e2, this.code = n4, this.encode = r2;
  }
  digest(e2) {
    if (e2 instanceof Uint8Array) {
      const n4 = this.encode(e2);
      return n4 instanceof Uint8Array ? Qt(this.code, n4) : n4.then((r2) => Qt(this.code, r2));
    } else throw Error("Unknown type, must be binary type");
  }
};
var Ve = (t) => async (e2) => new Uint8Array(await crypto.subtle.digest(t, e2));
var Zo = Ge({ name: "sha2-256", code: 18, encode: Ve("SHA-256") });
var Go = Ge({ name: "sha2-512", code: 19, encode: Ve("SHA-512") });
var Vo = Object.freeze({ __proto__: null, sha256: Zo, sha512: Go });
var Ye = 0;
var Yo = "identity";
var Je = He;
var Jo = (t) => Qt(Ye, Je(t));
var Ko = { code: Ye, name: Yo, encode: Je, digest: Jo };
var Wo = Object.freeze({ __proto__: null, identity: Ko });
new TextEncoder(), new TextDecoder();
var Ke = { ...kr, ...jr, ...Gr, ...Yr, ...Wr, ...io, ...ao, ...ho, ...Eo, ...Ao };
({ ...Vo, ...Wo });
function We(t, e2, n4, r2) {
  return { name: t, prefix: e2, encoder: { name: t, prefix: e2, encode: n4 }, decoder: { decode: r2 } };
}
var Xe = We("utf8", "u", (t) => "u" + new TextDecoder("utf8").decode(t), (t) => new TextEncoder().encode(t.substring(1)));
var te2 = We("ascii", "a", (t) => {
  let e2 = "a";
  for (let n4 = 0; n4 < t.length; n4++) e2 += String.fromCharCode(t[n4]);
  return e2;
}, (t) => {
  t = t.substring(1);
  const e2 = Le(t.length);
  for (let n4 = 0; n4 < t.length; n4++) e2[n4] = t.charCodeAt(n4);
  return e2;
});
var Pe = { utf8: Xe, "utf-8": Xe, hex: Ke.base16, latin1: te2, ascii: te2, binary: te2, ...Ke };
function ct(t, e2 = "utf8") {
  const n4 = Pe[e2];
  if (!n4) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(t.buffer, t.byteOffset, t.byteLength).toString("utf8") : n4.encoder.encode(t).substring(1);
}
function rt2(t, e2 = "utf8") {
  const n4 = Pe[e2];
  if (!n4) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? Xt2(globalThis.Buffer.from(t, "utf-8")) : n4.decoder.decode(`${n4.prefix}${t}`);
}
function bt(t) {
  return ct(rt2(safeJsonStringify(t), Gt2), Dt2);
}
function Qe(t) {
  const e2 = rt2(Wt2, dt2), n4 = Kt2 + ct(Oe([e2, t]), dt2);
  return [Yt2, Jt2, n4].join(Vt2);
}
function en2(t) {
  return ct(t, Dt2);
}
function rn(t) {
  return rt2([bt(t.header), bt(t.payload)].join(ut2), xt2);
}
function on(t) {
  return [bt(t.header), bt(t.payload), en2(t.signature)].join(ut2);
}
function Po(t = he(Ne)) {
  const e2 = Rt.getPublicKey(t);
  return { secretKey: Oe([t, e2]), publicKey: e2 };
}
async function Qo(t, e2, n4, r2, o3 = (0, import_time.fromMiliseconds)(Date.now())) {
  const s2 = { alg: jt2, typ: Zt }, a3 = Qe(r2.publicKey), u4 = o3 + n4, i3 = { iss: a3, sub: t, aud: e2, iat: o3, exp: u4 }, D5 = rn({ header: s2, payload: i3 }), c5 = Rt.sign(D5, r2.secretKey.slice(0, 32));
  return on({ header: s2, payload: i3, signature: c5 });
}

// node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/util/as-uint8array.js
function asUint8Array(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

// node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/alloc.js
function allocUnsafe(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return asUint8Array(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/identity.js
var identity_exports = {};
__export(identity_exports, {
  identity: () => identity
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/vendor/base-x.js
function base(ALPHABET, name2) {
  if (ALPHABET.length >= 255) {
    throw new TypeError("Alphabet too long");
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j6 = 0; j6 < BASE_MAP.length; j6++) {
    BASE_MAP[j6] = 255;
  }
  for (var i3 = 0; i3 < ALPHABET.length; i3++) {
    var x4 = ALPHABET.charAt(i3);
    var xc = x4.charCodeAt(0);
    if (BASE_MAP[xc] !== 255) {
      throw new TypeError(x4 + " is ambiguous");
    }
    BASE_MAP[xc] = i3;
  }
  var BASE = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE);
  function encode5(source) {
    if (source instanceof Uint8Array) ;
    else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError("Expected Uint8Array");
    }
    if (source.length === 0) {
      return "";
    }
    var zeroes = 0;
    var length2 = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i4 = 0;
      for (var it1 = size - 1; (carry !== 0 || i4 < length2) && it1 !== -1; it1--, i4++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE >>> 0;
        carry = carry / BASE >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i4;
      pbegin++;
    }
    var it22 = size - length2;
    while (it22 !== size && b58[it22] === 0) {
      it22++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it22 < size; ++it22) {
      str += ALPHABET.charAt(b58[it22]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== "string") {
      throw new TypeError("Expected String");
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === " ") {
      return;
    }
    var zeroes = 0;
    var length2 = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i4 = 0;
      for (var it3 = size - 1; (carry !== 0 || i4 < length2) && it3 !== -1; it3--, i4++) {
        carry += BASE * b256[it3] >>> 0;
        b256[it3] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i4;
      psz++;
    }
    if (source[psz] === " ") {
      return;
    }
    var it4 = size - length2;
    while (it4 !== size && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size - it4));
    var j7 = zeroes;
    while (it4 !== size) {
      vch[j7++] = b256[it4++];
    }
    return vch;
  }
  function decode6(string2) {
    var buffer = decodeUnsafe(string2);
    if (buffer) {
      return buffer;
    }
    throw new Error(`Non-${name2} character`);
  }
  return {
    encode: encode5,
    decodeUnsafe,
    decode: decode6
  };
}
var src = base;
var _brrp__multiformats_scope_baseX = src;
var base_x_default = _brrp__multiformats_scope_baseX;

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bytes.js
var empty = new Uint8Array(0);
var equals = (aa, bb) => {
  if (aa === bb)
    return true;
  if (aa.byteLength !== bb.byteLength) {
    return false;
  }
  for (let ii = 0; ii < aa.byteLength; ii++) {
    if (aa[ii] !== bb[ii]) {
      return false;
    }
  }
  return true;
};
var coerce = (o3) => {
  if (o3 instanceof Uint8Array && o3.constructor.name === "Uint8Array")
    return o3;
  if (o3 instanceof ArrayBuffer)
    return new Uint8Array(o3);
  if (ArrayBuffer.isView(o3)) {
    return new Uint8Array(o3.buffer, o3.byteOffset, o3.byteLength);
  }
  throw new Error("Unknown type, must be binary type");
};
var fromString = (str) => new TextEncoder().encode(str);
var toString = (b6) => new TextDecoder().decode(b6);

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base.js
var Encoder = class {
  constructor(name2, prefix, baseEncode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  encode(bytes) {
    if (bytes instanceof Uint8Array) {
      return `${this.prefix}${this.baseEncode(bytes)}`;
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};
var Decoder = class {
  constructor(name2, prefix, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === void 0) {
      throw new Error("Invalid prefix character");
    }
    this.prefixCodePoint = prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  decode(text) {
    if (typeof text === "string") {
      if (text.codePointAt(0) !== this.prefixCodePoint) {
        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      }
      return this.baseDecode(text.slice(this.prefix.length));
    } else {
      throw Error("Can only multibase decode strings");
    }
  }
  or(decoder) {
    return or2(this, decoder);
  }
};
var ComposedDecoder = class {
  constructor(decoders) {
    this.decoders = decoders;
  }
  or(decoder) {
    return or2(this, decoder);
  }
  decode(input) {
    const prefix = input[0];
    const decoder = this.decoders[prefix];
    if (decoder) {
      return decoder.decode(input);
    } else {
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
};
var or2 = (left, right) => new ComposedDecoder({
  ...left.decoders || { [left.prefix]: left },
  ...right.decoders || { [right.prefix]: right }
});
var Codec = class {
  constructor(name2, prefix, baseEncode, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder(name2, prefix, baseEncode);
    this.decoder = new Decoder(name2, prefix, baseDecode);
  }
  encode(input) {
    return this.encoder.encode(input);
  }
  decode(input) {
    return this.decoder.decode(input);
  }
};
var from = ({ name: name2, prefix, encode: encode5, decode: decode6 }) => new Codec(name2, prefix, encode5, decode6);
var baseX = ({ prefix, name: name2, alphabet: alphabet2 }) => {
  const { encode: encode5, decode: decode6 } = base_x_default(alphabet2, name2);
  return from({
    prefix,
    name: name2,
    encode: encode5,
    decode: (text) => coerce(decode6(text))
  });
};
var decode = (string2, alphabet2, bitsPerChar, name2) => {
  const codes = {};
  for (let i3 = 0; i3 < alphabet2.length; ++i3) {
    codes[alphabet2[i3]] = i3;
  }
  let end = string2.length;
  while (string2[end - 1] === "=") {
    --end;
  }
  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i3 = 0; i3 < end; ++i3) {
    const value = codes[string2[i3]];
    if (value === void 0) {
      throw new SyntaxError(`Non-${name2} character`);
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
    throw new SyntaxError("Unexpected end of data");
  }
  return out;
};
var encode = (data, alphabet2, bitsPerChar) => {
  const pad = alphabet2[alphabet2.length - 1] === "=";
  const mask = (1 << bitsPerChar) - 1;
  let out = "";
  let bits = 0;
  let buffer = 0;
  for (let i3 = 0; i3 < data.length; ++i3) {
    buffer = buffer << 8 | data[i3];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet2[mask & buffer >> bits];
    }
  }
  if (bits) {
    out += alphabet2[mask & buffer << bitsPerChar - bits];
  }
  if (pad) {
    while (out.length * bitsPerChar & 7) {
      out += "=";
    }
  }
  return out;
};
var rfc4648 = ({ name: name2, prefix, bitsPerChar, alphabet: alphabet2 }) => {
  return from({
    prefix,
    name: name2,
    encode(input) {
      return encode(input, alphabet2, bitsPerChar);
    },
    decode(input) {
      return decode(input, alphabet2, bitsPerChar, name2);
    }
  });
};

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/identity.js
var identity = from({
  prefix: "\0",
  name: "identity",
  encode: (buf) => toString(buf),
  decode: (str) => fromString(str)
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base2.js
var base2_exports = {};
__export(base2_exports, {
  base2: () => base2
});
var base2 = rfc4648({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base8.js
var base8_exports = {};
__export(base8_exports, {
  base8: () => base8
});
var base8 = rfc4648({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base10.js
var base10_exports = {};
__export(base10_exports, {
  base10: () => base10
});
var base10 = baseX({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base16.js
var base16_exports = {};
__export(base16_exports, {
  base16: () => base16,
  base16upper: () => base16upper
});
var base16 = rfc4648({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
});
var base16upper = rfc4648({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base32.js
var base32_exports = {};
__export(base32_exports, {
  base32: () => base32,
  base32hex: () => base32hex,
  base32hexpad: () => base32hexpad,
  base32hexpadupper: () => base32hexpadupper,
  base32hexupper: () => base32hexupper,
  base32pad: () => base32pad,
  base32padupper: () => base32padupper,
  base32upper: () => base32upper,
  base32z: () => base32z
});
var base32 = rfc4648({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
var base32upper = rfc4648({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
var base32pad = rfc4648({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
var base32padupper = rfc4648({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
var base32hex = rfc4648({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
var base32hexupper = rfc4648({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
var base32hexpad = rfc4648({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
var base32hexpadupper = rfc4648({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
var base32z = rfc4648({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base36.js
var base36_exports = {};
__export(base36_exports, {
  base36: () => base36,
  base36upper: () => base36upper
});
var base36 = baseX({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
});
var base36upper = baseX({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base58.js
var base58_exports = {};
__export(base58_exports, {
  base58btc: () => base58btc,
  base58flickr: () => base58flickr
});
var base58btc = baseX({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
var base58flickr = baseX({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base64.js
var base64_exports = {};
__export(base64_exports, {
  base64: () => base64,
  base64pad: () => base64pad,
  base64url: () => base64url,
  base64urlpad: () => base64urlpad
});
var base64 = rfc4648({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
});
var base64pad = rfc4648({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
});
var base64url = rfc4648({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
});
var base64urlpad = rfc4648({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/bases/base256emoji.js
var base256emoji_exports = {};
__export(base256emoji_exports, {
  base256emoji: () => base256emoji
});
var alphabet = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var alphabetBytesToChars = alphabet.reduce((p6, c5, i3) => {
  p6[i3] = c5;
  return p6;
}, []);
var alphabetCharsToBytes = alphabet.reduce((p6, c5, i3) => {
  p6[c5.codePointAt(0)] = i3;
  return p6;
}, []);
function encode2(data) {
  return data.reduce((p6, c5) => {
    p6 += alphabetBytesToChars[c5];
    return p6;
  }, "");
}
function decode2(str) {
  const byts = [];
  for (const char of str) {
    const byt = alphabetCharsToBytes[char.codePointAt(0)];
    if (byt === void 0) {
      throw new Error(`Non-base256emoji character: ${char}`);
    }
    byts.push(byt);
  }
  return new Uint8Array(byts);
}
var base256emoji = from({
  prefix: "🚀",
  name: "base256emoji",
  encode: encode2,
  decode: decode2
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha2_browser_exports = {};
__export(sha2_browser_exports, {
  sha256: () => sha256,
  sha512: () => sha512
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/vendor/varint.js
var encode_1 = encode3;
var MSB = 128;
var REST = 127;
var MSBALL = ~REST;
var INT = Math.pow(2, 31);
function encode3(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT) {
    out[offset++] = num & 255 | MSB;
    num /= 128;
  }
  while (num & MSBALL) {
    out[offset++] = num & 255 | MSB;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode3.bytes = offset - oldOffset + 1;
  return out;
}
var decode3 = read;
var MSB$1 = 128;
var REST$1 = 127;
function read(buf, offset) {
  var res = 0, offset = offset || 0, shift = 0, counter = offset, b6, l4 = buf.length;
  do {
    if (counter >= l4) {
      read.bytes = 0;
      throw new RangeError("Could not decode varint");
    }
    b6 = buf[counter++];
    res += shift < 28 ? (b6 & REST$1) << shift : (b6 & REST$1) * Math.pow(2, shift);
    shift += 7;
  } while (b6 >= MSB$1);
  read.bytes = counter - offset;
  return res;
}
var N1 = Math.pow(2, 7);
var N22 = Math.pow(2, 14);
var N32 = Math.pow(2, 21);
var N4 = Math.pow(2, 28);
var N5 = Math.pow(2, 35);
var N6 = Math.pow(2, 42);
var N7 = Math.pow(2, 49);
var N8 = Math.pow(2, 56);
var N9 = Math.pow(2, 63);
var length = function(value) {
  return value < N1 ? 1 : value < N22 ? 2 : value < N32 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
};
var varint = {
  encode: encode_1,
  decode: decode3,
  encodingLength: length
};
var _brrp_varint = varint;
var varint_default = _brrp_varint;

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/varint.js
var decode4 = (data, offset = 0) => {
  const code2 = varint_default.decode(data, offset);
  return [
    code2,
    varint_default.decode.bytes
  ];
};
var encodeTo = (int, target, offset = 0) => {
  varint_default.encode(int, target, offset);
  return target;
};
var encodingLength = (int) => {
  return varint_default.encodingLength(int);
};

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/digest.js
var create = (code2, digest2) => {
  const size = digest2.byteLength;
  const sizeOffset = encodingLength(code2);
  const digestOffset = sizeOffset + encodingLength(size);
  const bytes = new Uint8Array(digestOffset + size);
  encodeTo(code2, bytes, 0);
  encodeTo(size, bytes, sizeOffset);
  bytes.set(digest2, digestOffset);
  return new Digest(code2, size, digest2, bytes);
};
var decode5 = (multihash) => {
  const bytes = coerce(multihash);
  const [code2, sizeOffset] = decode4(bytes);
  const [size, digestOffset] = decode4(bytes.subarray(sizeOffset));
  const digest2 = bytes.subarray(sizeOffset + digestOffset);
  if (digest2.byteLength !== size) {
    throw new Error("Incorrect length");
  }
  return new Digest(code2, size, digest2, bytes);
};
var equals2 = (a3, b6) => {
  if (a3 === b6) {
    return true;
  } else {
    return a3.code === b6.code && a3.size === b6.size && equals(a3.bytes, b6.bytes);
  }
};
var Digest = class {
  constructor(code2, size, digest2, bytes) {
    this.code = code2;
    this.size = size;
    this.digest = digest2;
    this.bytes = bytes;
  }
};

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/hasher.js
var from2 = ({ name: name2, code: code2, encode: encode5 }) => new Hasher(name2, code2, encode5);
var Hasher = class {
  constructor(name2, code2, encode5) {
    this.name = name2;
    this.code = code2;
    this.encode = encode5;
  }
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? create(this.code, result) : result.then((digest2) => create(this.code, digest2));
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha = (name2) => async (data) => new Uint8Array(await crypto.subtle.digest(name2, data));
var sha256 = from2({
  name: "sha2-256",
  code: 18,
  encode: sha("SHA-256")
});
var sha512 = from2({
  name: "sha2-512",
  code: 19,
  encode: sha("SHA-512")
});

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/hashes/identity.js
var identity_exports2 = {};
__export(identity_exports2, {
  identity: () => identity2
});
var code = 0;
var name = "identity";
var encode4 = coerce;
var digest = (input) => create(code, encode4(input));
var identity2 = {
  code,
  name,
  encode: encode4,
  digest
};

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/codecs/json.js
var textEncoder = new TextEncoder();
var textDecoder = new TextDecoder();

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/cid.js
var CID = class _CID {
  constructor(version2, code2, multihash, bytes) {
    this.code = code2;
    this.version = version2;
    this.multihash = multihash;
    this.bytes = bytes;
    this.byteOffset = bytes.byteOffset;
    this.byteLength = bytes.byteLength;
    this.asCID = this;
    this._baseCache = /* @__PURE__ */ new Map();
    Object.defineProperties(this, {
      byteOffset: hidden,
      byteLength: hidden,
      code: readonly,
      version: readonly,
      multihash: readonly,
      bytes: readonly,
      _baseCache: hidden,
      asCID: hidden
    });
  }
  toV0() {
    switch (this.version) {
      case 0: {
        return this;
      }
      default: {
        const { code: code2, multihash } = this;
        if (code2 !== DAG_PB_CODE) {
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        }
        if (multihash.code !== SHA_256_CODE) {
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        }
        return _CID.createV0(multihash);
      }
    }
  }
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: code2, digest: digest2 } = this.multihash;
        const multihash = create(code2, digest2);
        return _CID.createV1(this.code, multihash);
      }
      case 1: {
        return this;
      }
      default: {
        throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
      }
    }
  }
  equals(other) {
    return other && this.code === other.code && this.version === other.version && equals2(this.multihash, other.multihash);
  }
  toString(base3) {
    const { bytes, version: version2, _baseCache } = this;
    switch (version2) {
      case 0:
        return toStringV0(bytes, _baseCache, base3 || base58btc.encoder);
      default:
        return toStringV1(bytes, _baseCache, base3 || base32.encoder);
    }
  }
  toJSON() {
    return {
      code: this.code,
      version: this.version,
      hash: this.multihash.bytes
    };
  }
  get [Symbol.toStringTag]() {
    return "CID";
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return "CID(" + this.toString() + ")";
  }
  static isCID(value) {
    deprecate(/^0\.0/, IS_CID_DEPRECATION);
    return !!(value && (value[cidSymbol] || value.asCID === value));
  }
  get toBaseEncodedString() {
    throw new Error("Deprecated, use .toString()");
  }
  get codec() {
    throw new Error('"codec" property is deprecated, use integer "code" property instead');
  }
  get buffer() {
    throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead");
  }
  get multibaseName() {
    throw new Error('"multibaseName" property is deprecated');
  }
  get prefix() {
    throw new Error('"prefix" property is deprecated');
  }
  static asCID(value) {
    if (value instanceof _CID) {
      return value;
    } else if (value != null && value.asCID === value) {
      const { version: version2, code: code2, multihash, bytes } = value;
      return new _CID(version2, code2, multihash, bytes || encodeCID(version2, code2, multihash.bytes));
    } else if (value != null && value[cidSymbol] === true) {
      const { version: version2, multihash, code: code2 } = value;
      const digest2 = decode5(multihash);
      return _CID.create(version2, code2, digest2);
    } else {
      return null;
    }
  }
  static create(version2, code2, digest2) {
    if (typeof code2 !== "number") {
      throw new Error("String codecs are no longer supported");
    }
    switch (version2) {
      case 0: {
        if (code2 !== DAG_PB_CODE) {
          throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);
        } else {
          return new _CID(version2, code2, digest2, digest2.bytes);
        }
      }
      case 1: {
        const bytes = encodeCID(version2, code2, digest2.bytes);
        return new _CID(version2, code2, digest2, bytes);
      }
      default: {
        throw new Error("Invalid version");
      }
    }
  }
  static createV0(digest2) {
    return _CID.create(0, DAG_PB_CODE, digest2);
  }
  static createV1(code2, digest2) {
    return _CID.create(1, code2, digest2);
  }
  static decode(bytes) {
    const [cid, remainder] = _CID.decodeFirst(bytes);
    if (remainder.length) {
      throw new Error("Incorrect length");
    }
    return cid;
  }
  static decodeFirst(bytes) {
    const specs = _CID.inspectBytes(bytes);
    const prefixSize = specs.size - specs.multihashSize;
    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
    if (multihashBytes.byteLength !== specs.multihashSize) {
      throw new Error("Incorrect length");
    }
    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
    const digest2 = new Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
    const cid = specs.version === 0 ? _CID.createV0(digest2) : _CID.createV1(specs.codec, digest2);
    return [
      cid,
      bytes.subarray(specs.size)
    ];
  }
  static inspectBytes(initialBytes) {
    let offset = 0;
    const next = () => {
      const [i3, length2] = decode4(initialBytes.subarray(offset));
      offset += length2;
      return i3;
    };
    let version2 = next();
    let codec = DAG_PB_CODE;
    if (version2 === 18) {
      version2 = 0;
      offset = 0;
    } else if (version2 === 1) {
      codec = next();
    }
    if (version2 !== 0 && version2 !== 1) {
      throw new RangeError(`Invalid CID version ${version2}`);
    }
    const prefixSize = offset;
    const multihashCode = next();
    const digestSize = next();
    const size = offset + digestSize;
    const multihashSize = size - prefixSize;
    return {
      version: version2,
      codec,
      multihashCode,
      digestSize,
      multihashSize,
      size
    };
  }
  static parse(source, base3) {
    const [prefix, bytes] = parseCIDtoBytes(source, base3);
    const cid = _CID.decode(bytes);
    cid._baseCache.set(prefix, source);
    return cid;
  }
};
var parseCIDtoBytes = (source, base3) => {
  switch (source[0]) {
    case "Q": {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(`${base58btc.prefix}${source}`)
      ];
    }
    case base58btc.prefix: {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(source)
      ];
    }
    case base32.prefix: {
      const decoder = base3 || base32;
      return [
        base32.prefix,
        decoder.decode(source)
      ];
    }
    default: {
      if (base3 == null) {
        throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
      }
      return [
        source[0],
        base3.decode(source)
      ];
    }
  }
};
var toStringV0 = (bytes, cache, base3) => {
  const { prefix } = base3;
  if (prefix !== base58btc.prefix) {
    throw Error(`Cannot string encode V0 in ${base3.name} encoding`);
  }
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes).slice(1);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var toStringV1 = (bytes, cache, base3) => {
  const { prefix } = base3;
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var DAG_PB_CODE = 112;
var SHA_256_CODE = 18;
var encodeCID = (version2, code2, multihash) => {
  const codeOffset = encodingLength(version2);
  const hashOffset = codeOffset + encodingLength(code2);
  const bytes = new Uint8Array(hashOffset + multihash.byteLength);
  encodeTo(version2, bytes, 0);
  encodeTo(code2, bytes, codeOffset);
  bytes.set(multihash, hashOffset);
  return bytes;
};
var cidSymbol = Symbol.for("@ipld/js-cid/CID");
var readonly = {
  writable: false,
  configurable: false,
  enumerable: true
};
var hidden = {
  writable: false,
  enumerable: false,
  configurable: false
};
var version = "0.0.0-dev";
var deprecate = (range, message) => {
  if (range.test(version)) {
    console.warn(message);
  } else {
    throw new Error(message);
  }
};
var IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;

// node_modules/@walletconnect/core/node_modules/multiformats/esm/src/basics.js
var bases = {
  ...identity_exports,
  ...base2_exports,
  ...base8_exports,
  ...base10_exports,
  ...base16_exports,
  ...base32_exports,
  ...base36_exports,
  ...base58_exports,
  ...base64_exports,
  ...base256emoji_exports
};
var hashes = {
  ...sha2_browser_exports,
  ...identity_exports2
};

// node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/util/bases.js
function createCodec(name2, prefix, encode5, decode6) {
  return {
    name: name2,
    prefix,
    encoder: {
      name: name2,
      prefix,
      encode: encode5
    },
    decoder: { decode: decode6 }
  };
}
var string = createCodec("utf8", "u", (buf) => {
  const decoder = new TextDecoder("utf8");
  return "u" + decoder.decode(buf);
}, (str) => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii = createCodec("ascii", "a", (buf) => {
  let string2 = "a";
  for (let i3 = 0; i3 < buf.length; i3++) {
    string2 += String.fromCharCode(buf[i3]);
  }
  return string2;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe(str.length);
  for (let i3 = 0; i3 < str.length; i3++) {
    buf[i3] = str.charCodeAt(i3);
  }
  return buf;
});
var BASES = {
  utf8: string,
  "utf-8": string,
  hex: bases.base16,
  latin1: ascii,
  ascii,
  binary: ascii,
  ...bases
};
var bases_default = BASES;

// node_modules/@walletconnect/core/node_modules/uint8arrays/esm/src/to-string.js
function toString2(array, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString("utf8");
  }
  return base3.encoder.encode(array).substring(1);
}

// node_modules/@walletconnect/core/dist/index.es.js
var import_time2 = __toESM(require_cjs());

// node_modules/@walletconnect/core/node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js
var import_events3 = __toESM(require_events());

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
var esm_exports2 = {};
__export(esm_exports2, {
  DEFAULT_ERROR: () => DEFAULT_ERROR,
  IBaseJsonRpcProvider: () => n3,
  IEvents: () => e,
  IJsonRpcConnection: () => o,
  IJsonRpcProvider: () => r,
  INTERNAL_ERROR: () => INTERNAL_ERROR,
  INVALID_PARAMS: () => INVALID_PARAMS,
  INVALID_REQUEST: () => INVALID_REQUEST,
  METHOD_NOT_FOUND: () => METHOD_NOT_FOUND,
  PARSE_ERROR: () => PARSE_ERROR,
  RESERVED_ERROR_CODES: () => RESERVED_ERROR_CODES,
  SERVER_ERROR: () => SERVER_ERROR,
  SERVER_ERROR_CODE_RANGE: () => SERVER_ERROR_CODE_RANGE,
  STANDARD_ERROR_MAP: () => STANDARD_ERROR_MAP,
  formatErrorMessage: () => formatErrorMessage,
  formatJsonRpcError: () => formatJsonRpcError,
  formatJsonRpcRequest: () => formatJsonRpcRequest,
  formatJsonRpcResult: () => formatJsonRpcResult,
  getBigIntRpcId: () => getBigIntRpcId,
  getError: () => getError,
  getErrorByCode: () => getErrorByCode,
  isHttpUrl: () => isHttpUrl,
  isJsonRpcError: () => isJsonRpcError,
  isJsonRpcPayload: () => isJsonRpcPayload,
  isJsonRpcRequest: () => isJsonRpcRequest,
  isJsonRpcResponse: () => isJsonRpcResponse,
  isJsonRpcResult: () => isJsonRpcResult,
  isJsonRpcValidationInvalid: () => isJsonRpcValidationInvalid,
  isLocalhostUrl: () => isLocalhostUrl,
  isNodeJs: () => isNodeJs,
  isReservedErrorCode: () => isReservedErrorCode,
  isServerErrorCode: () => isServerErrorCode,
  isValidDefaultRoute: () => isValidDefaultRoute,
  isValidErrorCode: () => isValidErrorCode,
  isValidLeadingWildcardRoute: () => isValidLeadingWildcardRoute,
  isValidRoute: () => isValidRoute,
  isValidTrailingWildcardRoute: () => isValidTrailingWildcardRoute,
  isValidWildcardRoute: () => isValidWildcardRoute,
  isWsUrl: () => isWsUrl,
  parseConnectionError: () => parseConnectionError,
  payloadId: () => payloadId,
  validateJsonRpcError: () => validateJsonRpcError
});

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js
var PARSE_ERROR = "PARSE_ERROR";
var INVALID_REQUEST = "INVALID_REQUEST";
var METHOD_NOT_FOUND = "METHOD_NOT_FOUND";
var INVALID_PARAMS = "INVALID_PARAMS";
var INTERNAL_ERROR = "INTERNAL_ERROR";
var SERVER_ERROR = "SERVER_ERROR";
var RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];
var SERVER_ERROR_CODE_RANGE = [-32e3, -32099];
var STANDARD_ERROR_MAP = {
  [PARSE_ERROR]: { code: -32700, message: "Parse error" },
  [INVALID_REQUEST]: { code: -32600, message: "Invalid Request" },
  [METHOD_NOT_FOUND]: { code: -32601, message: "Method not found" },
  [INVALID_PARAMS]: { code: -32602, message: "Invalid params" },
  [INTERNAL_ERROR]: { code: -32603, message: "Internal error" },
  [SERVER_ERROR]: { code: -32e3, message: "Server error" }
};
var DEFAULT_ERROR = SERVER_ERROR;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js
function isServerErrorCode(code2) {
  return code2 <= SERVER_ERROR_CODE_RANGE[0] && code2 >= SERVER_ERROR_CODE_RANGE[1];
}
function isReservedErrorCode(code2) {
  return RESERVED_ERROR_CODES.includes(code2);
}
function isValidErrorCode(code2) {
  return typeof code2 === "number";
}
function getError(type) {
  if (!Object.keys(STANDARD_ERROR_MAP).includes(type)) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return STANDARD_ERROR_MAP[type];
}
function getErrorByCode(code2) {
  const match = Object.values(STANDARD_ERROR_MAP).find((e2) => e2.code === code2);
  if (!match) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return match;
}
function validateJsonRpcError(response) {
  if (typeof response.error.code === "undefined") {
    return { valid: false, error: "Missing code for JSON-RPC error" };
  }
  if (typeof response.error.message === "undefined") {
    return { valid: false, error: "Missing message for JSON-RPC error" };
  }
  if (!isValidErrorCode(response.error.code)) {
    return {
      valid: false,
      error: `Invalid error code type for JSON-RPC: ${response.error.code}`
    };
  }
  if (isReservedErrorCode(response.error.code)) {
    const error = getErrorByCode(response.error.code);
    if (error.message !== STANDARD_ERROR_MAP[DEFAULT_ERROR].message && response.error.message === error.message) {
      return {
        valid: false,
        error: `Invalid error code message for JSON-RPC: ${response.error.code}`
      };
    }
  }
  return { valid: true };
}
function parseConnectionError(e2, url, type) {
  return e2.message.includes("getaddrinfo ENOTFOUND") || e2.message.includes("connect ECONNREFUSED") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e2;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js
var env_exports = {};
__export(env_exports, {
  isNodeJs: () => isNodeJs
});
var import_environment = __toESM(require_cjs3());
__reExport(env_exports, __toESM(require_cjs3()));
var isNodeJs = import_environment.isNode;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
__reExport(esm_exports2, env_exports);

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js
function payloadId(entropy = 3) {
  const date = Date.now() * Math.pow(10, entropy);
  const extra = Math.floor(Math.random() * Math.pow(10, entropy));
  return date + extra;
}
function getBigIntRpcId(entropy = 6) {
  return BigInt(payloadId(entropy));
}
function formatJsonRpcRequest(method, params, id) {
  return {
    id: id || payloadId(),
    jsonrpc: "2.0",
    method,
    params
  };
}
function formatJsonRpcResult(id, result) {
  return {
    id,
    jsonrpc: "2.0",
    result
  };
}
function formatJsonRpcError(id, error, data) {
  return {
    id,
    jsonrpc: "2.0",
    error: formatErrorMessage(error, data)
  };
}
function formatErrorMessage(error, data) {
  if (typeof error === "undefined") {
    return getError(INTERNAL_ERROR);
  }
  if (typeof error === "string") {
    error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), { message: error });
  }
  if (typeof data !== "undefined") {
    error.data = data;
  }
  if (isReservedErrorCode(error.code)) {
    error = getErrorByCode(error.code);
  }
  return error;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js
function isValidRoute(route) {
  if (route.includes("*")) {
    return isValidWildcardRoute(route);
  }
  if (/\W/g.test(route)) {
    return false;
  }
  return true;
}
function isValidDefaultRoute(route) {
  return route === "*";
}
function isValidWildcardRoute(route) {
  if (isValidDefaultRoute(route)) {
    return true;
  }
  if (!route.includes("*")) {
    return false;
  }
  if (route.split("*").length !== 2) {
    return false;
  }
  if (route.split("*").filter((x4) => x4.trim() === "").length !== 1) {
    return false;
  }
  return true;
}
function isValidLeadingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[0].trim();
}
function isValidTrailingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[1].trim();
}

// node_modules/@walletconnect/jsonrpc-types/dist/index.es.js
var e = class {
};
var o = class extends e {
  constructor(c5) {
    super();
  }
};
var n3 = class extends e {
  constructor() {
    super();
  }
};
var r = class extends n3 {
  constructor(c5) {
    super();
  }
};

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js
var HTTP_REGEX = "^https?:";
var WS_REGEX = "^wss?:";
function getUrlProtocol(url) {
  const matches = url.match(new RegExp(/^\w+:/, "gi"));
  if (!matches || !matches.length)
    return;
  return matches[0];
}
function matchRegexProtocol(url, regex) {
  const protocol = getUrlProtocol(url);
  if (typeof protocol === "undefined")
    return false;
  return new RegExp(regex).test(protocol);
}
function isHttpUrl(url) {
  return matchRegexProtocol(url, HTTP_REGEX);
}
function isWsUrl(url) {
  return matchRegexProtocol(url, WS_REGEX);
}
function isLocalhostUrl(url) {
  return new RegExp("wss?://localhost(:d{2,5})?").test(url);
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js
function isJsonRpcPayload(payload) {
  return typeof payload === "object" && "id" in payload && "jsonrpc" in payload && payload.jsonrpc === "2.0";
}
function isJsonRpcRequest(payload) {
  return isJsonRpcPayload(payload) && "method" in payload;
}
function isJsonRpcResponse(payload) {
  return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));
}
function isJsonRpcResult(payload) {
  return "result" in payload;
}
function isJsonRpcError(payload) {
  return "error" in payload;
}
function isJsonRpcValidationInvalid(validation) {
  return "error" in validation && validation.valid === false;
}

// node_modules/@walletconnect/core/node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js
var JsonRpcProvider = class extends r {
  constructor(connection) {
    super(connection);
    this.events = new import_events3.EventEmitter();
    this.hasRegisteredEventListeners = false;
    this.connection = this.setConnection(connection);
    if (this.connection.connected) {
      this.registerEventListeners();
    }
  }
  async connect(connection = this.connection) {
    await this.open(connection);
  }
  async disconnect() {
    await this.close();
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async request(request, context) {
    return this.requestStrict(formatJsonRpcRequest(request.method, request.params || [], request.id || getBigIntRpcId().toString()), context);
  }
  async requestStrict(request, context) {
    return new Promise(async (resolve, reject) => {
      if (!this.connection.connected) {
        try {
          await this.open();
        } catch (e2) {
          reject(e2);
        }
      }
      this.events.on(`${request.id}`, (response) => {
        if (isJsonRpcError(response)) {
          reject(response.error);
        } else {
          resolve(response.result);
        }
      });
      try {
        await this.connection.send(request, context);
      } catch (e2) {
        reject(e2);
      }
    });
  }
  setConnection(connection = this.connection) {
    return connection;
  }
  onPayload(payload) {
    this.events.emit("payload", payload);
    if (isJsonRpcResponse(payload)) {
      this.events.emit(`${payload.id}`, payload);
    } else {
      this.events.emit("message", {
        type: payload.method,
        data: payload.params
      });
    }
  }
  onClose(event) {
    if (event && event.code === 3e3) {
      this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : ""}`));
    }
    this.events.emit("disconnect");
  }
  async open(connection = this.connection) {
    if (this.connection === connection && this.connection.connected)
      return;
    if (this.connection.connected)
      this.close();
    if (typeof connection === "string") {
      await this.connection.open(connection);
      connection = this.connection;
    }
    this.connection = this.setConnection(connection);
    await this.connection.open();
    this.registerEventListeners();
    this.events.emit("connect");
  }
  async close() {
    await this.connection.close();
  }
  registerEventListeners() {
    if (this.hasRegisteredEventListeners)
      return;
    this.connection.on("payload", (payload) => this.onPayload(payload));
    this.connection.on("close", (event) => this.onClose(event));
    this.connection.on("error", (error) => this.events.emit("error", error));
    this.connection.on("register_error", (error) => this.onClose());
    this.hasRegisteredEventListeners = true;
  }
};

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/index.es.js
var import_events4 = __toESM(require_events());
var w4 = () => typeof WebSocket < "u" ? WebSocket : typeof global < "u" && typeof global.WebSocket < "u" ? global.WebSocket : typeof window < "u" && typeof window.WebSocket < "u" ? window.WebSocket : typeof self < "u" && typeof self.WebSocket < "u" ? self.WebSocket : require_browser2();
var b3 = () => typeof WebSocket < "u" || typeof global < "u" && typeof global.WebSocket < "u" || typeof window < "u" && typeof window.WebSocket < "u" || typeof self < "u" && typeof self.WebSocket < "u";
var a2 = (c5) => c5.split("?")[0];
var h5 = 10;
var S3 = w4();
var f2 = class {
  constructor(e2) {
    if (this.url = e2, this.events = new import_events4.EventEmitter(), this.registering = false, !isWsUrl(e2)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e2}`);
    this.url = e2;
  }
  get connected() {
    return typeof this.socket < "u";
  }
  get connecting() {
    return this.registering;
  }
  on(e2, t) {
    this.events.on(e2, t);
  }
  once(e2, t) {
    this.events.once(e2, t);
  }
  off(e2, t) {
    this.events.off(e2, t);
  }
  removeListener(e2, t) {
    this.events.removeListener(e2, t);
  }
  async open(e2 = this.url) {
    await this.register(e2);
  }
  async close() {
    return new Promise((e2, t) => {
      if (typeof this.socket > "u") {
        t(new Error("Connection already closed"));
        return;
      }
      this.socket.onclose = (n4) => {
        this.onClose(n4), e2();
      }, this.socket.close();
    });
  }
  async send(e2) {
    typeof this.socket > "u" && (this.socket = await this.register());
    try {
      this.socket.send(safeJsonStringify(e2));
    } catch (t) {
      this.onError(e2.id, t);
    }
  }
  register(e2 = this.url) {
    if (!isWsUrl(e2)) throw new Error(`Provided URL is not compatible with WebSocket connection: ${e2}`);
    if (this.registering) {
      const t = this.events.getMaxListeners();
      return (this.events.listenerCount("register_error") >= t || this.events.listenerCount("open") >= t) && this.events.setMaxListeners(t + 1), new Promise((n4, o3) => {
        this.events.once("register_error", (s2) => {
          this.resetMaxListeners(), o3(s2);
        }), this.events.once("open", () => {
          if (this.resetMaxListeners(), typeof this.socket > "u") return o3(new Error("WebSocket connection is missing or invalid"));
          n4(this.socket);
        });
      });
    }
    return this.url = e2, this.registering = true, new Promise((t, n4) => {
      const o3 = new URLSearchParams(e2).get("origin"), s2 = (0, esm_exports2.isReactNative)() ? { headers: { origin: o3 } } : { rejectUnauthorized: !isLocalhostUrl(e2) }, i3 = new S3(e2, [], s2);
      b3() ? i3.onerror = (r2) => {
        const l4 = r2;
        n4(this.emitError(l4.error));
      } : i3.on("error", (r2) => {
        n4(this.emitError(r2));
      }), i3.onopen = () => {
        this.onOpen(i3), t(i3);
      };
    });
  }
  onOpen(e2) {
    e2.onmessage = (t) => this.onPayload(t), e2.onclose = (t) => this.onClose(t), this.socket = e2, this.registering = false, this.events.emit("open");
  }
  onClose(e2) {
    this.socket = void 0, this.registering = false, this.events.emit("close", e2);
  }
  onPayload(e2) {
    if (typeof e2.data > "u") return;
    const t = typeof e2.data == "string" ? safeJsonParse(e2.data) : e2.data;
    this.events.emit("payload", t);
  }
  onError(e2, t) {
    const n4 = this.parseError(t), o3 = n4.message || n4.toString(), s2 = formatJsonRpcError(e2, o3);
    this.events.emit("payload", s2);
  }
  parseError(e2, t = this.url) {
    return parseConnectionError(e2, a2(t), "WS");
  }
  resetMaxListeners() {
    this.events.getMaxListeners() > h5 && this.events.setMaxListeners(h5);
  }
  emitError(e2) {
    const t = this.parseError(new Error((e2 == null ? void 0 : e2.message) || `WebSocket connection failed for host: ${a2(this.url)}`));
    return this.events.emit("register_error", t), t;
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
var import_lodash = __toESM(require_lodash());
var import_isomorphic_unfetch = __toESM(require_browser3());
function Hi(r2, e2) {
  if (r2.length >= 255) throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), i3 = 0; i3 < t.length; i3++) t[i3] = 255;
  for (var s2 = 0; s2 < r2.length; s2++) {
    var n4 = r2.charAt(s2), o3 = n4.charCodeAt(0);
    if (t[o3] !== 255) throw new TypeError(n4 + " is ambiguous");
    t[o3] = s2;
  }
  var a3 = r2.length, h6 = r2.charAt(0), l4 = Math.log(a3) / Math.log(256), d3 = Math.log(256) / Math.log(a3);
  function p6(u4) {
    if (u4 instanceof Uint8Array || (ArrayBuffer.isView(u4) ? u4 = new Uint8Array(u4.buffer, u4.byteOffset, u4.byteLength) : Array.isArray(u4) && (u4 = Uint8Array.from(u4))), !(u4 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (u4.length === 0) return "";
    for (var m3 = 0, z4 = 0, I2 = 0, _5 = u4.length; I2 !== _5 && u4[I2] === 0; ) I2++, m3++;
    for (var S5 = (_5 - I2) * d3 + 1 >>> 0, f5 = new Uint8Array(S5); I2 !== _5; ) {
      for (var T3 = u4[I2], A2 = 0, C2 = S5 - 1; (T3 !== 0 || A2 < z4) && C2 !== -1; C2--, A2++) T3 += 256 * f5[C2] >>> 0, f5[C2] = T3 % a3 >>> 0, T3 = T3 / a3 >>> 0;
      if (T3 !== 0) throw new Error("Non-zero carry");
      z4 = A2, I2++;
    }
    for (var x4 = S5 - z4; x4 !== S5 && f5[x4] === 0; ) x4++;
    for (var q2 = h6.repeat(m3); x4 < S5; ++x4) q2 += r2.charAt(f5[x4]);
    return q2;
  }
  function y7(u4) {
    if (typeof u4 != "string") throw new TypeError("Expected String");
    if (u4.length === 0) return new Uint8Array();
    var m3 = 0;
    if (u4[m3] !== " ") {
      for (var z4 = 0, I2 = 0; u4[m3] === h6; ) z4++, m3++;
      for (var _5 = (u4.length - m3) * l4 + 1 >>> 0, S5 = new Uint8Array(_5); u4[m3]; ) {
        var f5 = t[u4.charCodeAt(m3)];
        if (f5 === 255) return;
        for (var T3 = 0, A2 = _5 - 1; (f5 !== 0 || T3 < I2) && A2 !== -1; A2--, T3++) f5 += a3 * S5[A2] >>> 0, S5[A2] = f5 % 256 >>> 0, f5 = f5 / 256 >>> 0;
        if (f5 !== 0) throw new Error("Non-zero carry");
        I2 = T3, m3++;
      }
      if (u4[m3] !== " ") {
        for (var C2 = _5 - I2; C2 !== _5 && S5[C2] === 0; ) C2++;
        for (var x4 = new Uint8Array(z4 + (_5 - C2)), q2 = z4; C2 !== _5; ) x4[q2++] = S5[C2++];
        return x4;
      }
    }
  }
  function M4(u4) {
    var m3 = y7(u4);
    if (m3) return m3;
    throw new Error(`Non-${e2} character`);
  }
  return { encode: p6, decodeUnsafe: y7, decode: M4 };
}
var Ji = Hi;
var Xi = Ji;
var Ne2 = (r2) => {
  if (r2 instanceof Uint8Array && r2.constructor.name === "Uint8Array") return r2;
  if (r2 instanceof ArrayBuffer) return new Uint8Array(r2);
  if (ArrayBuffer.isView(r2)) return new Uint8Array(r2.buffer, r2.byteOffset, r2.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Wi = (r2) => new TextEncoder().encode(r2);
var Qi = (r2) => new TextDecoder().decode(r2);
var Zi = class {
  constructor(e2, t, i3) {
    this.name = e2, this.prefix = t, this.baseEncode = i3;
  }
  encode(e2) {
    if (e2 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e2)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var es = class {
  constructor(e2, t, i3) {
    if (this.name = e2, this.prefix = t, t.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = i3;
  }
  decode(e2) {
    if (typeof e2 == "string") {
      if (e2.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e2)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e2.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e2) {
    return Ue2(this, e2);
  }
};
var ts = class {
  constructor(e2) {
    this.decoders = e2;
  }
  or(e2) {
    return Ue2(this, e2);
  }
  decode(e2) {
    const t = e2[0], i3 = this.decoders[t];
    if (i3) return i3.decode(e2);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e2)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var Ue2 = (r2, e2) => new ts({ ...r2.decoders || { [r2.prefix]: r2 }, ...e2.decoders || { [e2.prefix]: e2 } });
var is = class {
  constructor(e2, t, i3, s2) {
    this.name = e2, this.prefix = t, this.baseEncode = i3, this.baseDecode = s2, this.encoder = new Zi(e2, t, i3), this.decoder = new es(e2, t, s2);
  }
  encode(e2) {
    return this.encoder.encode(e2);
  }
  decode(e2) {
    return this.decoder.decode(e2);
  }
};
var W2 = ({ name: r2, prefix: e2, encode: t, decode: i3 }) => new is(r2, e2, t, i3);
var B2 = ({ prefix: r2, name: e2, alphabet: t }) => {
  const { encode: i3, decode: s2 } = Xi(t, e2);
  return W2({ prefix: r2, name: e2, encode: i3, decode: (n4) => Ne2(s2(n4)) });
};
var ss = (r2, e2, t, i3) => {
  const s2 = {};
  for (let d3 = 0; d3 < e2.length; ++d3) s2[e2[d3]] = d3;
  let n4 = r2.length;
  for (; r2[n4 - 1] === "="; ) --n4;
  const o3 = new Uint8Array(n4 * t / 8 | 0);
  let a3 = 0, h6 = 0, l4 = 0;
  for (let d3 = 0; d3 < n4; ++d3) {
    const p6 = s2[r2[d3]];
    if (p6 === void 0) throw new SyntaxError(`Non-${i3} character`);
    h6 = h6 << t | p6, a3 += t, a3 >= 8 && (a3 -= 8, o3[l4++] = 255 & h6 >> a3);
  }
  if (a3 >= t || 255 & h6 << 8 - a3) throw new SyntaxError("Unexpected end of data");
  return o3;
};
var rs = (r2, e2, t) => {
  const i3 = e2[e2.length - 1] === "=", s2 = (1 << t) - 1;
  let n4 = "", o3 = 0, a3 = 0;
  for (let h6 = 0; h6 < r2.length; ++h6) for (a3 = a3 << 8 | r2[h6], o3 += 8; o3 > t; ) o3 -= t, n4 += e2[s2 & a3 >> o3];
  if (o3 && (n4 += e2[s2 & a3 << t - o3]), i3) for (; n4.length * t & 7; ) n4 += "=";
  return n4;
};
var g3 = ({ name: r2, prefix: e2, bitsPerChar: t, alphabet: i3 }) => W2({ prefix: e2, name: r2, encode(s2) {
  return rs(s2, i3, t);
}, decode(s2) {
  return ss(s2, i3, t, r2);
} });
var ns = W2({ prefix: "\0", name: "identity", encode: (r2) => Qi(r2), decode: (r2) => Wi(r2) });
var os = Object.freeze({ __proto__: null, identity: ns });
var as = g3({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var hs = Object.freeze({ __proto__: null, base2: as });
var cs = g3({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var us = Object.freeze({ __proto__: null, base8: cs });
var ls = B2({ prefix: "9", name: "base10", alphabet: "0123456789" });
var ds = Object.freeze({ __proto__: null, base10: ls });
var gs = g3({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var ps = g3({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var Ds = Object.freeze({ __proto__: null, base16: gs, base16upper: ps });
var ys = g3({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var ms = g3({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var bs = g3({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var fs = g3({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var Es = g3({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var ws = g3({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var vs = g3({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var Is = g3({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var Cs = g3({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var Rs = Object.freeze({ __proto__: null, base32: ys, base32upper: ms, base32pad: bs, base32padupper: fs, base32hex: Es, base32hexupper: ws, base32hexpad: vs, base32hexpadupper: Is, base32z: Cs });
var _s = B2({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var Ss = B2({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var Ts = Object.freeze({ __proto__: null, base36: _s, base36upper: Ss });
var Ps = B2({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var xs = B2({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var Os = Object.freeze({ __proto__: null, base58btc: Ps, base58flickr: xs });
var As = g3({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var zs = g3({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var Ns = g3({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var Us = g3({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var Ls = Object.freeze({ __proto__: null, base64: As, base64pad: zs, base64url: Ns, base64urlpad: Us });
var Le2 = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var Fs = Le2.reduce((r2, e2, t) => (r2[t] = e2, r2), []);
var $s = Le2.reduce((r2, e2, t) => (r2[e2.codePointAt(0)] = t, r2), []);
function Ms(r2) {
  return r2.reduce((e2, t) => (e2 += Fs[t], e2), "");
}
function ks(r2) {
  const e2 = [];
  for (const t of r2) {
    const i3 = $s[t.codePointAt(0)];
    if (i3 === void 0) throw new Error(`Non-base256emoji character: ${t}`);
    e2.push(i3);
  }
  return new Uint8Array(e2);
}
var Ks = W2({ prefix: "🚀", name: "base256emoji", encode: Ms, decode: ks });
var Bs = Object.freeze({ __proto__: null, base256emoji: Ks });
var Vs = $e2;
var Fe = 128;
var js = 127;
var qs = ~js;
var Gs = Math.pow(2, 31);
function $e2(r2, e2, t) {
  e2 = e2 || [], t = t || 0;
  for (var i3 = t; r2 >= Gs; ) e2[t++] = r2 & 255 | Fe, r2 /= 128;
  for (; r2 & qs; ) e2[t++] = r2 & 255 | Fe, r2 >>>= 7;
  return e2[t] = r2 | 0, $e2.bytes = t - i3 + 1, e2;
}
var Ys = he2;
var Hs = 128;
var Me2 = 127;
function he2(r2, i3) {
  var t = 0, i3 = i3 || 0, s2 = 0, n4 = i3, o3, a3 = r2.length;
  do {
    if (n4 >= a3) throw he2.bytes = 0, new RangeError("Could not decode varint");
    o3 = r2[n4++], t += s2 < 28 ? (o3 & Me2) << s2 : (o3 & Me2) * Math.pow(2, s2), s2 += 7;
  } while (o3 >= Hs);
  return he2.bytes = n4 - i3, t;
}
var Js = Math.pow(2, 7);
var Xs = Math.pow(2, 14);
var Ws = Math.pow(2, 21);
var Qs = Math.pow(2, 28);
var Zs = Math.pow(2, 35);
var er3 = Math.pow(2, 42);
var tr3 = Math.pow(2, 49);
var ir2 = Math.pow(2, 56);
var sr2 = Math.pow(2, 63);
var rr2 = function(r2) {
  return r2 < Js ? 1 : r2 < Xs ? 2 : r2 < Ws ? 3 : r2 < Qs ? 4 : r2 < Zs ? 5 : r2 < er3 ? 6 : r2 < tr3 ? 7 : r2 < ir2 ? 8 : r2 < sr2 ? 9 : 10;
};
var nr3 = { encode: Vs, decode: Ys, encodingLength: rr2 };
var ke2 = nr3;
var Ke2 = (r2, e2, t = 0) => (ke2.encode(r2, e2, t), e2);
var Be2 = (r2) => ke2.encodingLength(r2);
var ce = (r2, e2) => {
  const t = e2.byteLength, i3 = Be2(r2), s2 = i3 + Be2(t), n4 = new Uint8Array(s2 + t);
  return Ke2(r2, n4, 0), Ke2(t, n4, i3), n4.set(e2, s2), new or3(r2, t, e2, n4);
};
var or3 = class {
  constructor(e2, t, i3, s2) {
    this.code = e2, this.size = t, this.digest = i3, this.bytes = s2;
  }
};
var Ve2 = ({ name: r2, code: e2, encode: t }) => new ar2(r2, e2, t);
var ar2 = class {
  constructor(e2, t, i3) {
    this.name = e2, this.code = t, this.encode = i3;
  }
  digest(e2) {
    if (e2 instanceof Uint8Array) {
      const t = this.encode(e2);
      return t instanceof Uint8Array ? ce(this.code, t) : t.then((i3) => ce(this.code, i3));
    } else throw Error("Unknown type, must be binary type");
  }
};
var je2 = (r2) => async (e2) => new Uint8Array(await crypto.subtle.digest(r2, e2));
var hr2 = Ve2({ name: "sha2-256", code: 18, encode: je2("SHA-256") });
var cr2 = Ve2({ name: "sha2-512", code: 19, encode: je2("SHA-512") });
var ur2 = Object.freeze({ __proto__: null, sha256: hr2, sha512: cr2 });
var qe2 = 0;
var lr2 = "identity";
var Ge2 = Ne2;
var dr2 = (r2) => ce(qe2, Ge2(r2));
var gr2 = { code: qe2, name: lr2, encode: Ge2, digest: dr2 };
var pr2 = Object.freeze({ __proto__: null, identity: gr2 });
new TextEncoder(), new TextDecoder();
var Ye2 = { ...os, ...hs, ...us, ...ds, ...Ds, ...Rs, ...Ts, ...Os, ...Ls, ...Bs };
({ ...ur2, ...pr2 });
function He2(r2) {
  return globalThis.Buffer != null ? new Uint8Array(r2.buffer, r2.byteOffset, r2.byteLength) : r2;
}
function Dr2(r2 = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? He2(globalThis.Buffer.allocUnsafe(r2)) : new Uint8Array(r2);
}
function Je2(r2, e2, t, i3) {
  return { name: r2, prefix: e2, encoder: { name: r2, prefix: e2, encode: t }, decoder: { decode: i3 } };
}
var Xe2 = Je2("utf8", "u", (r2) => "u" + new TextDecoder("utf8").decode(r2), (r2) => new TextEncoder().encode(r2.substring(1)));
var ue = Je2("ascii", "a", (r2) => {
  let e2 = "a";
  for (let t = 0; t < r2.length; t++) e2 += String.fromCharCode(r2[t]);
  return e2;
}, (r2) => {
  r2 = r2.substring(1);
  const e2 = Dr2(r2.length);
  for (let t = 0; t < r2.length; t++) e2[t] = r2.charCodeAt(t);
  return e2;
});
var yr2 = { utf8: Xe2, "utf-8": Xe2, hex: Ye2.base16, latin1: ue, ascii: ue, binary: ue, ...Ye2 };
function mr2(r2, e2 = "utf8") {
  const t = yr2[e2];
  if (!t) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? He2(globalThis.Buffer.from(r2, "utf-8")) : t.decoder.decode(`${t.prefix}${r2}`);
}
var le2 = "wc";
var We2 = 2;
var Q2 = "core";
var O2 = `${le2}@2:${Q2}:`;
var Qe2 = { name: Q2, logger: "error" };
var Ze2 = { database: ":memory:" };
var et = "crypto";
var de2 = "client_ed25519_seed";
var tt = import_time2.ONE_DAY;
var it2 = "keychain";
var st = "0.3";
var rt3 = "messages";
var nt2 = "0.3";
var ot2 = import_time2.SIX_HOURS;
var at2 = "publisher";
var ht3 = "irn";
var ct2 = "error";
var ge2 = "wss://relay.walletconnect.com";
var pe2 = "wss://relay.walletconnect.org";
var ut3 = "relayer";
var D3 = { message: "relayer_message", message_ack: "relayer_message_ack", connect: "relayer_connect", disconnect: "relayer_disconnect", error: "relayer_error", connection_stalled: "relayer_connection_stalled", transport_closed: "relayer_transport_closed", publish: "relayer_publish" };
var lt2 = "_subscription";
var P2 = { payload: "payload", connect: "connect", disconnect: "disconnect", error: "error" };
var dt3 = import_time2.ONE_SECOND;
var gt3 = "2.11.0";
var pt2 = 1e4;
var Dt3 = "0.3";
var yt3 = "WALLETCONNECT_CLIENT_ID";
var w5 = { created: "subscription_created", deleted: "subscription_deleted", expired: "subscription_expired", disabled: "subscription_disabled", sync: "subscription_sync", resubscribed: "subscription_resubscribed" };
var mt2 = "subscription";
var bt2 = "0.3";
var ft3 = import_time2.FIVE_SECONDS * 1e3;
var Et3 = "pairing";
var wt3 = "0.3";
var F = { wc_pairingDelete: { req: { ttl: import_time2.ONE_DAY, prompt: false, tag: 1e3 }, res: { ttl: import_time2.ONE_DAY, prompt: false, tag: 1001 } }, wc_pairingPing: { req: { ttl: import_time2.THIRTY_SECONDS, prompt: false, tag: 1002 }, res: { ttl: import_time2.THIRTY_SECONDS, prompt: false, tag: 1003 } }, unregistered_method: { req: { ttl: import_time2.ONE_DAY, prompt: false, tag: 0 }, res: { ttl: import_time2.ONE_DAY, prompt: false, tag: 0 } } };
var V = { create: "pairing_create", expire: "pairing_expire", delete: "pairing_delete", ping: "pairing_ping" };
var R = { created: "history_created", updated: "history_updated", deleted: "history_deleted", sync: "history_sync" };
var vt3 = "history";
var It3 = "0.3";
var Ct = "expirer";
var v3 = { created: "expirer_created", deleted: "expirer_deleted", expired: "expirer_expired", sync: "expirer_sync" };
var Rt2 = "0.3";
var Z = "verify-api";
var $2 = "https://verify.walletconnect.com";
var ee2 = "https://verify.walletconnect.org";
var _t2 = [$2, ee2];
var St2 = "echo";
var Tt2 = "https://echo.walletconnect.com";
var Pt2 = class {
  constructor(e2, t) {
    this.core = e2, this.logger = t, this.keychain = /* @__PURE__ */ new Map(), this.name = it2, this.version = st, this.initialized = false, this.storagePrefix = O2, this.init = async () => {
      if (!this.initialized) {
        const i3 = await this.getKeyChain();
        typeof i3 < "u" && (this.keychain = i3), this.initialized = true;
      }
    }, this.has = (i3) => (this.isInitialized(), this.keychain.has(i3)), this.set = async (i3, s2) => {
      this.isInitialized(), this.keychain.set(i3, s2), await this.persist();
    }, this.get = (i3) => {
      this.isInitialized();
      const s2 = this.keychain.get(i3);
      if (typeof s2 > "u") {
        const { message: n4 } = N("NO_MATCHING_KEY", `${this.name}: ${i3}`);
        throw new Error(n4);
      }
      return s2;
    }, this.del = async (i3) => {
      this.isInitialized(), this.keychain.delete(i3), await this.persist();
    }, this.core = e2, this.logger = E2(t, this.name);
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  async setKeyChain(e2) {
    await this.core.storage.setItem(this.storageKey, rt(e2));
  }
  async getKeyChain() {
    const e2 = await this.core.storage.getItem(this.storageKey);
    return typeof e2 < "u" ? ot(e2) : void 0;
  }
  async persist() {
    await this.setKeyChain(this.keychain);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var xt3 = class {
  constructor(e2, t, i3) {
    this.core = e2, this.logger = t, this.name = et, this.initialized = false, this.init = async () => {
      this.initialized || (await this.keychain.init(), this.initialized = true);
    }, this.hasKeys = (s2) => (this.isInitialized(), this.keychain.has(s2)), this.getClientId = async () => {
      this.isInitialized();
      const s2 = await this.getClientSeed(), n4 = Po(s2);
      return Qe(n4.publicKey);
    }, this.generateKeyPair = () => {
      this.isInitialized();
      const s2 = kn();
      return this.setPrivateKey(s2.publicKey, s2.privateKey);
    }, this.signJWT = async (s2) => {
      this.isInitialized();
      const n4 = await this.getClientSeed(), o3 = Po(n4), a3 = Vn(), h6 = tt;
      return await Qo(a3, s2, h6, o3);
    }, this.generateSharedKey = (s2, n4, o3) => {
      this.isInitialized();
      const a3 = this.getPrivateKey(s2), h6 = Mn(a3, n4);
      return this.setSymKey(h6, o3);
    }, this.setSymKey = async (s2, n4) => {
      this.isInitialized();
      const o3 = n4 || Kn(s2);
      return await this.keychain.set(o3, s2), o3;
    }, this.deleteKeyPair = async (s2) => {
      this.isInitialized(), await this.keychain.del(s2);
    }, this.deleteSymKey = async (s2) => {
      this.isInitialized(), await this.keychain.del(s2);
    }, this.encode = async (s2, n4, o3) => {
      this.isInitialized();
      const a3 = Ae(o3), h6 = safeJsonStringify(n4);
      if (qn(a3)) {
        const y7 = a3.senderPublicKey, M4 = a3.receiverPublicKey;
        s2 = await this.generateSharedKey(y7, M4);
      }
      const l4 = this.getSymKey(s2), { type: d3, senderPublicKey: p6 } = a3;
      return xn({ type: d3, symKey: l4, message: h6, senderPublicKey: p6 });
    }, this.decode = async (s2, n4, o3) => {
      this.isInitialized();
      const a3 = Hn(n4, o3);
      if (qn(a3)) {
        const h6 = a3.receiverPublicKey, l4 = a3.senderPublicKey;
        s2 = await this.generateSharedKey(h6, l4);
      }
      try {
        const h6 = this.getSymKey(s2), l4 = Fn({ symKey: h6, encoded: n4 });
        return safeJsonParse(l4);
      } catch (h6) {
        this.logger.error(`Failed to decode message from topic: '${s2}', clientId: '${await this.getClientId()}'`), this.logger.error(h6);
      }
    }, this.getPayloadType = (s2) => {
      const n4 = ee(s2);
      return $(n4.type);
    }, this.getPayloadSenderPublicKey = (s2) => {
      const n4 = ee(s2);
      return n4.senderPublicKey ? toString2(n4.senderPublicKey, p) : void 0;
    }, this.core = e2, this.logger = E2(t, this.name), this.keychain = i3 || new Pt2(this.core, this.logger);
  }
  get context() {
    return y2(this.logger);
  }
  async setPrivateKey(e2, t) {
    return await this.keychain.set(e2, t), e2;
  }
  getPrivateKey(e2) {
    return this.keychain.get(e2);
  }
  async getClientSeed() {
    let e2 = "";
    try {
      e2 = this.keychain.get(de2);
    } catch {
      e2 = Vn(), await this.keychain.set(de2, e2);
    }
    return mr2(e2, "base16");
  }
  getSymKey(e2) {
    return this.keychain.get(e2);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var Ot2 = class extends a {
  constructor(e2, t) {
    super(e2, t), this.logger = e2, this.core = t, this.messages = /* @__PURE__ */ new Map(), this.name = rt3, this.version = nt2, this.initialized = false, this.storagePrefix = O2, this.init = async () => {
      if (!this.initialized) {
        this.logger.trace("Initialized");
        try {
          const i3 = await this.getRelayerMessages();
          typeof i3 < "u" && (this.messages = i3), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", size: this.messages.size });
        } catch (i3) {
          this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(i3);
        } finally {
          this.initialized = true;
        }
      }
    }, this.set = async (i3, s2) => {
      this.isInitialized();
      const n4 = Ln(s2);
      let o3 = this.messages.get(i3);
      return typeof o3 > "u" && (o3 = {}), typeof o3[n4] < "u" || (o3[n4] = s2, this.messages.set(i3, o3), await this.persist()), n4;
    }, this.get = (i3) => {
      this.isInitialized();
      let s2 = this.messages.get(i3);
      return typeof s2 > "u" && (s2 = {}), s2;
    }, this.has = (i3, s2) => {
      this.isInitialized();
      const n4 = this.get(i3), o3 = Ln(s2);
      return typeof n4[o3] < "u";
    }, this.del = async (i3) => {
      this.isInitialized(), this.messages.delete(i3), await this.persist();
    }, this.logger = E2(e2, this.name), this.core = t;
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  async setRelayerMessages(e2) {
    await this.core.storage.setItem(this.storageKey, rt(e2));
  }
  async getRelayerMessages() {
    const e2 = await this.core.storage.getItem(this.storageKey);
    return typeof e2 < "u" ? ot(e2) : void 0;
  }
  async persist() {
    await this.setRelayerMessages(this.messages);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var vr2 = class extends u {
  constructor(e2, t) {
    super(e2, t), this.relayer = e2, this.logger = t, this.events = new import_events5.EventEmitter(), this.name = at2, this.queue = /* @__PURE__ */ new Map(), this.publishTimeout = (0, import_time2.toMiliseconds)(import_time2.TEN_SECONDS), this.needsTransportRestart = false, this.publish = async (i3, s2, n4) => {
      var o3;
      this.logger.debug("Publishing Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i3, message: s2, opts: n4 } });
      try {
        const a3 = (n4 == null ? void 0 : n4.ttl) || ot2, h6 = vt(n4), l4 = (n4 == null ? void 0 : n4.prompt) || false, d3 = (n4 == null ? void 0 : n4.tag) || 0, p6 = (n4 == null ? void 0 : n4.id) || getBigIntRpcId().toString(), y7 = { topic: i3, message: s2, opts: { ttl: a3, relay: h6, prompt: l4, tag: d3, id: p6 } }, M4 = setTimeout(() => this.queue.set(p6, y7), this.publishTimeout);
        try {
          await await ut(this.rpcPublish(i3, s2, a3, h6, l4, d3, p6), this.publishTimeout, "Failed to publish payload, please try again."), this.removeRequestFromQueue(p6), this.relayer.events.emit(D3.publish, y7);
        } catch (u4) {
          if (this.logger.debug("Publishing Payload stalled"), this.needsTransportRestart = true, (o3 = n4 == null ? void 0 : n4.internal) != null && o3.throwOnFailedPublish) throw this.removeRequestFromQueue(p6), u4;
          return;
        } finally {
          clearTimeout(M4);
        }
        this.logger.debug("Successfully Published Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i3, message: s2, opts: n4 } });
      } catch (a3) {
        throw this.logger.debug("Failed to Publish Payload"), this.logger.error(a3), a3;
      }
    }, this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.relayer = e2, this.logger = E2(t, this.name), this.registerEventListeners();
  }
  get context() {
    return y2(this.logger);
  }
  rpcPublish(e2, t, i3, s2, n4, o3, a3) {
    var h6, l4, d3, p6;
    const y7 = { method: Et(s2.protocol).publish, params: { topic: e2, message: t, ttl: i3, prompt: n4, tag: o3 }, id: a3 };
    return w((h6 = y7.params) == null ? void 0 : h6.prompt) && ((l4 = y7.params) == null || delete l4.prompt), w((d3 = y7.params) == null ? void 0 : d3.tag) && ((p6 = y7.params) == null || delete p6.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "message", direction: "outgoing", request: y7 }), this.relayer.request(y7);
  }
  removeRequestFromQueue(e2) {
    this.queue.delete(e2);
  }
  checkQueue() {
    this.queue.forEach(async (e2) => {
      const { topic: t, message: i3, opts: s2 } = e2;
      await this.publish(t, i3, s2);
    });
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => {
      if (this.needsTransportRestart) {
        this.needsTransportRestart = false, this.relayer.events.emit(D3.connection_stalled);
        return;
      }
      this.checkQueue();
    }), this.relayer.on(D3.message_ack, (e2) => {
      this.removeRequestFromQueue(e2.id.toString());
    });
  }
};
var Ir2 = class {
  constructor() {
    this.map = /* @__PURE__ */ new Map(), this.set = (e2, t) => {
      const i3 = this.get(e2);
      this.exists(e2, t) || this.map.set(e2, [...i3, t]);
    }, this.get = (e2) => this.map.get(e2) || [], this.exists = (e2, t) => this.get(e2).includes(t), this.delete = (e2, t) => {
      if (typeof t > "u") {
        this.map.delete(e2);
        return;
      }
      if (!this.map.has(e2)) return;
      const i3 = this.get(e2);
      if (!this.exists(e2, t)) return;
      const s2 = i3.filter((n4) => n4 !== t);
      if (!s2.length) {
        this.map.delete(e2);
        return;
      }
      this.map.set(e2, s2);
    }, this.clear = () => {
      this.map.clear();
    };
  }
  get topics() {
    return Array.from(this.map.keys());
  }
};
var Cr2 = Object.defineProperty;
var Rr2 = Object.defineProperties;
var _r2 = Object.getOwnPropertyDescriptors;
var At = Object.getOwnPropertySymbols;
var Sr2 = Object.prototype.hasOwnProperty;
var Tr2 = Object.prototype.propertyIsEnumerable;
var zt3 = (r2, e2, t) => e2 in r2 ? Cr2(r2, e2, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e2] = t;
var j3 = (r2, e2) => {
  for (var t in e2 || (e2 = {})) Sr2.call(e2, t) && zt3(r2, t, e2[t]);
  if (At) for (var t of At(e2)) Tr2.call(e2, t) && zt3(r2, t, e2[t]);
  return r2;
};
var De2 = (r2, e2) => Rr2(r2, _r2(e2));
var Nt2 = class extends d {
  constructor(e2, t) {
    super(e2, t), this.relayer = e2, this.logger = t, this.subscriptions = /* @__PURE__ */ new Map(), this.topicMap = new Ir2(), this.events = new import_events5.EventEmitter(), this.name = mt2, this.version = bt2, this.pending = /* @__PURE__ */ new Map(), this.cached = [], this.initialized = false, this.pendingSubscriptionWatchLabel = "pending_sub_watch_label", this.pollingInterval = 20, this.storagePrefix = O2, this.subscribeTimeout = 1e4, this.restartInProgress = false, this.batchSubscribeTopicsLimit = 500, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId());
    }, this.subscribe = async (i3, s2) => {
      await this.restartToComplete(), this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i3, opts: s2 } });
      try {
        const n4 = vt(s2), o3 = { topic: i3, relay: n4 };
        this.pending.set(i3, o3);
        const a3 = await this.rpcSubscribe(i3, n4);
        return this.onSubscribe(a3, o3), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i3, opts: s2 } }), a3;
      } catch (n4) {
        throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(n4), n4;
      }
    }, this.unsubscribe = async (i3, s2) => {
      await this.restartToComplete(), this.isInitialized(), typeof (s2 == null ? void 0 : s2.id) < "u" ? await this.unsubscribeById(i3, s2.id, s2) : await this.unsubscribeByTopic(i3, s2);
    }, this.isSubscribed = async (i3) => this.topics.includes(i3) ? true : await new Promise((s2, n4) => {
      const o3 = new import_time2.Watch();
      o3.start(this.pendingSubscriptionWatchLabel);
      const a3 = setInterval(() => {
        !this.pending.has(i3) && this.topics.includes(i3) && (clearInterval(a3), o3.stop(this.pendingSubscriptionWatchLabel), s2(true)), o3.elapsed(this.pendingSubscriptionWatchLabel) >= ft3 && (clearInterval(a3), o3.stop(this.pendingSubscriptionWatchLabel), n4(new Error("Subscription resolution timeout")));
      }, this.pollingInterval);
    }).catch(() => false), this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.restart = async () => {
      this.restartInProgress = true, await this.restore(), await this.reset(), this.restartInProgress = false;
    }, this.relayer = e2, this.logger = E2(t, this.name), this.clientId = "";
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.subscriptions.size;
  }
  get ids() {
    return Array.from(this.subscriptions.keys());
  }
  get values() {
    return Array.from(this.subscriptions.values());
  }
  get topics() {
    return this.topicMap.topics;
  }
  hasSubscription(e2, t) {
    let i3 = false;
    try {
      i3 = this.getSubscription(e2).topic === t;
    } catch {
    }
    return i3;
  }
  onEnable() {
    this.cached = [], this.initialized = true;
  }
  onDisable() {
    this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
  }
  async unsubscribeByTopic(e2, t) {
    const i3 = this.topicMap.get(e2);
    await Promise.all(i3.map(async (s2) => await this.unsubscribeById(e2, s2, t)));
  }
  async unsubscribeById(e2, t, i3) {
    this.logger.debug("Unsubscribing Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e2, id: t, opts: i3 } });
    try {
      const s2 = vt(i3);
      await this.rpcUnsubscribe(e2, t, s2);
      const n4 = U("USER_DISCONNECTED", `${this.name}, ${e2}`);
      await this.onUnsubscribe(e2, t, n4), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e2, id: t, opts: i3 } });
    } catch (s2) {
      throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(s2), s2;
    }
  }
  async rpcSubscribe(e2, t) {
    const i3 = { method: Et(t.protocol).subscribe, params: { topic: e2 } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i3 });
    try {
      await await ut(this.relayer.request(i3), this.subscribeTimeout);
    } catch {
      this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(D3.connection_stalled);
    }
    return Ln(e2 + this.clientId);
  }
  async rpcBatchSubscribe(e2) {
    if (!e2.length) return;
    const t = e2[0].relay, i3 = { method: Et(t.protocol).batchSubscribe, params: { topics: e2.map((s2) => s2.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i3 });
    try {
      return await await ut(this.relayer.request(i3), this.subscribeTimeout);
    } catch {
      this.logger.debug("Outgoing Relay Payload stalled"), this.relayer.events.emit(D3.connection_stalled);
    }
  }
  rpcUnsubscribe(e2, t, i3) {
    const s2 = { method: Et(i3.protocol).unsubscribe, params: { topic: e2, id: t } };
    return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s2 }), this.relayer.request(s2);
  }
  onSubscribe(e2, t) {
    this.setSubscription(e2, De2(j3({}, t), { id: e2 })), this.pending.delete(t.topic);
  }
  onBatchSubscribe(e2) {
    e2.length && e2.forEach((t) => {
      this.setSubscription(t.id, j3({}, t)), this.pending.delete(t.topic);
    });
  }
  async onUnsubscribe(e2, t, i3) {
    this.events.removeAllListeners(t), this.hasSubscription(t, e2) && this.deleteSubscription(t, i3), await this.relayer.messages.del(e2);
  }
  async setRelayerSubscriptions(e2) {
    await this.relayer.core.storage.setItem(this.storageKey, e2);
  }
  async getRelayerSubscriptions() {
    return await this.relayer.core.storage.getItem(this.storageKey);
  }
  setSubscription(e2, t) {
    this.subscriptions.has(e2) || (this.logger.debug("Setting subscription"), this.logger.trace({ type: "method", method: "setSubscription", id: e2, subscription: t }), this.addSubscription(e2, t));
  }
  addSubscription(e2, t) {
    this.subscriptions.set(e2, j3({}, t)), this.topicMap.set(t.topic, e2), this.events.emit(w5.created, t);
  }
  getSubscription(e2) {
    this.logger.debug("Getting subscription"), this.logger.trace({ type: "method", method: "getSubscription", id: e2 });
    const t = this.subscriptions.get(e2);
    if (!t) {
      const { message: i3 } = N("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw new Error(i3);
    }
    return t;
  }
  deleteSubscription(e2, t) {
    this.logger.debug("Deleting subscription"), this.logger.trace({ type: "method", method: "deleteSubscription", id: e2, reason: t });
    const i3 = this.getSubscription(e2);
    this.subscriptions.delete(e2), this.topicMap.delete(i3.topic, e2), this.events.emit(w5.deleted, De2(j3({}, i3), { reason: t }));
  }
  async persist() {
    await this.setRelayerSubscriptions(this.values), this.events.emit(w5.sync);
  }
  async reset() {
    if (this.cached.length) {
      const e2 = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
      for (let t = 0; t < e2; t++) {
        const i3 = this.cached.splice(0, this.batchSubscribeTopicsLimit);
        await this.batchSubscribe(i3);
      }
    }
    this.events.emit(w5.resubscribed);
  }
  async restore() {
    try {
      const e2 = await this.getRelayerSubscriptions();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.subscriptions.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({ type: "method", method: "restore", subscriptions: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e2);
    }
  }
  async batchSubscribe(e2) {
    if (!e2.length) return;
    const t = await this.rpcBatchSubscribe(e2);
    k(t) && this.onBatchSubscribe(t.map((i3, s2) => De2(j3({}, e2[s2]), { id: i3 })));
  }
  async onConnect() {
    this.restartInProgress || (await this.restart(), this.onEnable());
  }
  onDisconnect() {
    this.onDisable();
  }
  async checkPending() {
    if (!this.initialized || this.relayer.transportExplicitlyClosed) return;
    const e2 = [];
    this.pending.forEach((t) => {
      e2.push(t);
    }), await this.batchSubscribe(e2);
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, async () => {
      await this.checkPending();
    }), this.relayer.on(D3.connect, async () => {
      await this.onConnect();
    }), this.relayer.on(D3.disconnect, () => {
      this.onDisconnect();
    }), this.events.on(w5.created, async (e2) => {
      const t = w5.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), await this.persist();
    }), this.events.on(w5.deleted, async (e2) => {
      const t = w5.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), await this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  async restartToComplete() {
    this.restartInProgress && await new Promise((e2) => {
      const t = setInterval(() => {
        this.restartInProgress || (clearInterval(t), e2());
      }, this.pollingInterval);
    });
  }
};
var Pr2 = Object.defineProperty;
var Ut2 = Object.getOwnPropertySymbols;
var xr2 = Object.prototype.hasOwnProperty;
var Or2 = Object.prototype.propertyIsEnumerable;
var Lt3 = (r2, e2, t) => e2 in r2 ? Pr2(r2, e2, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e2] = t;
var Ar2 = (r2, e2) => {
  for (var t in e2 || (e2 = {})) xr2.call(e2, t) && Lt3(r2, t, e2[t]);
  if (Ut2) for (var t of Ut2(e2)) Or2.call(e2, t) && Lt3(r2, t, e2[t]);
  return r2;
};
var Ft3 = class extends g2 {
  constructor(e2) {
    super(e2), this.protocol = "wc", this.version = 2, this.events = new import_events5.EventEmitter(), this.name = ut3, this.transportExplicitlyClosed = false, this.initialized = false, this.connectionAttemptInProgress = false, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = ["socket hang up", "socket stalled"], this.hasExperiencedNetworkDisruption = false, this.request = async (t) => {
      this.logger.debug("Publishing Request Payload");
      try {
        return await this.toEstablishConnection(), await this.provider.request(t);
      } catch (i3) {
        throw this.logger.debug("Failed to Publish Request"), this.logger.error(i3), i3;
      }
    }, this.onPayloadHandler = (t) => {
      this.onProviderPayload(t);
    }, this.onConnectHandler = () => {
      this.events.emit(D3.connect);
    }, this.onDisconnectHandler = () => {
      this.onProviderDisconnect();
    }, this.onProviderErrorHandler = (t) => {
      this.logger.error(t), this.events.emit(D3.error, t), this.logger.info("Fatal socket error received, closing transport"), this.transportClose();
    }, this.registerProviderListeners = () => {
      this.provider.on(P2.payload, this.onPayloadHandler), this.provider.on(P2.connect, this.onConnectHandler), this.provider.on(P2.disconnect, this.onDisconnectHandler), this.provider.on(P2.error, this.onProviderErrorHandler);
    }, this.core = e2.core, this.logger = typeof e2.logger < "u" && typeof e2.logger != "string" ? E2(e2.logger, this.name) : (0, import_pino2.default)(k3({ level: e2.logger || ct2 })), this.messages = new Ot2(this.logger, e2.core), this.subscriber = new Nt2(this, this.logger), this.publisher = new vr2(this, this.logger), this.relayUrl = (e2 == null ? void 0 : e2.relayUrl) || ge2, this.projectId = e2.projectId, this.bundleId = Jn(), this.provider = {};
  }
  async init() {
    this.logger.trace("Initialized"), this.registerEventListeners(), await this.createProvider(), await Promise.all([this.messages.init(), this.subscriber.init()]);
    try {
      await this.transportOpen();
    } catch {
      this.logger.warn(`Connection via ${this.relayUrl} failed, attempting to connect via failover domain ${pe2}...`), await this.restartTransport(pe2);
    }
    this.initialized = true, setTimeout(async () => {
      this.subscriber.topics.length === 0 && (this.logger.info("No topics subscribed to after init, closing transport"), await this.transportClose(), this.transportExplicitlyClosed = false);
    }, pt2);
  }
  get context() {
    return y2(this.logger);
  }
  get connected() {
    return this.provider.connection.connected;
  }
  get connecting() {
    return this.provider.connection.connecting;
  }
  async publish(e2, t, i3) {
    this.isInitialized(), await this.publisher.publish(e2, t, i3), await this.recordMessageEvent({ topic: e2, message: t, publishedAt: Date.now() });
  }
  async subscribe(e2, t) {
    var i3;
    this.isInitialized();
    let s2 = ((i3 = this.subscriber.topicMap.get(e2)) == null ? void 0 : i3[0]) || "";
    if (s2) return s2;
    let n4;
    const o3 = (a3) => {
      a3.topic === e2 && (this.subscriber.off(w5.created, o3), n4());
    };
    return await Promise.all([new Promise((a3) => {
      n4 = a3, this.subscriber.on(w5.created, o3);
    }), new Promise(async (a3) => {
      s2 = await this.subscriber.subscribe(e2, t), a3();
    })]), s2;
  }
  async unsubscribe(e2, t) {
    this.isInitialized(), await this.subscriber.unsubscribe(e2, t);
  }
  on(e2, t) {
    this.events.on(e2, t);
  }
  once(e2, t) {
    this.events.once(e2, t);
  }
  off(e2, t) {
    this.events.off(e2, t);
  }
  removeListener(e2, t) {
    this.events.removeListener(e2, t);
  }
  async transportClose() {
    this.transportExplicitlyClosed = true, this.hasExperiencedNetworkDisruption && this.connected ? await ut(this.provider.disconnect(), 1e3, "provider.disconnect()").catch(() => this.onProviderDisconnect()) : this.connected && await this.provider.disconnect();
  }
  async transportOpen(e2) {
    if (this.transportExplicitlyClosed = false, await this.confirmOnlineStateOrThrow(), !this.connectionAttemptInProgress) {
      e2 && e2 !== this.relayUrl && (this.relayUrl = e2, await this.transportClose(), await this.createProvider()), this.connectionAttemptInProgress = true;
      try {
        await Promise.all([new Promise((t) => {
          if (!this.initialized) return t();
          this.subscriber.once(w5.resubscribed, () => {
            t();
          });
        }), new Promise(async (t, i3) => {
          try {
            await ut(this.provider.connect(), 1e4, `Socket stalled when trying to connect to ${this.relayUrl}`);
          } catch (s2) {
            i3(s2);
            return;
          }
          t();
        })]);
      } catch (t) {
        this.logger.error(t);
        const i3 = t;
        if (!this.isConnectionStalled(i3.message)) throw t;
        this.provider.events.emit(P2.disconnect);
      } finally {
        this.connectionAttemptInProgress = false, this.hasExperiencedNetworkDisruption = false;
      }
    }
  }
  async restartTransport(e2) {
    await this.confirmOnlineStateOrThrow(), !this.connectionAttemptInProgress && (this.relayUrl = e2 || this.relayUrl, await this.transportClose(), await this.createProvider(), await this.transportOpen());
  }
  async confirmOnlineStateOrThrow() {
    if (!await er()) throw new Error("No internet connection detected. Please restart your network and try again.");
  }
  isConnectionStalled(e2) {
    return this.staleConnectionErrors.some((t) => e2.includes(t));
  }
  async createProvider() {
    this.provider.connection && this.unregisterProviderListeners();
    const e2 = await this.core.crypto.signJWT(this.relayUrl);
    this.provider = new JsonRpcProvider(new f2(Xn({ sdkVersion: gt3, protocol: this.protocol, version: this.version, relayUrl: this.relayUrl, projectId: this.projectId, auth: e2, useOnCloseEvent: true, bundleId: this.bundleId }))), this.registerProviderListeners();
  }
  async recordMessageEvent(e2) {
    const { topic: t, message: i3 } = e2;
    await this.messages.set(t, i3);
  }
  async shouldIgnoreMessageEvent(e2) {
    const { topic: t, message: i3 } = e2;
    if (!i3 || i3.length === 0) return this.logger.debug(`Ignoring invalid/empty message: ${i3}`), true;
    if (!await this.subscriber.isSubscribed(t)) return this.logger.debug(`Ignoring message for non-subscribed topic ${t}`), true;
    const s2 = this.messages.has(t, i3);
    return s2 && this.logger.debug(`Ignoring duplicate message: ${i3}`), s2;
  }
  async onProviderPayload(e2) {
    if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({ type: "payload", direction: "incoming", payload: e2 }), isJsonRpcRequest(e2)) {
      if (!e2.method.endsWith(lt2)) return;
      const t = e2.params, { topic: i3, message: s2, publishedAt: n4 } = t.data, o3 = { topic: i3, message: s2, publishedAt: n4 };
      this.logger.debug("Emitting Relayer Payload"), this.logger.trace(Ar2({ type: "event", event: t.id }, o3)), this.events.emit(t.id, o3), await this.acknowledgePayload(e2), await this.onMessageEvent(o3);
    } else isJsonRpcResponse(e2) && this.events.emit(D3.message_ack, e2);
  }
  async onMessageEvent(e2) {
    await this.shouldIgnoreMessageEvent(e2) || (this.events.emit(D3.message, e2), await this.recordMessageEvent(e2));
  }
  async acknowledgePayload(e2) {
    const t = formatJsonRpcResult(e2.id, true);
    await this.provider.connection.send(t);
  }
  unregisterProviderListeners() {
    this.provider.off(P2.payload, this.onPayloadHandler), this.provider.off(P2.connect, this.onConnectHandler), this.provider.off(P2.disconnect, this.onDisconnectHandler), this.provider.off(P2.error, this.onProviderErrorHandler);
  }
  async registerEventListeners() {
    this.events.on(D3.connection_stalled, () => {
      this.restartTransport().catch((t) => this.logger.error(t));
    });
    let e2 = await er();
    nr(async (t) => {
      this.initialized && e2 !== t && (e2 = t, t ? await this.restartTransport().catch((i3) => this.logger.error(i3)) : (this.hasExperiencedNetworkDisruption = true, await this.transportClose().catch((i3) => this.logger.error(i3))));
    });
  }
  onProviderDisconnect() {
    this.events.emit(D3.disconnect), this.attemptToReconnect();
  }
  attemptToReconnect() {
    this.transportExplicitlyClosed || (this.logger.info("attemptToReconnect called. Connecting..."), setTimeout(async () => {
      await this.restartTransport().catch((e2) => this.logger.error(e2));
    }, (0, import_time2.toMiliseconds)(dt3)));
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  async toEstablishConnection() {
    if (await this.confirmOnlineStateOrThrow(), !this.connected) {
      if (this.connectionAttemptInProgress) return await new Promise((e2) => {
        const t = setInterval(() => {
          this.connected && (clearInterval(t), e2());
        }, this.connectionStatusPollingInterval);
      });
      await this.restartTransport();
    }
  }
};
var zr2 = Object.defineProperty;
var $t2 = Object.getOwnPropertySymbols;
var Nr2 = Object.prototype.hasOwnProperty;
var Ur2 = Object.prototype.propertyIsEnumerable;
var Mt3 = (r2, e2, t) => e2 in r2 ? zr2(r2, e2, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e2] = t;
var kt3 = (r2, e2) => {
  for (var t in e2 || (e2 = {})) Nr2.call(e2, t) && Mt3(r2, t, e2[t]);
  if ($t2) for (var t of $t2(e2)) Ur2.call(e2, t) && Mt3(r2, t, e2[t]);
  return r2;
};
var Kt3 = class extends p3 {
  constructor(e2, t, i3, s2 = O2, n4 = void 0) {
    super(e2, t, i3, s2), this.core = e2, this.logger = t, this.name = i3, this.map = /* @__PURE__ */ new Map(), this.version = Dt3, this.cached = [], this.initialized = false, this.storagePrefix = O2, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((o3) => {
        this.getKey && o3 !== null && !w(o3) ? this.map.set(this.getKey(o3), o3) : Vt(o3) ? this.map.set(o3.id, o3) : Mt(o3) && this.map.set(o3.topic, o3);
      }), this.cached = [], this.initialized = true);
    }, this.set = async (o3, a3) => {
      this.isInitialized(), this.map.has(o3) ? await this.update(o3, a3) : (this.logger.debug("Setting value"), this.logger.trace({ type: "method", method: "set", key: o3, value: a3 }), this.map.set(o3, a3), await this.persist());
    }, this.get = (o3) => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({ type: "method", method: "get", key: o3 }), this.getData(o3)), this.getAll = (o3) => (this.isInitialized(), o3 ? this.values.filter((a3) => Object.keys(o3).every((h6) => (0, import_lodash.default)(a3[h6], o3[h6]))) : this.values), this.update = async (o3, a3) => {
      this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({ type: "method", method: "update", key: o3, update: a3 });
      const h6 = kt3(kt3({}, this.getData(o3)), a3);
      this.map.set(o3, h6), await this.persist();
    }, this.delete = async (o3, a3) => {
      this.isInitialized(), this.map.has(o3) && (this.logger.debug("Deleting value"), this.logger.trace({ type: "method", method: "delete", key: o3, reason: a3 }), this.map.delete(o3), await this.persist());
    }, this.logger = E2(t, this.name), this.storagePrefix = s2, this.getKey = n4;
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.map.size;
  }
  get keys() {
    return Array.from(this.map.keys());
  }
  get values() {
    return Array.from(this.map.values());
  }
  async setDataStore(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getDataStore() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getData(e2) {
    const t = this.map.get(e2);
    if (!t) {
      const { message: i3 } = N("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw this.logger.error(i3), new Error(i3);
    }
    return t;
  }
  async persist() {
    await this.setDataStore(this.values);
  }
  async restore() {
    try {
      const e2 = await this.getDataStore();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.map.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({ type: "method", method: "restore", value: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e2);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var Bt3 = class {
  constructor(e2, t) {
    this.core = e2, this.logger = t, this.name = Et3, this.version = wt3, this.events = new import_events5.default(), this.initialized = false, this.storagePrefix = O2, this.ignoredPayloadTypes = [_], this.registeredMethods = [], this.init = async () => {
      this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = true, this.logger.trace("Initialized"));
    }, this.register = ({ methods: i3 }) => {
      this.isInitialized(), this.registeredMethods = [.../* @__PURE__ */ new Set([...this.registeredMethods, ...i3])];
    }, this.create = async () => {
      this.isInitialized();
      const i3 = Vn(), s2 = await this.core.crypto.setSymKey(i3), n4 = pt(import_time2.FIVE_MINUTES), o3 = { protocol: ht3 }, a3 = { topic: s2, expiry: n4, relay: o3, active: false }, h6 = It({ protocol: this.core.protocol, version: this.core.version, topic: s2, symKey: i3, relay: o3 });
      return await this.pairings.set(s2, a3), await this.core.relayer.subscribe(s2), this.core.expirer.set(s2, n4), { topic: s2, uri: h6 };
    }, this.pair = async (i3) => {
      this.isInitialized(), this.isValidPair(i3);
      const { topic: s2, symKey: n4, relay: o3 } = wt(i3.uri);
      let a3;
      if (this.pairings.keys.includes(s2) && (a3 = this.pairings.get(s2), a3.active)) throw new Error(`Pairing already exists: ${s2}. Please try again with a new connection URI.`);
      const h6 = pt(import_time2.FIVE_MINUTES), l4 = { topic: s2, relay: o3, expiry: h6, active: false };
      return await this.pairings.set(s2, l4), this.core.expirer.set(s2, h6), i3.activatePairing && await this.activate({ topic: s2 }), this.events.emit(V.create, l4), this.core.crypto.keychain.has(s2) || (await this.core.crypto.setSymKey(n4, s2), await this.core.relayer.subscribe(s2, { relay: o3 })), l4;
    }, this.activate = async ({ topic: i3 }) => {
      this.isInitialized();
      const s2 = pt(import_time2.THIRTY_DAYS);
      await this.pairings.update(i3, { active: true, expiry: s2 }), this.core.expirer.set(i3, s2);
    }, this.ping = async (i3) => {
      this.isInitialized(), await this.isValidPing(i3);
      const { topic: s2 } = i3;
      if (this.pairings.keys.includes(s2)) {
        const n4 = await this.sendRequest(s2, "wc_pairingPing", {}), { done: o3, resolve: a3, reject: h6 } = at();
        this.events.once(yt("pairing_ping", n4), ({ error: l4 }) => {
          l4 ? h6(l4) : a3();
        }), await o3();
      }
    }, this.updateExpiry = async ({ topic: i3, expiry: s2 }) => {
      this.isInitialized(), await this.pairings.update(i3, { expiry: s2 });
    }, this.updateMetadata = async ({ topic: i3, metadata: s2 }) => {
      this.isInitialized(), await this.pairings.update(i3, { peerMetadata: s2 });
    }, this.getPairings = () => (this.isInitialized(), this.pairings.values), this.disconnect = async (i3) => {
      this.isInitialized(), await this.isValidDisconnect(i3);
      const { topic: s2 } = i3;
      this.pairings.keys.includes(s2) && (await this.sendRequest(s2, "wc_pairingDelete", U("USER_DISCONNECTED")), await this.deletePairing(s2));
    }, this.sendRequest = async (i3, s2, n4) => {
      const o3 = formatJsonRpcRequest(s2, n4), a3 = await this.core.crypto.encode(i3, o3), h6 = F[s2].req;
      return this.core.history.set(i3, o3), this.core.relayer.publish(i3, a3, h6), o3.id;
    }, this.sendResult = async (i3, s2, n4) => {
      const o3 = formatJsonRpcResult(i3, n4), a3 = await this.core.crypto.encode(s2, o3), h6 = await this.core.history.get(s2, i3), l4 = F[h6.request.method].res;
      await this.core.relayer.publish(s2, a3, l4), await this.core.history.resolve(o3);
    }, this.sendError = async (i3, s2, n4) => {
      const o3 = formatJsonRpcError(i3, n4), a3 = await this.core.crypto.encode(s2, o3), h6 = await this.core.history.get(s2, i3), l4 = F[h6.request.method] ? F[h6.request.method].res : F.unregistered_method.res;
      await this.core.relayer.publish(s2, a3, l4), await this.core.history.resolve(o3);
    }, this.deletePairing = async (i3, s2) => {
      await this.core.relayer.unsubscribe(i3), await Promise.all([this.pairings.delete(i3, U("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(i3), s2 ? Promise.resolve() : this.core.expirer.del(i3)]);
    }, this.cleanup = async () => {
      const i3 = this.pairings.getAll().filter((s2) => mt(s2.expiry));
      await Promise.all(i3.map((s2) => this.deletePairing(s2.topic)));
    }, this.onRelayEventRequest = (i3) => {
      const { topic: s2, payload: n4 } = i3;
      switch (n4.method) {
        case "wc_pairingPing":
          return this.onPairingPingRequest(s2, n4);
        case "wc_pairingDelete":
          return this.onPairingDeleteRequest(s2, n4);
        default:
          return this.onUnknownRpcMethodRequest(s2, n4);
      }
    }, this.onRelayEventResponse = async (i3) => {
      const { topic: s2, payload: n4 } = i3, o3 = (await this.core.history.get(s2, n4.id)).request.method;
      switch (o3) {
        case "wc_pairingPing":
          return this.onPairingPingResponse(s2, n4);
        default:
          return this.onUnknownRpcMethodResponse(o3);
      }
    }, this.onPairingPingRequest = async (i3, s2) => {
      const { id: n4 } = s2;
      try {
        this.isValidPing({ topic: i3 }), await this.sendResult(n4, i3, true), this.events.emit(V.ping, { id: n4, topic: i3 });
      } catch (o3) {
        await this.sendError(n4, i3, o3), this.logger.error(o3);
      }
    }, this.onPairingPingResponse = (i3, s2) => {
      const { id: n4 } = s2;
      setTimeout(() => {
        isJsonRpcResult(s2) ? this.events.emit(yt("pairing_ping", n4), {}) : isJsonRpcError(s2) && this.events.emit(yt("pairing_ping", n4), { error: s2.error });
      }, 500);
    }, this.onPairingDeleteRequest = async (i3, s2) => {
      const { id: n4 } = s2;
      try {
        this.isValidDisconnect({ topic: i3 }), await this.deletePairing(i3), this.events.emit(V.delete, { id: n4, topic: i3 });
      } catch (o3) {
        await this.sendError(n4, i3, o3), this.logger.error(o3);
      }
    }, this.onUnknownRpcMethodRequest = async (i3, s2) => {
      const { id: n4, method: o3 } = s2;
      try {
        if (this.registeredMethods.includes(o3)) return;
        const a3 = U("WC_METHOD_UNSUPPORTED", o3);
        await this.sendError(n4, i3, a3), this.logger.error(a3);
      } catch (a3) {
        await this.sendError(n4, i3, a3), this.logger.error(a3);
      }
    }, this.onUnknownRpcMethodResponse = (i3) => {
      this.registeredMethods.includes(i3) || this.logger.error(U("WC_METHOD_UNSUPPORTED", i3));
    }, this.isValidPair = (i3) => {
      var s2;
      if (!Ht(i3)) {
        const { message: o3 } = N("MISSING_OR_INVALID", `pair() params: ${i3}`);
        throw new Error(o3);
      }
      if (!kt(i3.uri)) {
        const { message: o3 } = N("MISSING_OR_INVALID", `pair() uri: ${i3.uri}`);
        throw new Error(o3);
      }
      const n4 = wt(i3.uri);
      if (!((s2 = n4 == null ? void 0 : n4.relay) != null && s2.protocol)) {
        const { message: o3 } = N("MISSING_OR_INVALID", "pair() uri#relay-protocol");
        throw new Error(o3);
      }
      if (!(n4 != null && n4.symKey)) {
        const { message: o3 } = N("MISSING_OR_INVALID", "pair() uri#symKey");
        throw new Error(o3);
      }
    }, this.isValidPing = async (i3) => {
      if (!Ht(i3)) {
        const { message: n4 } = N("MISSING_OR_INVALID", `ping() params: ${i3}`);
        throw new Error(n4);
      }
      const { topic: s2 } = i3;
      await this.isValidPairingTopic(s2);
    }, this.isValidDisconnect = async (i3) => {
      if (!Ht(i3)) {
        const { message: n4 } = N("MISSING_OR_INVALID", `disconnect() params: ${i3}`);
        throw new Error(n4);
      }
      const { topic: s2 } = i3;
      await this.isValidPairingTopic(s2);
    }, this.isValidPairingTopic = async (i3) => {
      if (!h(i3, false)) {
        const { message: s2 } = N("MISSING_OR_INVALID", `pairing topic should be a string: ${i3}`);
        throw new Error(s2);
      }
      if (!this.pairings.keys.includes(i3)) {
        const { message: s2 } = N("NO_MATCHING_KEY", `pairing topic doesn't exist: ${i3}`);
        throw new Error(s2);
      }
      if (mt(this.pairings.get(i3).expiry)) {
        await this.deletePairing(i3);
        const { message: s2 } = N("EXPIRED", `pairing topic: ${i3}`);
        throw new Error(s2);
      }
    }, this.core = e2, this.logger = E2(t, this.name), this.pairings = new Kt3(this.core, this.logger, this.name, this.storagePrefix);
  }
  get context() {
    return y2(this.logger);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  registerRelayerEvents() {
    this.core.relayer.on(D3.message, async (e2) => {
      const { topic: t, message: i3 } = e2;
      if (!this.pairings.keys.includes(t) || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i3))) return;
      const s2 = await this.core.crypto.decode(t, i3);
      try {
        isJsonRpcRequest(s2) ? (this.core.history.set(t, s2), this.onRelayEventRequest({ topic: t, payload: s2 })) : isJsonRpcResponse(s2) && (await this.core.history.resolve(s2), await this.onRelayEventResponse({ topic: t, payload: s2 }), this.core.history.delete(t, s2.id));
      } catch (n4) {
        this.logger.error(n4);
      }
    });
  }
  registerExpirerEvents() {
    this.core.expirer.on(v3.expired, async (e2) => {
      const { topic: t } = ft(e2.target);
      t && this.pairings.keys.includes(t) && (await this.deletePairing(t, true), this.events.emit(V.expire, { topic: t }));
    });
  }
};
var Vt3 = class extends h4 {
  constructor(e2, t) {
    super(e2, t), this.core = e2, this.logger = t, this.records = /* @__PURE__ */ new Map(), this.events = new import_events5.EventEmitter(), this.name = vt3, this.version = It3, this.cached = [], this.initialized = false, this.storagePrefix = O2, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i3) => this.records.set(i3.id, i3)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.set = (i3, s2, n4) => {
      if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({ type: "method", method: "set", topic: i3, request: s2, chainId: n4 }), this.records.has(s2.id)) return;
      const o3 = { id: s2.id, topic: i3, request: { method: s2.method, params: s2.params || null }, chainId: n4, expiry: pt(import_time2.THIRTY_DAYS) };
      this.records.set(o3.id, o3), this.events.emit(R.created, o3);
    }, this.resolve = async (i3) => {
      if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({ type: "method", method: "update", response: i3 }), !this.records.has(i3.id)) return;
      const s2 = await this.getRecord(i3.id);
      typeof s2.response > "u" && (s2.response = isJsonRpcError(i3) ? { error: i3.error } : { result: i3.result }, this.records.set(s2.id, s2), this.events.emit(R.updated, s2));
    }, this.get = async (i3, s2) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({ type: "method", method: "get", topic: i3, id: s2 }), await this.getRecord(s2)), this.delete = (i3, s2) => {
      this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({ type: "method", method: "delete", id: s2 }), this.values.forEach((n4) => {
        if (n4.topic === i3) {
          if (typeof s2 < "u" && n4.id !== s2) return;
          this.records.delete(n4.id), this.events.emit(R.deleted, n4);
        }
      });
    }, this.exists = async (i3, s2) => (this.isInitialized(), this.records.has(s2) ? (await this.getRecord(s2)).topic === i3 : false), this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.logger = E2(t, this.name);
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get size() {
    return this.records.size;
  }
  get keys() {
    return Array.from(this.records.keys());
  }
  get values() {
    return Array.from(this.records.values());
  }
  get pending() {
    const e2 = [];
    return this.values.forEach((t) => {
      if (typeof t.response < "u") return;
      const i3 = { topic: t.topic, request: formatJsonRpcRequest(t.request.method, t.request.params, t.id), chainId: t.chainId };
      return e2.push(i3);
    }), e2;
  }
  async setJsonRpcRecords(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getJsonRpcRecords() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getRecord(e2) {
    this.isInitialized();
    const t = this.records.get(e2);
    if (!t) {
      const { message: i3 } = N("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw new Error(i3);
    }
    return t;
  }
  async persist() {
    await this.setJsonRpcRecords(this.values), this.events.emit(R.sync);
  }
  async restore() {
    try {
      const e2 = await this.getJsonRpcRecords();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.records.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", records: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e2);
    }
  }
  registerEventListeners() {
    this.events.on(R.created, (e2) => {
      const t = R.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e2 }), this.persist();
    }), this.events.on(R.updated, (e2) => {
      const t = R.updated;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e2 }), this.persist();
    }), this.events.on(R.deleted, (e2) => {
      const t = R.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e2 }), this.persist();
    }), this.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => {
      this.cleanup();
    });
  }
  cleanup() {
    try {
      this.records.forEach((e2) => {
        (0, import_time2.toMiliseconds)(e2.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${e2.id}`), this.delete(e2.topic, e2.id));
      });
    } catch (e2) {
      this.logger.warn(e2);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var jt3 = class extends E3 {
  constructor(e2, t) {
    super(e2, t), this.core = e2, this.logger = t, this.expirations = /* @__PURE__ */ new Map(), this.events = new import_events5.EventEmitter(), this.name = Ct, this.version = Rt2, this.cached = [], this.initialized = false, this.storagePrefix = O2, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i3) => this.expirations.set(i3.target, i3)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.has = (i3) => {
      try {
        const s2 = this.formatTarget(i3);
        return typeof this.getExpiration(s2) < "u";
      } catch {
        return false;
      }
    }, this.set = (i3, s2) => {
      this.isInitialized();
      const n4 = this.formatTarget(i3), o3 = { target: n4, expiry: s2 };
      this.expirations.set(n4, o3), this.checkExpiry(n4, o3), this.events.emit(v3.created, { target: n4, expiration: o3 });
    }, this.get = (i3) => {
      this.isInitialized();
      const s2 = this.formatTarget(i3);
      return this.getExpiration(s2);
    }, this.del = (i3) => {
      if (this.isInitialized(), this.has(i3)) {
        const s2 = this.formatTarget(i3), n4 = this.getExpiration(s2);
        this.expirations.delete(s2), this.events.emit(v3.deleted, { target: s2, expiration: n4 });
      }
    }, this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.logger = E2(t, this.name);
  }
  get context() {
    return y2(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name;
  }
  get length() {
    return this.expirations.size;
  }
  get keys() {
    return Array.from(this.expirations.keys());
  }
  get values() {
    return Array.from(this.expirations.values());
  }
  formatTarget(e2) {
    if (typeof e2 == "string") return lt(e2);
    if (typeof e2 == "number") return dt(e2);
    const { message: t } = N("UNKNOWN_TYPE", `Target type: ${typeof e2}`);
    throw new Error(t);
  }
  async setExpirations(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getExpirations() {
    return await this.core.storage.getItem(this.storageKey);
  }
  async persist() {
    await this.setExpirations(this.values), this.events.emit(v3.sync);
  }
  async restore() {
    try {
      const e2 = await this.getExpirations();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.expirations.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({ type: "method", method: "restore", expirations: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e2);
    }
  }
  getExpiration(e2) {
    const t = this.expirations.get(e2);
    if (!t) {
      const { message: i3 } = N("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw this.logger.error(i3), new Error(i3);
    }
    return t;
  }
  checkExpiry(e2, t) {
    const { expiry: i3 } = t;
    (0, import_time2.toMiliseconds)(i3) - Date.now() <= 0 && this.expire(e2, t);
  }
  expire(e2, t) {
    this.expirations.delete(e2), this.events.emit(v3.expired, { target: e2, expiration: t });
  }
  checkExpirations() {
    this.core.relayer.connected && this.expirations.forEach((e2, t) => this.checkExpiry(t, e2));
  }
  registerEventListeners() {
    this.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => this.checkExpirations()), this.events.on(v3.created, (e2) => {
      const t = v3.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), this.persist();
    }), this.events.on(v3.expired, (e2) => {
      const t = v3.expired;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), this.persist();
    }), this.events.on(v3.deleted, (e2) => {
      const t = v3.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var qt3 = class extends y3 {
  constructor(e2, t) {
    super(e2, t), this.projectId = e2, this.logger = t, this.name = Z, this.initialized = false, this.queue = [], this.verifyDisabled = false, this.init = async (i3) => {
      if (this.verifyDisabled || C() || !D()) return;
      const s2 = this.getVerifyUrl(i3 == null ? void 0 : i3.verifyUrl);
      this.verifyUrl !== s2 && this.removeIframe(), this.verifyUrl = s2;
      try {
        await this.createIframe();
      } catch (n4) {
        this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(n4);
      }
      if (!this.initialized) {
        this.removeIframe(), this.verifyUrl = ee2;
        try {
          await this.createIframe();
        } catch (n4) {
          this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(n4), this.verifyDisabled = true;
        }
      }
    }, this.register = async (i3) => {
      this.initialized ? this.sendPost(i3.attestationId) : (this.addToQueue(i3.attestationId), await this.init());
    }, this.resolve = async (i3) => {
      if (this.isDevEnv) return "";
      const s2 = this.getVerifyUrl(i3 == null ? void 0 : i3.verifyUrl);
      let n4;
      try {
        n4 = await this.fetchAttestation(i3.attestationId, s2);
      } catch (o3) {
        this.logger.info(`failed to resolve attestation: ${i3.attestationId} from url: ${s2}`), this.logger.info(o3), n4 = await this.fetchAttestation(i3.attestationId, ee2);
      }
      return n4;
    }, this.fetchAttestation = async (i3, s2) => {
      this.logger.info(`resolving attestation: ${i3} from url: ${s2}`);
      const n4 = this.startAbortTimer(import_time2.ONE_SECOND * 2), o3 = await fetch(`${s2}/attestation/${i3}`, { signal: this.abortController.signal });
      return clearTimeout(n4), o3.status === 200 ? await o3.json() : void 0;
    }, this.addToQueue = (i3) => {
      this.queue.push(i3);
    }, this.processQueue = () => {
      this.queue.length !== 0 && (this.queue.forEach((i3) => this.sendPost(i3)), this.queue = []);
    }, this.sendPost = (i3) => {
      var s2;
      try {
        if (!this.iframe) return;
        (s2 = this.iframe.contentWindow) == null || s2.postMessage(i3, "*"), this.logger.info(`postMessage sent: ${i3} ${this.verifyUrl}`);
      } catch {
      }
    }, this.createIframe = async () => {
      let i3;
      const s2 = (n4) => {
        n4.data === "verify_ready" && (this.initialized = true, this.processQueue(), window.removeEventListener("message", s2), i3());
      };
      await Promise.race([new Promise((n4) => {
        if (document.getElementById(Z)) return n4();
        window.addEventListener("message", s2);
        const o3 = document.createElement("iframe");
        o3.id = Z, o3.src = `${this.verifyUrl}/${this.projectId}`, o3.style.display = "none", document.body.append(o3), this.iframe = o3, i3 = n4;
      }), new Promise((n4, o3) => setTimeout(() => {
        window.removeEventListener("message", s2), o3("verify iframe load timeout");
      }, (0, import_time2.toMiliseconds)(import_time2.FIVE_SECONDS)))]);
    }, this.removeIframe = () => {
      this.iframe && (this.iframe.remove(), this.iframe = void 0, this.initialized = false);
    }, this.getVerifyUrl = (i3) => {
      let s2 = i3 || $2;
      return _t2.includes(s2) || (this.logger.info(`verify url: ${s2}, not included in trusted list, assigning default: ${$2}`), s2 = $2), s2;
    }, this.logger = E2(t, this.name), this.verifyUrl = $2, this.abortController = new AbortController(), this.isDevEnv = te() && process.env.IS_VITEST;
  }
  get context() {
    return y2(this.logger);
  }
  startAbortTimer(e2) {
    return this.abortController = new AbortController(), setTimeout(() => this.abortController.abort(), (0, import_time2.toMiliseconds)(e2));
  }
};
var Gt3 = class extends v2 {
  constructor(e2, t) {
    super(e2, t), this.projectId = e2, this.logger = t, this.context = St2, this.registerDeviceToken = async (i3) => {
      const { clientId: s2, token: n4, notificationType: o3, enableEncrypted: a3 = false } = i3, h6 = `${Tt2}/${this.projectId}/clients`;
      await (0, import_isomorphic_unfetch.default)(h6, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ client_id: s2, type: o3, token: n4, always_raw: a3 }) });
    }, this.logger = E2(t, this.context);
  }
};
var Lr2 = Object.defineProperty;
var Yt3 = Object.getOwnPropertySymbols;
var Fr2 = Object.prototype.hasOwnProperty;
var $r2 = Object.prototype.propertyIsEnumerable;
var Ht3 = (r2, e2, t) => e2 in r2 ? Lr2(r2, e2, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e2] = t;
var Jt3 = (r2, e2) => {
  for (var t in e2 || (e2 = {})) Fr2.call(e2, t) && Ht3(r2, t, e2[t]);
  if (Yt3) for (var t of Yt3(e2)) $r2.call(e2, t) && Ht3(r2, t, e2[t]);
  return r2;
};
var te3 = class _te extends n2 {
  constructor(e2) {
    super(e2), this.protocol = le2, this.version = We2, this.name = Q2, this.events = new import_events5.EventEmitter(), this.initialized = false, this.on = (i3, s2) => this.events.on(i3, s2), this.once = (i3, s2) => this.events.once(i3, s2), this.off = (i3, s2) => this.events.off(i3, s2), this.removeListener = (i3, s2) => this.events.removeListener(i3, s2), this.projectId = e2 == null ? void 0 : e2.projectId, this.relayUrl = (e2 == null ? void 0 : e2.relayUrl) || ge2, this.customStoragePrefix = e2 != null && e2.customStoragePrefix ? `:${e2.customStoragePrefix}` : "";
    const t = typeof (e2 == null ? void 0 : e2.logger) < "u" && typeof (e2 == null ? void 0 : e2.logger) != "string" ? e2.logger : (0, import_pino2.default)(k3({ level: (e2 == null ? void 0 : e2.logger) || Qe2.logger }));
    this.logger = E2(t, this.name), this.heartbeat = new import_heartbeat.HeartBeat(), this.crypto = new xt3(this, this.logger, e2 == null ? void 0 : e2.keychain), this.history = new Vt3(this, this.logger), this.expirer = new jt3(this, this.logger), this.storage = e2 != null && e2.storage ? e2.storage : new h2(Jt3(Jt3({}, Ze2), e2 == null ? void 0 : e2.storageOptions)), this.relayer = new Ft3({ core: this, logger: this.logger, relayUrl: this.relayUrl, projectId: this.projectId }), this.pairing = new Bt3(this, this.logger), this.verify = new qt3(this.projectId || "", this.logger), this.echoClient = new Gt3(this.projectId || "", this.logger);
  }
  static async init(e2) {
    const t = new _te(e2);
    await t.initialize();
    const i3 = await t.crypto.getClientId();
    return await t.storage.setItem(yt3, i3), t;
  }
  get context() {
    return y2(this.logger);
  }
  async start() {
    this.initialized || await this.initialize();
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = true, this.logger.info("Core Initialization Success");
    } catch (e2) {
      throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e2), this.logger.error(e2.message), e2;
    }
  }
};
var Mr2 = te3;

// node_modules/@walletconnect/sign-client/dist/index.es.js
var import_events6 = __toESM(require_events());
var import_time3 = __toESM(require_cjs());
var X2 = "wc";
var F2 = 2;
var H2 = "client";
var G3 = `${X2}@${F2}:${H2}:`;
var M2 = { name: H2, logger: "error", controller: false, relayUrl: "wss://relay.walletconnect.com" };
var W3 = "WALLETCONNECT_DEEPLINK_CHOICE";
var ne = "proposal";
var oe2 = "Proposal expired";
var ae = "session";
var A = import_time3.SEVEN_DAYS;
var ce2 = "engine";
var V2 = { wc_sessionPropose: { req: { ttl: import_time3.FIVE_MINUTES, prompt: true, tag: 1100 }, res: { ttl: import_time3.FIVE_MINUTES, prompt: false, tag: 1101 } }, wc_sessionSettle: { req: { ttl: import_time3.FIVE_MINUTES, prompt: false, tag: 1102 }, res: { ttl: import_time3.FIVE_MINUTES, prompt: false, tag: 1103 } }, wc_sessionUpdate: { req: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1104 }, res: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1105 } }, wc_sessionExtend: { req: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1106 }, res: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1107 } }, wc_sessionRequest: { req: { ttl: import_time3.FIVE_MINUTES, prompt: true, tag: 1108 }, res: { ttl: import_time3.FIVE_MINUTES, prompt: false, tag: 1109 } }, wc_sessionEvent: { req: { ttl: import_time3.FIVE_MINUTES, prompt: true, tag: 1110 }, res: { ttl: import_time3.FIVE_MINUTES, prompt: false, tag: 1111 } }, wc_sessionDelete: { req: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1112 }, res: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1113 } }, wc_sessionPing: { req: { ttl: import_time3.THIRTY_SECONDS, prompt: false, tag: 1114 }, res: { ttl: import_time3.THIRTY_SECONDS, prompt: false, tag: 1115 } } };
var U4 = { min: import_time3.FIVE_MINUTES, max: import_time3.SEVEN_DAYS };
var I = { idle: "IDLE", active: "ACTIVE" };
var le3 = "request";
var pe3 = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest"];
var as2 = Object.defineProperty;
var cs2 = Object.defineProperties;
var ls2 = Object.getOwnPropertyDescriptors;
var he3 = Object.getOwnPropertySymbols;
var ps2 = Object.prototype.hasOwnProperty;
var hs2 = Object.prototype.propertyIsEnumerable;
var de3 = (m3, r2, e2) => r2 in m3 ? as2(m3, r2, { enumerable: true, configurable: true, writable: true, value: e2 }) : m3[r2] = e2;
var g4 = (m3, r2) => {
  for (var e2 in r2 || (r2 = {})) ps2.call(r2, e2) && de3(m3, e2, r2[e2]);
  if (he3) for (var e2 of he3(r2)) hs2.call(r2, e2) && de3(m3, e2, r2[e2]);
  return m3;
};
var b4 = (m3, r2) => cs2(m3, ls2(r2));
var ds2 = class extends w3 {
  constructor(r2) {
    super(r2), this.name = ce2, this.events = new import_events6.default(), this.initialized = false, this.ignoredPayloadTypes = [_], this.requestQueue = { state: I.idle, queue: [] }, this.sessionRequestQueue = { state: I.idle, queue: [] }, this.requestQueueDelay = import_time3.ONE_SECOND, this.init = async () => {
      this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), this.client.core.pairing.register({ methods: Object.keys(V2) }), this.initialized = true, setTimeout(() => {
        this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue();
      }, (0, import_time3.toMiliseconds)(this.requestQueueDelay)));
    }, this.connect = async (e2) => {
      await this.isInitialized();
      const s2 = b4(g4({}, e2), { requiredNamespaces: e2.requiredNamespaces || {}, optionalNamespaces: e2.optionalNamespaces || {} });
      await this.isValidConnect(s2);
      const { pairingTopic: t, requiredNamespaces: i3, optionalNamespaces: n4, sessionProperties: o3, relays: a3 } = s2;
      let c5 = t, p6, d3 = false;
      if (c5 && (d3 = this.client.core.pairing.pairings.get(c5).active), !c5 || !d3) {
        const { topic: v6, uri: S5 } = await this.client.core.pairing.create();
        c5 = v6, p6 = S5;
      }
      const h6 = await this.client.core.crypto.generateKeyPair(), R2 = g4({ requiredNamespaces: i3, optionalNamespaces: n4, relays: a3 ?? [{ protocol: ht3 }], proposer: { publicKey: h6, metadata: this.client.metadata } }, o3 && { sessionProperties: o3 }), { reject: w7, resolve: T3, done: K3 } = at(import_time3.FIVE_MINUTES, oe2);
      if (this.events.once(yt("session_connect"), async ({ error: v6, session: S5 }) => {
        if (v6) w7(v6);
        else if (S5) {
          S5.self.publicKey = h6;
          const B3 = b4(g4({}, S5), { requiredNamespaces: S5.requiredNamespaces, optionalNamespaces: S5.optionalNamespaces });
          await this.client.session.set(S5.topic, B3), await this.setExpiry(S5.topic, S5.expiry), c5 && await this.client.core.pairing.updateMetadata({ topic: c5, metadata: S5.peer.metadata }), T3(B3);
        }
      }), !c5) {
        const { message: v6 } = N("NO_MATCHING_KEY", `connect() pairing topic: ${c5}`);
        throw new Error(v6);
      }
      const L4 = await this.sendRequest({ topic: c5, method: "wc_sessionPropose", params: R2 }), ge4 = pt(import_time3.FIVE_MINUTES);
      return await this.setProposal(L4, g4({ id: L4, expiry: ge4 }, R2)), { uri: p6, approval: K3 };
    }, this.pair = async (e2) => (await this.isInitialized(), await this.client.core.pairing.pair(e2)), this.approve = async (e2) => {
      await this.isInitialized(), await this.isValidApprove(e2);
      const { id: s2, relayProtocol: t, namespaces: i3, sessionProperties: n4 } = e2, o3 = this.client.proposal.get(s2);
      let { pairingTopic: a3, proposer: c5, requiredNamespaces: p6, optionalNamespaces: d3 } = o3;
      a3 = a3 || "", B(p6) || (p6 = jt(i3, "approve()"));
      const h6 = await this.client.core.crypto.generateKeyPair(), R2 = c5.publicKey, w7 = await this.client.core.crypto.generateSharedKey(h6, R2);
      a3 && s2 && (await this.client.core.pairing.updateMetadata({ topic: a3, metadata: c5.metadata }), await this.sendResult({ id: s2, topic: a3, result: { relay: { protocol: t ?? "irn" }, responderPublicKey: h6 } }), await this.client.proposal.delete(s2, U("USER_DISCONNECTED")), await this.client.core.pairing.activate({ topic: a3 }));
      const T3 = g4({ relay: { protocol: t ?? "irn" }, namespaces: i3, requiredNamespaces: p6, optionalNamespaces: d3, pairingTopic: a3, controller: { publicKey: h6, metadata: this.client.metadata }, expiry: pt(A) }, n4 && { sessionProperties: n4 });
      await this.client.core.relayer.subscribe(w7), await this.sendRequest({ topic: w7, method: "wc_sessionSettle", params: T3, throwOnFailedPublish: true });
      const K3 = b4(g4({}, T3), { topic: w7, pairingTopic: a3, acknowledged: false, self: T3.controller, peer: { publicKey: c5.publicKey, metadata: c5.metadata }, controller: h6 });
      return await this.client.session.set(w7, K3), await this.setExpiry(w7, pt(A)), { topic: w7, acknowledged: () => new Promise((L4) => setTimeout(() => L4(this.client.session.get(w7)), 500)) };
    }, this.reject = async (e2) => {
      await this.isInitialized(), await this.isValidReject(e2);
      const { id: s2, reason: t } = e2, { pairingTopic: i3 } = this.client.proposal.get(s2);
      i3 && (await this.sendError(s2, i3, t), await this.client.proposal.delete(s2, U("USER_DISCONNECTED")));
    }, this.update = async (e2) => {
      await this.isInitialized(), await this.isValidUpdate(e2);
      const { topic: s2, namespaces: t } = e2, i3 = await this.sendRequest({ topic: s2, method: "wc_sessionUpdate", params: { namespaces: t } }), { done: n4, resolve: o3, reject: a3 } = at();
      return this.events.once(yt("session_update", i3), ({ error: c5 }) => {
        c5 ? a3(c5) : o3();
      }), await this.client.session.update(s2, { namespaces: t }), { acknowledged: n4 };
    }, this.extend = async (e2) => {
      await this.isInitialized(), await this.isValidExtend(e2);
      const { topic: s2 } = e2, t = await this.sendRequest({ topic: s2, method: "wc_sessionExtend", params: {} }), { done: i3, resolve: n4, reject: o3 } = at();
      return this.events.once(yt("session_extend", t), ({ error: a3 }) => {
        a3 ? o3(a3) : n4();
      }), await this.setExpiry(s2, pt(A)), { acknowledged: i3 };
    }, this.request = async (e2) => {
      await this.isInitialized(), await this.isValidRequest(e2);
      const { chainId: s2, request: t, topic: i3, expiry: n4 } = e2, o3 = payloadId(), { done: a3, resolve: c5, reject: p6 } = at(n4, "Request expired. Please try again.");
      return this.events.once(yt("session_request", o3), ({ error: d3, result: h6 }) => {
        d3 ? p6(d3) : c5(h6);
      }), await Promise.all([new Promise(async (d3) => {
        await this.sendRequest({ clientRpcId: o3, topic: i3, method: "wc_sessionRequest", params: { request: t, chainId: s2 }, expiry: n4, throwOnFailedPublish: true }).catch((h6) => p6(h6)), this.client.events.emit("session_request_sent", { topic: i3, request: t, chainId: s2, id: o3 }), d3();
      }), new Promise(async (d3) => {
        const h6 = await gt(this.client.core.storage, W3);
        ht({ id: o3, topic: i3, wcDeepLink: h6 }), d3();
      }), a3()]).then((d3) => d3[2]);
    }, this.respond = async (e2) => {
      await this.isInitialized(), await this.isValidRespond(e2);
      const { topic: s2, response: t } = e2, { id: i3 } = t;
      isJsonRpcResult(t) ? await this.sendResult({ id: i3, topic: s2, result: t.result, throwOnFailedPublish: true }) : isJsonRpcError(t) && await this.sendError(i3, s2, t.error), this.cleanupAfterResponse(e2);
    }, this.ping = async (e2) => {
      await this.isInitialized(), await this.isValidPing(e2);
      const { topic: s2 } = e2;
      if (this.client.session.keys.includes(s2)) {
        const t = await this.sendRequest({ topic: s2, method: "wc_sessionPing", params: {} }), { done: i3, resolve: n4, reject: o3 } = at();
        this.events.once(yt("session_ping", t), ({ error: a3 }) => {
          a3 ? o3(a3) : n4();
        }), await i3();
      } else this.client.core.pairing.pairings.keys.includes(s2) && await this.client.core.pairing.ping({ topic: s2 });
    }, this.emit = async (e2) => {
      await this.isInitialized(), await this.isValidEmit(e2);
      const { topic: s2, event: t, chainId: i3 } = e2;
      await this.sendRequest({ topic: s2, method: "wc_sessionEvent", params: { event: t, chainId: i3 } });
    }, this.disconnect = async (e2) => {
      await this.isInitialized(), await this.isValidDisconnect(e2);
      const { topic: s2 } = e2;
      this.client.session.keys.includes(s2) ? (await this.sendRequest({ topic: s2, method: "wc_sessionDelete", params: U("USER_DISCONNECTED"), throwOnFailedPublish: true }), await this.deleteSession(s2)) : await this.client.core.pairing.disconnect({ topic: s2 });
    }, this.find = (e2) => (this.isInitialized(), this.client.session.getAll().filter((s2) => Dt(s2, e2))), this.getPendingSessionRequests = () => (this.isInitialized(), this.client.pendingRequest.getAll()), this.cleanupDuplicatePairings = async (e2) => {
      if (e2.pairingTopic) try {
        const s2 = this.client.core.pairing.pairings.get(e2.pairingTopic), t = this.client.core.pairing.pairings.getAll().filter((i3) => {
          var n4, o3;
          return ((n4 = i3.peerMetadata) == null ? void 0 : n4.url) && ((o3 = i3.peerMetadata) == null ? void 0 : o3.url) === e2.peer.metadata.url && i3.topic && i3.topic !== s2.topic;
        });
        if (t.length === 0) return;
        this.client.logger.info(`Cleaning up ${t.length} duplicate pairing(s)`), await Promise.all(t.map((i3) => this.client.core.pairing.disconnect({ topic: i3.topic }))), this.client.logger.info("Duplicate pairings clean up finished");
      } catch (s2) {
        this.client.logger.error(s2);
      }
    }, this.deleteSession = async (e2, s2) => {
      const { self: t } = this.client.session.get(e2);
      await this.client.core.relayer.unsubscribe(e2), this.client.session.delete(e2, U("USER_DISCONNECTED")), this.client.core.crypto.keychain.has(t.publicKey) && await this.client.core.crypto.deleteKeyPair(t.publicKey), this.client.core.crypto.keychain.has(e2) && await this.client.core.crypto.deleteSymKey(e2), s2 || this.client.core.expirer.del(e2), this.client.core.storage.removeItem(W3).catch((i3) => this.client.logger.warn(i3)), this.getPendingSessionRequests().forEach((i3) => {
        i3.topic === e2 && this.deletePendingSessionRequest(i3.id, U("USER_DISCONNECTED"));
      });
    }, this.deleteProposal = async (e2, s2) => {
      await Promise.all([this.client.proposal.delete(e2, U("USER_DISCONNECTED")), s2 ? Promise.resolve() : this.client.core.expirer.del(e2)]);
    }, this.deletePendingSessionRequest = async (e2, s2, t = false) => {
      await Promise.all([this.client.pendingRequest.delete(e2, s2), t ? Promise.resolve() : this.client.core.expirer.del(e2)]), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter((i3) => i3.id !== e2), t && (this.sessionRequestQueue.state = I.idle);
    }, this.setExpiry = async (e2, s2) => {
      this.client.session.keys.includes(e2) && await this.client.session.update(e2, { expiry: s2 }), this.client.core.expirer.set(e2, s2);
    }, this.setProposal = async (e2, s2) => {
      await this.client.proposal.set(e2, s2), this.client.core.expirer.set(e2, s2.expiry);
    }, this.setPendingSessionRequest = async (e2) => {
      const s2 = V2.wc_sessionRequest.req.ttl, { id: t, topic: i3, params: n4, verifyContext: o3 } = e2;
      await this.client.pendingRequest.set(t, { id: t, topic: i3, params: n4, verifyContext: o3 }), s2 && this.client.core.expirer.set(t, pt(s2));
    }, this.sendRequest = async (e2) => {
      const { topic: s2, method: t, params: i3, expiry: n4, relayRpcId: o3, clientRpcId: a3, throwOnFailedPublish: c5 } = e2, p6 = formatJsonRpcRequest(t, i3, a3);
      if (D() && pe3.includes(t)) {
        const R2 = Ln(JSON.stringify(p6));
        this.client.core.verify.register({ attestationId: R2 });
      }
      const d3 = await this.client.core.crypto.encode(s2, p6), h6 = V2[t].req;
      return n4 && (h6.ttl = n4), o3 && (h6.id = o3), this.client.core.history.set(s2, p6), c5 ? (h6.internal = b4(g4({}, h6.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(s2, d3, h6)) : this.client.core.relayer.publish(s2, d3, h6).catch((R2) => this.client.logger.error(R2)), p6.id;
    }, this.sendResult = async (e2) => {
      const { id: s2, topic: t, result: i3, throwOnFailedPublish: n4 } = e2, o3 = formatJsonRpcResult(s2, i3), a3 = await this.client.core.crypto.encode(t, o3), c5 = await this.client.core.history.get(t, s2), p6 = V2[c5.request.method].res;
      n4 ? (p6.internal = b4(g4({}, p6.internal), { throwOnFailedPublish: true }), await this.client.core.relayer.publish(t, a3, p6)) : this.client.core.relayer.publish(t, a3, p6).catch((d3) => this.client.logger.error(d3)), await this.client.core.history.resolve(o3);
    }, this.sendError = async (e2, s2, t) => {
      const i3 = formatJsonRpcError(e2, t), n4 = await this.client.core.crypto.encode(s2, i3), o3 = await this.client.core.history.get(s2, e2), a3 = V2[o3.request.method].res;
      this.client.core.relayer.publish(s2, n4, a3), await this.client.core.history.resolve(i3);
    }, this.cleanup = async () => {
      const e2 = [], s2 = [];
      this.client.session.getAll().forEach((t) => {
        mt(t.expiry) && e2.push(t.topic);
      }), this.client.proposal.getAll().forEach((t) => {
        mt(t.expiry) && s2.push(t.id);
      }), await Promise.all([...e2.map((t) => this.deleteSession(t)), ...s2.map((t) => this.deleteProposal(t))]);
    }, this.onRelayEventRequest = async (e2) => {
      this.requestQueue.queue.push(e2), await this.processRequestsQueue();
    }, this.processRequestsQueue = async () => {
      if (this.requestQueue.state === I.active) {
        this.client.logger.info("Request queue already active, skipping...");
        return;
      }
      for (this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0; ) {
        this.requestQueue.state = I.active;
        const e2 = this.requestQueue.queue.shift();
        if (e2) try {
          this.processRequest(e2), await new Promise((s2) => setTimeout(s2, 300));
        } catch (s2) {
          this.client.logger.warn(s2);
        }
      }
      this.requestQueue.state = I.idle;
    }, this.processRequest = (e2) => {
      const { topic: s2, payload: t } = e2, i3 = t.method;
      switch (i3) {
        case "wc_sessionPropose":
          return this.onSessionProposeRequest(s2, t);
        case "wc_sessionSettle":
          return this.onSessionSettleRequest(s2, t);
        case "wc_sessionUpdate":
          return this.onSessionUpdateRequest(s2, t);
        case "wc_sessionExtend":
          return this.onSessionExtendRequest(s2, t);
        case "wc_sessionPing":
          return this.onSessionPingRequest(s2, t);
        case "wc_sessionDelete":
          return this.onSessionDeleteRequest(s2, t);
        case "wc_sessionRequest":
          return this.onSessionRequest(s2, t);
        case "wc_sessionEvent":
          return this.onSessionEventRequest(s2, t);
        default:
          return this.client.logger.info(`Unsupported request method ${i3}`);
      }
    }, this.onRelayEventResponse = async (e2) => {
      const { topic: s2, payload: t } = e2, i3 = (await this.client.core.history.get(s2, t.id)).request.method;
      switch (i3) {
        case "wc_sessionPropose":
          return this.onSessionProposeResponse(s2, t);
        case "wc_sessionSettle":
          return this.onSessionSettleResponse(s2, t);
        case "wc_sessionUpdate":
          return this.onSessionUpdateResponse(s2, t);
        case "wc_sessionExtend":
          return this.onSessionExtendResponse(s2, t);
        case "wc_sessionPing":
          return this.onSessionPingResponse(s2, t);
        case "wc_sessionRequest":
          return this.onSessionRequestResponse(s2, t);
        default:
          return this.client.logger.info(`Unsupported response method ${i3}`);
      }
    }, this.onRelayEventUnknownPayload = (e2) => {
      const { topic: s2 } = e2, { message: t } = N("MISSING_OR_INVALID", `Decoded payload on topic ${s2} is not identifiable as a JSON-RPC request or a response.`);
      throw new Error(t);
    }, this.onSessionProposeRequest = async (e2, s2) => {
      const { params: t, id: i3 } = s2;
      try {
        this.isValidConnect(g4({}, s2.params));
        const n4 = pt(import_time3.FIVE_MINUTES), o3 = g4({ id: i3, pairingTopic: e2, expiry: n4 }, t);
        await this.setProposal(i3, o3);
        const a3 = Ln(JSON.stringify(s2)), c5 = await this.getVerifyContext(a3, o3.proposer.metadata);
        this.client.events.emit("session_proposal", { id: i3, params: o3, verifyContext: c5 });
      } catch (n4) {
        await this.sendError(i3, e2, n4), this.client.logger.error(n4);
      }
    }, this.onSessionProposeResponse = async (e2, s2) => {
      const { id: t } = s2;
      if (isJsonRpcResult(s2)) {
        const { result: i3 } = s2;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", result: i3 });
        const n4 = this.client.proposal.get(t);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", proposal: n4 });
        const o3 = n4.proposer.publicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", selfPublicKey: o3 });
        const a3 = i3.responderPublicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", peerPublicKey: a3 });
        const c5 = await this.client.core.crypto.generateSharedKey(o3, a3);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", sessionTopic: c5 });
        const p6 = await this.client.core.relayer.subscribe(c5);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", subscriptionId: p6 }), await this.client.core.pairing.activate({ topic: e2 });
      } else isJsonRpcError(s2) && (await this.client.proposal.delete(t, U("USER_DISCONNECTED")), this.events.emit(yt("session_connect"), { error: s2.error }));
    }, this.onSessionSettleRequest = async (e2, s2) => {
      const { id: t, params: i3 } = s2;
      try {
        this.isValidSessionSettleRequest(i3);
        const { relay: n4, controller: o3, expiry: a3, namespaces: c5, requiredNamespaces: p6, optionalNamespaces: d3, sessionProperties: h6, pairingTopic: R2 } = s2.params, w7 = g4({ topic: e2, relay: n4, expiry: a3, namespaces: c5, acknowledged: true, pairingTopic: R2, requiredNamespaces: p6, optionalNamespaces: d3, controller: o3.publicKey, self: { publicKey: "", metadata: this.client.metadata }, peer: { publicKey: o3.publicKey, metadata: o3.metadata } }, h6 && { sessionProperties: h6 });
        await this.sendResult({ id: s2.id, topic: e2, result: true }), this.events.emit(yt("session_connect"), { session: w7 }), this.cleanupDuplicatePairings(w7);
      } catch (n4) {
        await this.sendError(t, e2, n4), this.client.logger.error(n4);
      }
    }, this.onSessionSettleResponse = async (e2, s2) => {
      const { id: t } = s2;
      isJsonRpcResult(s2) ? (await this.client.session.update(e2, { acknowledged: true }), this.events.emit(yt("session_approve", t), {})) : isJsonRpcError(s2) && (await this.client.session.delete(e2, U("USER_DISCONNECTED")), this.events.emit(yt("session_approve", t), { error: s2.error }));
    }, this.onSessionUpdateRequest = async (e2, s2) => {
      const { params: t, id: i3 } = s2;
      try {
        const n4 = `${e2}_session_update`, o3 = tr.get(n4);
        if (o3 && this.isRequestOutOfSync(o3, i3)) {
          this.client.logger.info(`Discarding out of sync request - ${i3}`);
          return;
        }
        this.isValidUpdate(g4({ topic: e2 }, t)), await this.client.session.update(e2, { namespaces: t.namespaces }), await this.sendResult({ id: i3, topic: e2, result: true }), this.client.events.emit("session_update", { id: i3, topic: e2, params: t }), tr.set(n4, i3);
      } catch (n4) {
        await this.sendError(i3, e2, n4), this.client.logger.error(n4);
      }
    }, this.isRequestOutOfSync = (e2, s2) => parseInt(s2.toString().slice(0, -3)) <= parseInt(e2.toString().slice(0, -3)), this.onSessionUpdateResponse = (e2, s2) => {
      const { id: t } = s2;
      isJsonRpcResult(s2) ? this.events.emit(yt("session_update", t), {}) : isJsonRpcError(s2) && this.events.emit(yt("session_update", t), { error: s2.error });
    }, this.onSessionExtendRequest = async (e2, s2) => {
      const { id: t } = s2;
      try {
        this.isValidExtend({ topic: e2 }), await this.setExpiry(e2, pt(A)), await this.sendResult({ id: t, topic: e2, result: true }), this.client.events.emit("session_extend", { id: t, topic: e2 });
      } catch (i3) {
        await this.sendError(t, e2, i3), this.client.logger.error(i3);
      }
    }, this.onSessionExtendResponse = (e2, s2) => {
      const { id: t } = s2;
      isJsonRpcResult(s2) ? this.events.emit(yt("session_extend", t), {}) : isJsonRpcError(s2) && this.events.emit(yt("session_extend", t), { error: s2.error });
    }, this.onSessionPingRequest = async (e2, s2) => {
      const { id: t } = s2;
      try {
        this.isValidPing({ topic: e2 }), await this.sendResult({ id: t, topic: e2, result: true }), this.client.events.emit("session_ping", { id: t, topic: e2 });
      } catch (i3) {
        await this.sendError(t, e2, i3), this.client.logger.error(i3);
      }
    }, this.onSessionPingResponse = (e2, s2) => {
      const { id: t } = s2;
      setTimeout(() => {
        isJsonRpcResult(s2) ? this.events.emit(yt("session_ping", t), {}) : isJsonRpcError(s2) && this.events.emit(yt("session_ping", t), { error: s2.error });
      }, 500);
    }, this.onSessionDeleteRequest = async (e2, s2) => {
      const { id: t } = s2;
      try {
        this.isValidDisconnect({ topic: e2, reason: s2.params }), await Promise.all([new Promise((i3) => {
          this.client.core.relayer.once(D3.publish, async () => {
            i3(await this.deleteSession(e2));
          });
        }), this.sendResult({ id: t, topic: e2, result: true })]), this.client.events.emit("session_delete", { id: t, topic: e2 });
      } catch (i3) {
        this.client.logger.error(i3);
      }
    }, this.onSessionRequest = async (e2, s2) => {
      const { id: t, params: i3 } = s2;
      try {
        this.isValidRequest(g4({ topic: e2 }, i3));
        const n4 = Ln(JSON.stringify(formatJsonRpcRequest("wc_sessionRequest", i3, t))), o3 = this.client.session.get(e2), a3 = await this.getVerifyContext(n4, o3.peer.metadata), c5 = { id: t, topic: e2, params: i3, verifyContext: a3 };
        await this.setPendingSessionRequest(c5), this.addSessionRequestToSessionRequestQueue(c5), this.processSessionRequestQueue();
      } catch (n4) {
        await this.sendError(t, e2, n4), this.client.logger.error(n4);
      }
    }, this.onSessionRequestResponse = (e2, s2) => {
      const { id: t } = s2;
      isJsonRpcResult(s2) ? this.events.emit(yt("session_request", t), { result: s2.result }) : isJsonRpcError(s2) && this.events.emit(yt("session_request", t), { error: s2.error });
    }, this.onSessionEventRequest = async (e2, s2) => {
      const { id: t, params: i3 } = s2;
      try {
        const n4 = `${e2}_session_event_${i3.event.name}`, o3 = tr.get(n4);
        if (o3 && this.isRequestOutOfSync(o3, t)) {
          this.client.logger.info(`Discarding out of sync request - ${t}`);
          return;
        }
        this.isValidEmit(g4({ topic: e2 }, i3)), this.client.events.emit("session_event", { id: t, topic: e2, params: i3 }), tr.set(n4, t);
      } catch (n4) {
        await this.sendError(t, e2, n4), this.client.logger.error(n4);
      }
    }, this.addSessionRequestToSessionRequestQueue = (e2) => {
      this.sessionRequestQueue.queue.push(e2);
    }, this.cleanupAfterResponse = (e2) => {
      this.deletePendingSessionRequest(e2.response.id, { message: "fulfilled", code: 0 }), setTimeout(() => {
        this.sessionRequestQueue.state = I.idle, this.processSessionRequestQueue();
      }, (0, import_time3.toMiliseconds)(this.requestQueueDelay));
    }, this.processSessionRequestQueue = () => {
      if (this.sessionRequestQueue.state === I.active) {
        this.client.logger.info("session request queue is already active.");
        return;
      }
      const e2 = this.sessionRequestQueue.queue[0];
      if (!e2) {
        this.client.logger.info("session request queue is empty.");
        return;
      }
      try {
        this.sessionRequestQueue.state = I.active, this.client.events.emit("session_request", e2);
      } catch (s2) {
        this.client.logger.error(s2);
      }
    }, this.onPairingCreated = (e2) => {
      if (e2.active) return;
      const s2 = this.client.proposal.getAll().find((t) => t.pairingTopic === e2.topic);
      s2 && this.onSessionProposeRequest(e2.topic, formatJsonRpcRequest("wc_sessionPropose", { requiredNamespaces: s2.requiredNamespaces, optionalNamespaces: s2.optionalNamespaces, relays: s2.relays, proposer: s2.proposer, sessionProperties: s2.sessionProperties }, s2.id));
    }, this.isValidConnect = async (e2) => {
      if (!Ht(e2)) {
        const { message: a3 } = N("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(e2)}`);
        throw new Error(a3);
      }
      const { pairingTopic: s2, requiredNamespaces: t, optionalNamespaces: i3, sessionProperties: n4, relays: o3 } = e2;
      if (w(s2) || await this.isValidPairingTopic(s2), !xt(o3, true)) {
        const { message: a3 } = N("MISSING_OR_INVALID", `connect() relays: ${o3}`);
        throw new Error(a3);
      }
      !w(t) && B(t) !== 0 && this.validateNamespaces(t, "requiredNamespaces"), !w(i3) && B(i3) !== 0 && this.validateNamespaces(i3, "optionalNamespaces"), w(n4) || this.validateSessionProps(n4, "sessionProperties");
    }, this.validateNamespaces = (e2, s2) => {
      const t = Lt(e2, "connect()", s2);
      if (t) throw new Error(t.message);
    }, this.isValidApprove = async (e2) => {
      if (!Ht(e2)) throw new Error(N("MISSING_OR_INVALID", `approve() params: ${e2}`).message);
      const { id: s2, namespaces: t, relayProtocol: i3, sessionProperties: n4 } = e2;
      await this.isValidProposalId(s2);
      const o3 = this.client.proposal.get(s2), a3 = ln(t, "approve()");
      if (a3) throw new Error(a3.message);
      const c5 = fn(o3.requiredNamespaces, t, "approve()");
      if (c5) throw new Error(c5.message);
      if (!h(i3, true)) {
        const { message: p6 } = N("MISSING_OR_INVALID", `approve() relayProtocol: ${i3}`);
        throw new Error(p6);
      }
      w(n4) || this.validateSessionProps(n4, "sessionProperties");
    }, this.isValidReject = async (e2) => {
      if (!Ht(e2)) {
        const { message: i3 } = N("MISSING_OR_INVALID", `reject() params: ${e2}`);
        throw new Error(i3);
      }
      const { id: s2, reason: t } = e2;
      if (await this.isValidProposalId(s2), !qt(t)) {
        const { message: i3 } = N("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(t)}`);
        throw new Error(i3);
      }
    }, this.isValidSessionSettleRequest = (e2) => {
      if (!Ht(e2)) {
        const { message: c5 } = N("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${e2}`);
        throw new Error(c5);
      }
      const { relay: s2, controller: t, namespaces: i3, expiry: n4 } = e2;
      if (!dn(s2)) {
        const { message: c5 } = N("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
        throw new Error(c5);
      }
      const o3 = Kt(t, "onSessionSettleRequest()");
      if (o3) throw new Error(o3.message);
      const a3 = ln(i3, "onSessionSettleRequest()");
      if (a3) throw new Error(a3.message);
      if (mt(n4)) {
        const { message: c5 } = N("EXPIRED", "onSessionSettleRequest()");
        throw new Error(c5);
      }
    }, this.isValidUpdate = async (e2) => {
      if (!Ht(e2)) {
        const { message: a3 } = N("MISSING_OR_INVALID", `update() params: ${e2}`);
        throw new Error(a3);
      }
      const { topic: s2, namespaces: t } = e2;
      await this.isValidSessionTopic(s2);
      const i3 = this.client.session.get(s2), n4 = ln(t, "update()");
      if (n4) throw new Error(n4.message);
      const o3 = fn(i3.requiredNamespaces, t, "update()");
      if (o3) throw new Error(o3.message);
    }, this.isValidExtend = async (e2) => {
      if (!Ht(e2)) {
        const { message: t } = N("MISSING_OR_INVALID", `extend() params: ${e2}`);
        throw new Error(t);
      }
      const { topic: s2 } = e2;
      await this.isValidSessionTopic(s2);
    }, this.isValidRequest = async (e2) => {
      if (!Ht(e2)) {
        const { message: a3 } = N("MISSING_OR_INVALID", `request() params: ${e2}`);
        throw new Error(a3);
      }
      const { topic: s2, request: t, chainId: i3, expiry: n4 } = e2;
      await this.isValidSessionTopic(s2);
      const { namespaces: o3 } = this.client.session.get(s2);
      if (!zt(o3, i3)) {
        const { message: a3 } = N("MISSING_OR_INVALID", `request() chainId: ${i3}`);
        throw new Error(a3);
      }
      if (!Bt(t)) {
        const { message: a3 } = N("MISSING_OR_INVALID", `request() ${JSON.stringify(t)}`);
        throw new Error(a3);
      }
      if (!Yt(o3, i3, t.method)) {
        const { message: a3 } = N("MISSING_OR_INVALID", `request() method: ${t.method}`);
        throw new Error(a3);
      }
      if (n4 && !Xt(n4, U4)) {
        const { message: a3 } = N("MISSING_OR_INVALID", `request() expiry: ${n4}. Expiry must be a number (in seconds) between ${U4.min} and ${U4.max}`);
        throw new Error(a3);
      }
    }, this.isValidRespond = async (e2) => {
      var s2;
      if (!Ht(e2)) {
        const { message: n4 } = N("MISSING_OR_INVALID", `respond() params: ${e2}`);
        throw new Error(n4);
      }
      const { topic: t, response: i3 } = e2;
      try {
        await this.isValidSessionTopic(t);
      } catch (n4) {
        throw (s2 = e2 == null ? void 0 : e2.response) != null && s2.id && this.cleanupAfterResponse(e2), n4;
      }
      if (!Gt(i3)) {
        const { message: n4 } = N("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(i3)}`);
        throw new Error(n4);
      }
    }, this.isValidPing = async (e2) => {
      if (!Ht(e2)) {
        const { message: t } = N("MISSING_OR_INVALID", `ping() params: ${e2}`);
        throw new Error(t);
      }
      const { topic: s2 } = e2;
      await this.isValidSessionOrPairingTopic(s2);
    }, this.isValidEmit = async (e2) => {
      if (!Ht(e2)) {
        const { message: o3 } = N("MISSING_OR_INVALID", `emit() params: ${e2}`);
        throw new Error(o3);
      }
      const { topic: s2, event: t, chainId: i3 } = e2;
      await this.isValidSessionTopic(s2);
      const { namespaces: n4 } = this.client.session.get(s2);
      if (!zt(n4, i3)) {
        const { message: o3 } = N("MISSING_OR_INVALID", `emit() chainId: ${i3}`);
        throw new Error(o3);
      }
      if (!Wt(t)) {
        const { message: o3 } = N("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(t)}`);
        throw new Error(o3);
      }
      if (!Jt(n4, i3, t.name)) {
        const { message: o3 } = N("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(t)}`);
        throw new Error(o3);
      }
    }, this.isValidDisconnect = async (e2) => {
      if (!Ht(e2)) {
        const { message: t } = N("MISSING_OR_INVALID", `disconnect() params: ${e2}`);
        throw new Error(t);
      }
      const { topic: s2 } = e2;
      await this.isValidSessionOrPairingTopic(s2);
    }, this.getVerifyContext = async (e2, s2) => {
      const t = { verified: { verifyUrl: s2.verifyUrl || $2, validation: "UNKNOWN", origin: s2.url || "" } };
      try {
        const i3 = await this.client.core.verify.resolve({ attestationId: e2, verifyUrl: s2.verifyUrl });
        i3 && (t.verified.origin = i3.origin, t.verified.isScam = i3.isScam, t.verified.validation = i3.origin === new URL(s2.url).origin ? "VALID" : "INVALID");
      } catch (i3) {
        this.client.logger.info(i3);
      }
      return this.client.logger.info(`Verify context: ${JSON.stringify(t)}`), t;
    }, this.validateSessionProps = (e2, s2) => {
      Object.values(e2).forEach((t) => {
        if (!h(t, false)) {
          const { message: i3 } = N("MISSING_OR_INVALID", `${s2} must be in Record<string, string> format. Received: ${JSON.stringify(t)}`);
          throw new Error(i3);
        }
      });
    };
  }
  async isInitialized() {
    if (!this.initialized) {
      const { message: r2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(r2);
    }
    await this.client.core.relayer.confirmOnlineStateOrThrow();
  }
  registerRelayerEvents() {
    this.client.core.relayer.on(D3.message, async (r2) => {
      const { topic: e2, message: s2 } = r2;
      if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(s2))) return;
      const t = await this.client.core.crypto.decode(e2, s2);
      try {
        isJsonRpcRequest(t) ? (this.client.core.history.set(e2, t), this.onRelayEventRequest({ topic: e2, payload: t })) : isJsonRpcResponse(t) ? (await this.client.core.history.resolve(t), await this.onRelayEventResponse({ topic: e2, payload: t }), this.client.core.history.delete(e2, t.id)) : this.onRelayEventUnknownPayload({ topic: e2, payload: t });
      } catch (i3) {
        this.client.logger.error(i3);
      }
    });
  }
  registerExpirerEvents() {
    this.client.core.expirer.on(v3.expired, async (r2) => {
      const { topic: e2, id: s2 } = ft(r2.target);
      if (s2 && this.client.pendingRequest.keys.includes(s2)) return await this.deletePendingSessionRequest(s2, N("EXPIRED"), true);
      e2 ? this.client.session.keys.includes(e2) && (await this.deleteSession(e2, true), this.client.events.emit("session_expire", { topic: e2 })) : s2 && (await this.deleteProposal(s2, true), this.client.events.emit("proposal_expire", { id: s2 }));
    });
  }
  registerPairingEvents() {
    this.client.core.pairing.events.on(V.create, (r2) => this.onPairingCreated(r2));
  }
  isValidPairingTopic(r2) {
    if (!h(r2, false)) {
      const { message: e2 } = N("MISSING_OR_INVALID", `pairing topic should be a string: ${r2}`);
      throw new Error(e2);
    }
    if (!this.client.core.pairing.pairings.keys.includes(r2)) {
      const { message: e2 } = N("NO_MATCHING_KEY", `pairing topic doesn't exist: ${r2}`);
      throw new Error(e2);
    }
    if (mt(this.client.core.pairing.pairings.get(r2).expiry)) {
      const { message: e2 } = N("EXPIRED", `pairing topic: ${r2}`);
      throw new Error(e2);
    }
  }
  async isValidSessionTopic(r2) {
    if (!h(r2, false)) {
      const { message: e2 } = N("MISSING_OR_INVALID", `session topic should be a string: ${r2}`);
      throw new Error(e2);
    }
    if (!this.client.session.keys.includes(r2)) {
      const { message: e2 } = N("NO_MATCHING_KEY", `session topic doesn't exist: ${r2}`);
      throw new Error(e2);
    }
    if (mt(this.client.session.get(r2).expiry)) {
      await this.deleteSession(r2);
      const { message: e2 } = N("EXPIRED", `session topic: ${r2}`);
      throw new Error(e2);
    }
  }
  async isValidSessionOrPairingTopic(r2) {
    if (this.client.session.keys.includes(r2)) await this.isValidSessionTopic(r2);
    else if (this.client.core.pairing.pairings.keys.includes(r2)) this.isValidPairingTopic(r2);
    else if (h(r2, false)) {
      const { message: e2 } = N("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${r2}`);
      throw new Error(e2);
    } else {
      const { message: e2 } = N("MISSING_OR_INVALID", `session or pairing topic should be a string: ${r2}`);
      throw new Error(e2);
    }
  }
  async isValidProposalId(r2) {
    if (!Ft(r2)) {
      const { message: e2 } = N("MISSING_OR_INVALID", `proposal id should be a number: ${r2}`);
      throw new Error(e2);
    }
    if (!this.client.proposal.keys.includes(r2)) {
      const { message: e2 } = N("NO_MATCHING_KEY", `proposal id doesn't exist: ${r2}`);
      throw new Error(e2);
    }
    if (mt(this.client.proposal.get(r2).expiry)) {
      await this.deleteProposal(r2);
      const { message: e2 } = N("EXPIRED", `proposal id: ${r2}`);
      throw new Error(e2);
    }
  }
};
var us2 = class extends Kt3 {
  constructor(r2, e2) {
    super(r2, e2, ne, G3), this.core = r2, this.logger = e2;
  }
};
var ue2 = class extends Kt3 {
  constructor(r2, e2) {
    super(r2, e2, ae, G3), this.core = r2, this.logger = e2;
  }
};
var gs2 = class extends Kt3 {
  constructor(r2, e2) {
    super(r2, e2, le3, G3, (s2) => s2.id), this.core = r2, this.logger = e2;
  }
};
var Q3 = class _Q extends b2 {
  constructor(r2) {
    super(r2), this.protocol = X2, this.version = F2, this.name = M2.name, this.events = new import_events6.EventEmitter(), this.on = (s2, t) => this.events.on(s2, t), this.once = (s2, t) => this.events.once(s2, t), this.off = (s2, t) => this.events.off(s2, t), this.removeListener = (s2, t) => this.events.removeListener(s2, t), this.removeAllListeners = (s2) => this.events.removeAllListeners(s2), this.connect = async (s2) => {
      try {
        return await this.engine.connect(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.pair = async (s2) => {
      try {
        return await this.engine.pair(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.approve = async (s2) => {
      try {
        return await this.engine.approve(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.reject = async (s2) => {
      try {
        return await this.engine.reject(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.update = async (s2) => {
      try {
        return await this.engine.update(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.extend = async (s2) => {
      try {
        return await this.engine.extend(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.request = async (s2) => {
      try {
        return await this.engine.request(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.respond = async (s2) => {
      try {
        return await this.engine.respond(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.ping = async (s2) => {
      try {
        return await this.engine.ping(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.emit = async (s2) => {
      try {
        return await this.engine.emit(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.disconnect = async (s2) => {
      try {
        return await this.engine.disconnect(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.find = (s2) => {
      try {
        return this.engine.find(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.getPendingSessionRequests = () => {
      try {
        return this.engine.getPendingSessionRequests();
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.name = (r2 == null ? void 0 : r2.name) || M2.name, this.metadata = (r2 == null ? void 0 : r2.metadata) || Qn();
    const e2 = typeof (r2 == null ? void 0 : r2.logger) < "u" && typeof (r2 == null ? void 0 : r2.logger) != "string" ? r2.logger : (0, import_pino2.default)(k3({ level: (r2 == null ? void 0 : r2.logger) || M2.logger }));
    this.core = (r2 == null ? void 0 : r2.core) || new Mr2(r2), this.logger = E2(e2, this.name), this.session = new ue2(this.core, this.logger), this.proposal = new us2(this.core, this.logger), this.pendingRequest = new gs2(this.core, this.logger), this.engine = new ds2(this);
  }
  static async init(r2) {
    const e2 = new _Q(r2);
    return await e2.initialize(), e2;
  }
  get context() {
    return y2(this.logger);
  }
  get pairing() {
    return this.core.pairing.pairings;
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), this.core.verify.init({ verifyUrl: this.metadata.verifyUrl }), this.logger.info("SignClient Initialization Success");
    } catch (r2) {
      throw this.logger.info("SignClient Initialization Failure"), this.logger.error(r2.message), r2;
    }
  }
};

// node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js
var import_events7 = __toESM(require_events());
var import_cross_fetch = __toESM(require_browser_ponyfill());
var P3 = Object.defineProperty;
var w6 = Object.defineProperties;
var E4 = Object.getOwnPropertyDescriptors;
var c4 = Object.getOwnPropertySymbols;
var L2 = Object.prototype.hasOwnProperty;
var O4 = Object.prototype.propertyIsEnumerable;
var l3 = (r2, t, e2) => t in r2 ? P3(r2, t, { enumerable: true, configurable: true, writable: true, value: e2 }) : r2[t] = e2;
var p4 = (r2, t) => {
  for (var e2 in t || (t = {})) L2.call(t, e2) && l3(r2, e2, t[e2]);
  if (c4) for (var e2 of c4(t)) O4.call(t, e2) && l3(r2, e2, t[e2]);
  return r2;
};
var v4 = (r2, t) => w6(r2, E4(t));
var j4 = { Accept: "application/json", "Content-Type": "application/json" };
var T2 = "POST";
var d2 = { headers: j4, method: T2 };
var g5 = 10;
var f3 = class {
  constructor(t, e2 = false) {
    if (this.url = t, this.disableProviderPing = e2, this.events = new import_events7.EventEmitter(), this.isAvailable = false, this.registering = false, !isHttpUrl(t)) throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);
    this.url = t, this.disableProviderPing = e2;
  }
  get connected() {
    return this.isAvailable;
  }
  get connecting() {
    return this.registering;
  }
  on(t, e2) {
    this.events.on(t, e2);
  }
  once(t, e2) {
    this.events.once(t, e2);
  }
  off(t, e2) {
    this.events.off(t, e2);
  }
  removeListener(t, e2) {
    this.events.removeListener(t, e2);
  }
  async open(t = this.url) {
    await this.register(t);
  }
  async close() {
    if (!this.isAvailable) throw new Error("Connection already closed");
    this.onClose();
  }
  async send(t) {
    this.isAvailable || await this.register();
    try {
      const e2 = safeJsonStringify(t), s2 = await (await (0, import_cross_fetch.default)(this.url, v4(p4({}, d2), { body: e2 }))).json();
      this.onPayload({ data: s2 });
    } catch (e2) {
      this.onError(t.id, e2);
    }
  }
  async register(t = this.url) {
    if (!isHttpUrl(t)) throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);
    if (this.registering) {
      const e2 = this.events.getMaxListeners();
      return (this.events.listenerCount("register_error") >= e2 || this.events.listenerCount("open") >= e2) && this.events.setMaxListeners(e2 + 1), new Promise((s2, i3) => {
        this.events.once("register_error", (n4) => {
          this.resetMaxListeners(), i3(n4);
        }), this.events.once("open", () => {
          if (this.resetMaxListeners(), typeof this.isAvailable > "u") return i3(new Error("HTTP connection is missing or invalid"));
          s2();
        });
      });
    }
    this.url = t, this.registering = true;
    try {
      if (!this.disableProviderPing) {
        const e2 = safeJsonStringify({ id: 1, jsonrpc: "2.0", method: "test", params: [] });
        await (0, import_cross_fetch.default)(t, v4(p4({}, d2), { body: e2 }));
      }
      this.onOpen();
    } catch (e2) {
      const s2 = this.parseError(e2);
      throw this.events.emit("register_error", s2), this.onClose(), s2;
    }
  }
  onOpen() {
    this.isAvailable = true, this.registering = false, this.events.emit("open");
  }
  onClose() {
    this.isAvailable = false, this.registering = false, this.events.emit("close");
  }
  onPayload(t) {
    if (typeof t.data > "u") return;
    const e2 = typeof t.data == "string" ? safeJsonParse(t.data) : t.data;
    this.events.emit("payload", e2);
  }
  onError(t, e2) {
    const s2 = this.parseError(e2), i3 = s2.message || s2.toString(), n4 = formatJsonRpcError(t, i3);
    this.events.emit("payload", n4);
  }
  parseError(t, e2 = this.url) {
    return parseConnectionError(t, e2, "HTTP");
  }
  resetMaxListeners() {
    this.events.getMaxListeners() > g5 && this.events.setMaxListeners(g5);
  }
};

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js
var import_events8 = __toESM(require_events());
var JsonRpcProvider2 = class extends r {
  constructor(connection) {
    super(connection);
    this.events = new import_events8.EventEmitter();
    this.hasRegisteredEventListeners = false;
    this.connection = this.setConnection(connection);
    if (this.connection.connected) {
      this.registerEventListeners();
    }
  }
  async connect(connection = this.connection) {
    await this.open(connection);
  }
  async disconnect() {
    await this.close();
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async request(request, context) {
    return this.requestStrict(formatJsonRpcRequest(request.method, request.params || [], request.id || getBigIntRpcId().toString()), context);
  }
  async requestStrict(request, context) {
    return new Promise(async (resolve, reject) => {
      if (!this.connection.connected) {
        try {
          await this.open();
        } catch (e2) {
          reject(e2);
        }
      }
      this.events.on(`${request.id}`, (response) => {
        if (isJsonRpcError(response)) {
          reject(response.error);
        } else {
          resolve(response.result);
        }
      });
      try {
        await this.connection.send(request, context);
      } catch (e2) {
        reject(e2);
      }
    });
  }
  setConnection(connection = this.connection) {
    return connection;
  }
  onPayload(payload) {
    this.events.emit("payload", payload);
    if (isJsonRpcResponse(payload)) {
      this.events.emit(`${payload.id}`, payload);
    } else {
      this.events.emit("message", {
        type: payload.method,
        data: payload.params
      });
    }
  }
  onClose(event) {
    if (event && event.code === 3e3) {
      this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : ""}`));
    }
    this.events.emit("disconnect");
  }
  async open(connection = this.connection) {
    if (this.connection === connection && this.connection.connected)
      return;
    if (this.connection.connected)
      this.close();
    if (typeof connection === "string") {
      await this.connection.open(connection);
      connection = this.connection;
    }
    this.connection = this.setConnection(connection);
    await this.connection.open();
    this.registerEventListeners();
    this.events.emit("connect");
  }
  async close() {
    await this.connection.close();
  }
  registerEventListeners() {
    if (this.hasRegisteredEventListeners)
      return;
    this.connection.on("payload", (payload) => this.onPayload(payload));
    this.connection.on("close", (event) => this.onClose(event));
    this.connection.on("error", (error) => this.events.emit("error", error));
    this.connection.on("register_error", (error) => this.onClose());
    this.hasRegisteredEventListeners = true;
  }
};

// node_modules/@walletconnect/universal-provider/dist/index.es.js
var import_events9 = __toESM(require_events());
var Ia = "error";
var Wg = "wss://relay.walletconnect.com";
var Fg = "wc";
var Mg = "universal_provider";
var xa = `${Fg}@2:${Mg}:`;
var qg = "https://rpc.walletconnect.com/v1/";
var Vn3 = { DEFAULT_CHAIN_CHANGED: "default_chain_changed" };
var ge3 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var Ui = { exports: {} };
(function(C2, u4) {
  (function() {
    var i3, d3 = "4.17.21", P5 = 200, O6 = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", $4 = "Expected a function", En2 = "Invalid `variable` option passed into `_.template`", zt4 = "__lodash_hash_undefined__", pr3 = 500, It4 = "__lodash_placeholder__", Ln3 = 1, Fn3 = 2, xt4 = 4, Et4 = 1, ve3 = 2, vn2 = 1, ct3 = 2, qi = 4, Dn = 8, yt4 = 16, Hn3 = 32, St3 = 64, Mn3 = 128, Kt4 = 256, dr3 = 512, La = 30, Da = "...", Ha = 800, Na = 16, Bi = 1, $a = 2, Ua = 3, ht4 = 1 / 0, kn3 = 9007199254740991, Wa = 17976931348623157e292, _e3 = 0 / 0, Nn2 = 4294967295, Fa = Nn2 - 1, Ma = Nn2 >>> 1, qa = [["ary", Mn3], ["bind", vn2], ["bindKey", ct3], ["curry", Dn], ["curryRight", yt4], ["flip", dr3], ["partial", Hn3], ["partialRight", St3], ["rearg", Kt4]], Ot3 = "[object Arguments]", me2 = "[object Array]", Ba = "[object AsyncFunction]", Yt4 = "[object Boolean]", Zt2 = "[object Date]", Ga = "[object DOMException]", we2 = "[object Error]", Pe2 = "[object Function]", Gi2 = "[object GeneratorFunction]", yn2 = "[object Map]", Jt4 = "[object Number]", za = "[object Null]", qn3 = "[object Object]", zi = "[object Promise]", Ka = "[object Proxy]", Xt4 = "[object RegExp]", Sn2 = "[object Set]", Qt3 = "[object String]", Ae3 = "[object Symbol]", Ya = "[object Undefined]", Vt4 = "[object WeakMap]", Za = "[object WeakSet]", kt4 = "[object ArrayBuffer]", Rt3 = "[object DataView]", gr3 = "[object Float32Array]", vr3 = "[object Float64Array]", _r3 = "[object Int8Array]", mr3 = "[object Int16Array]", wr2 = "[object Int32Array]", Pr3 = "[object Uint8Array]", Ar3 = "[object Uint8ClampedArray]", Cr3 = "[object Uint16Array]", Ir3 = "[object Uint32Array]", Ja = /\b__p \+= '';/g, Xa = /\b(__p \+=) '' \+/g, Qa = /(__e\(.*?\)|\b__t\)) \+\n'';/g, Ki = /&(?:amp|lt|gt|quot|#39);/g, Yi2 = /[&<>"']/g, Va = RegExp(Ki.source), ka = RegExp(Yi2.source), ja = /<%-([\s\S]+?)%>/g, no2 = /<%([\s\S]+?)%>/g, Zi2 = /<%=([\s\S]+?)%>/g, to2 = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, eo2 = /^\w*$/, ro2 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, xr3 = /[\\^$.*+?()[\]{}|]/g, io2 = RegExp(xr3.source), Er2 = /^\s+/, so2 = /\s/, uo2 = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, ao2 = /\{\n\/\* \[wrapped with (.+)\] \*/, oo2 = /,? & /, fo2 = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, co2 = /[()=,{}\[\]\/\s]/, ho2 = /\\(\\)?/g, lo2 = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Ji2 = /\w*$/, po2 = /^[-+]0x[0-9a-f]+$/i, go2 = /^0b[01]+$/i, vo2 = /^\[object .+?Constructor\]$/, _o2 = /^0o[0-7]+$/i, mo2 = /^(?:0|[1-9]\d*)$/, wo2 = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, Ce2 = /($^)/, Po2 = /['\n\r\u2028\u2029\\]/g, Ie2 = "\\ud800-\\udfff", Ao2 = "\\u0300-\\u036f", Co2 = "\\ufe20-\\ufe2f", Io2 = "\\u20d0-\\u20ff", Xi2 = Ao2 + Co2 + Io2, Qi2 = "\\u2700-\\u27bf", Vi = "a-z\\xdf-\\xf6\\xf8-\\xff", xo2 = "\\xac\\xb1\\xd7\\xf7", Eo2 = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", yo2 = "\\u2000-\\u206f", So2 = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", ki2 = "A-Z\\xc0-\\xd6\\xd8-\\xde", ji = "\\ufe0e\\ufe0f", ns2 = xo2 + Eo2 + yo2 + So2, yr3 = "['’]", Oo2 = "[" + Ie2 + "]", ts2 = "[" + ns2 + "]", xe2 = "[" + Xi2 + "]", es2 = "\\d+", Ro2 = "[" + Qi2 + "]", rs2 = "[" + Vi + "]", is2 = "[^" + Ie2 + ns2 + es2 + Qi2 + Vi + ki2 + "]", Sr3 = "\\ud83c[\\udffb-\\udfff]", bo2 = "(?:" + xe2 + "|" + Sr3 + ")", ss2 = "[^" + Ie2 + "]", Or3 = "(?:\\ud83c[\\udde6-\\uddff]){2}", Rr3 = "[\\ud800-\\udbff][\\udc00-\\udfff]", bt3 = "[" + ki2 + "]", us3 = "\\u200d", as3 = "(?:" + rs2 + "|" + is2 + ")", To2 = "(?:" + bt3 + "|" + is2 + ")", os2 = "(?:" + yr3 + "(?:d|ll|m|re|s|t|ve))?", fs2 = "(?:" + yr3 + "(?:D|LL|M|RE|S|T|VE))?", cs3 = bo2 + "?", hs3 = "[" + ji + "]?", Lo2 = "(?:" + us3 + "(?:" + [ss2, Or3, Rr3].join("|") + ")" + hs3 + cs3 + ")*", Do2 = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Ho2 = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", ls3 = hs3 + cs3 + Lo2, No2 = "(?:" + [Ro2, Or3, Rr3].join("|") + ")" + ls3, $o2 = "(?:" + [ss2 + xe2 + "?", xe2, Or3, Rr3, Oo2].join("|") + ")", Uo2 = RegExp(yr3, "g"), Wo2 = RegExp(xe2, "g"), br2 = RegExp(Sr3 + "(?=" + Sr3 + ")|" + $o2 + ls3, "g"), Fo2 = RegExp([bt3 + "?" + rs2 + "+" + os2 + "(?=" + [ts2, bt3, "$"].join("|") + ")", To2 + "+" + fs2 + "(?=" + [ts2, bt3 + as3, "$"].join("|") + ")", bt3 + "?" + as3 + "+" + os2, bt3 + "+" + fs2, Ho2, Do2, es2, No2].join("|"), "g"), Mo2 = RegExp("[" + us3 + Ie2 + Xi2 + ji + "]"), qo2 = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Bo2 = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"], Go2 = -1, B3 = {};
    B3[gr3] = B3[vr3] = B3[_r3] = B3[mr3] = B3[wr2] = B3[Pr3] = B3[Ar3] = B3[Cr3] = B3[Ir3] = true, B3[Ot3] = B3[me2] = B3[kt4] = B3[Yt4] = B3[Rt3] = B3[Zt2] = B3[we2] = B3[Pe2] = B3[yn2] = B3[Jt4] = B3[qn3] = B3[Xt4] = B3[Sn2] = B3[Qt3] = B3[Vt4] = false;
    var q2 = {};
    q2[Ot3] = q2[me2] = q2[kt4] = q2[Rt3] = q2[Yt4] = q2[Zt2] = q2[gr3] = q2[vr3] = q2[_r3] = q2[mr3] = q2[wr2] = q2[yn2] = q2[Jt4] = q2[qn3] = q2[Xt4] = q2[Sn2] = q2[Qt3] = q2[Ae3] = q2[Pr3] = q2[Ar3] = q2[Cr3] = q2[Ir3] = true, q2[we2] = q2[Pe2] = q2[Vt4] = false;
    var zo2 = { À: "A", Á: "A", Â: "A", Ã: "A", Ä: "A", Å: "A", à: "a", á: "a", â: "a", ã: "a", ä: "a", å: "a", Ç: "C", ç: "c", Ð: "D", ð: "d", È: "E", É: "E", Ê: "E", Ë: "E", è: "e", é: "e", ê: "e", ë: "e", Ì: "I", Í: "I", Î: "I", Ï: "I", ì: "i", í: "i", î: "i", ï: "i", Ñ: "N", ñ: "n", Ò: "O", Ó: "O", Ô: "O", Õ: "O", Ö: "O", Ø: "O", ò: "o", ó: "o", ô: "o", õ: "o", ö: "o", ø: "o", Ù: "U", Ú: "U", Û: "U", Ü: "U", ù: "u", ú: "u", û: "u", ü: "u", Ý: "Y", ý: "y", ÿ: "y", Æ: "Ae", æ: "ae", Þ: "Th", þ: "th", ß: "ss", Ā: "A", Ă: "A", Ą: "A", ā: "a", ă: "a", ą: "a", Ć: "C", Ĉ: "C", Ċ: "C", Č: "C", ć: "c", ĉ: "c", ċ: "c", č: "c", Ď: "D", Đ: "D", ď: "d", đ: "d", Ē: "E", Ĕ: "E", Ė: "E", Ę: "E", Ě: "E", ē: "e", ĕ: "e", ė: "e", ę: "e", ě: "e", Ĝ: "G", Ğ: "G", Ġ: "G", Ģ: "G", ĝ: "g", ğ: "g", ġ: "g", ģ: "g", Ĥ: "H", Ħ: "H", ĥ: "h", ħ: "h", Ĩ: "I", Ī: "I", Ĭ: "I", Į: "I", İ: "I", ĩ: "i", ī: "i", ĭ: "i", į: "i", ı: "i", Ĵ: "J", ĵ: "j", Ķ: "K", ķ: "k", ĸ: "k", Ĺ: "L", Ļ: "L", Ľ: "L", Ŀ: "L", Ł: "L", ĺ: "l", ļ: "l", ľ: "l", ŀ: "l", ł: "l", Ń: "N", Ņ: "N", Ň: "N", Ŋ: "N", ń: "n", ņ: "n", ň: "n", ŋ: "n", Ō: "O", Ŏ: "O", Ő: "O", ō: "o", ŏ: "o", ő: "o", Ŕ: "R", Ŗ: "R", Ř: "R", ŕ: "r", ŗ: "r", ř: "r", Ś: "S", Ŝ: "S", Ş: "S", Š: "S", ś: "s", ŝ: "s", ş: "s", š: "s", Ţ: "T", Ť: "T", Ŧ: "T", ţ: "t", ť: "t", ŧ: "t", Ũ: "U", Ū: "U", Ŭ: "U", Ů: "U", Ű: "U", Ų: "U", ũ: "u", ū: "u", ŭ: "u", ů: "u", ű: "u", ų: "u", Ŵ: "W", ŵ: "w", Ŷ: "Y", ŷ: "y", Ÿ: "Y", Ź: "Z", Ż: "Z", Ž: "Z", ź: "z", ż: "z", ž: "z", Ĳ: "IJ", ĳ: "ij", Œ: "Oe", œ: "oe", ŉ: "'n", ſ: "s" }, Ko2 = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" }, Yo2 = { "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#39;": "'" }, Zo2 = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\u2028": "u2028", "\u2029": "u2029" }, Jo2 = parseFloat, Xo = parseInt, ps3 = typeof ge3 == "object" && ge3 && ge3.Object === Object && ge3, Qo2 = typeof self == "object" && self && self.Object === Object && self, k5 = ps3 || Qo2 || Function("return this")(), Tr3 = u4 && !u4.nodeType && u4, lt3 = Tr3 && true && C2 && !C2.nodeType && C2, ds3 = lt3 && lt3.exports === Tr3, Lr3 = ds3 && ps3.process, _n2 = function() {
      try {
        var h6 = lt3 && lt3.require && lt3.require("util").types;
        return h6 || Lr3 && Lr3.binding && Lr3.binding("util");
      } catch {
      }
    }(), gs3 = _n2 && _n2.isArrayBuffer, vs2 = _n2 && _n2.isDate, _s2 = _n2 && _n2.isMap, ms2 = _n2 && _n2.isRegExp, ws2 = _n2 && _n2.isSet, Ps2 = _n2 && _n2.isTypedArray;
    function cn(h6, g7, p6) {
      switch (p6.length) {
        case 0:
          return h6.call(g7);
        case 1:
          return h6.call(g7, p6[0]);
        case 2:
          return h6.call(g7, p6[0], p6[1]);
        case 3:
          return h6.call(g7, p6[0], p6[1], p6[2]);
      }
      return h6.apply(g7, p6);
    }
    function Vo2(h6, g7, p6, A2) {
      for (var S5 = -1, U6 = h6 == null ? 0 : h6.length; ++S5 < U6; ) {
        var X3 = h6[S5];
        g7(A2, X3, p6(X3), h6);
      }
      return A2;
    }
    function mn2(h6, g7) {
      for (var p6 = -1, A2 = h6 == null ? 0 : h6.length; ++p6 < A2 && g7(h6[p6], p6, h6) !== false; ) ;
      return h6;
    }
    function ko2(h6, g7) {
      for (var p6 = h6 == null ? 0 : h6.length; p6-- && g7(h6[p6], p6, h6) !== false; ) ;
      return h6;
    }
    function As2(h6, g7) {
      for (var p6 = -1, A2 = h6 == null ? 0 : h6.length; ++p6 < A2; ) if (!g7(h6[p6], p6, h6)) return false;
      return true;
    }
    function jn2(h6, g7) {
      for (var p6 = -1, A2 = h6 == null ? 0 : h6.length, S5 = 0, U6 = []; ++p6 < A2; ) {
        var X3 = h6[p6];
        g7(X3, p6, h6) && (U6[S5++] = X3);
      }
      return U6;
    }
    function Ee2(h6, g7) {
      var p6 = h6 == null ? 0 : h6.length;
      return !!p6 && Tt3(h6, g7, 0) > -1;
    }
    function Dr3(h6, g7, p6) {
      for (var A2 = -1, S5 = h6 == null ? 0 : h6.length; ++A2 < S5; ) if (p6(g7, h6[A2])) return true;
      return false;
    }
    function G5(h6, g7) {
      for (var p6 = -1, A2 = h6 == null ? 0 : h6.length, S5 = Array(A2); ++p6 < A2; ) S5[p6] = g7(h6[p6], p6, h6);
      return S5;
    }
    function nt3(h6, g7) {
      for (var p6 = -1, A2 = g7.length, S5 = h6.length; ++p6 < A2; ) h6[S5 + p6] = g7[p6];
      return h6;
    }
    function Hr2(h6, g7, p6, A2) {
      var S5 = -1, U6 = h6 == null ? 0 : h6.length;
      for (A2 && U6 && (p6 = h6[++S5]); ++S5 < U6; ) p6 = g7(p6, h6[S5], S5, h6);
      return p6;
    }
    function jo2(h6, g7, p6, A2) {
      var S5 = h6 == null ? 0 : h6.length;
      for (A2 && S5 && (p6 = h6[--S5]); S5--; ) p6 = g7(p6, h6[S5], S5, h6);
      return p6;
    }
    function Nr3(h6, g7) {
      for (var p6 = -1, A2 = h6 == null ? 0 : h6.length; ++p6 < A2; ) if (g7(h6[p6], p6, h6)) return true;
      return false;
    }
    var nf = $r3("length");
    function tf(h6) {
      return h6.split("");
    }
    function ef(h6) {
      return h6.match(fo2) || [];
    }
    function Cs2(h6, g7, p6) {
      var A2;
      return p6(h6, function(S5, U6, X3) {
        if (g7(S5, U6, X3)) return A2 = U6, false;
      }), A2;
    }
    function ye2(h6, g7, p6, A2) {
      for (var S5 = h6.length, U6 = p6 + (A2 ? 1 : -1); A2 ? U6-- : ++U6 < S5; ) if (g7(h6[U6], U6, h6)) return U6;
      return -1;
    }
    function Tt3(h6, g7, p6) {
      return g7 === g7 ? gf(h6, g7, p6) : ye2(h6, Is2, p6);
    }
    function rf(h6, g7, p6, A2) {
      for (var S5 = p6 - 1, U6 = h6.length; ++S5 < U6; ) if (A2(h6[S5], g7)) return S5;
      return -1;
    }
    function Is2(h6) {
      return h6 !== h6;
    }
    function xs2(h6, g7) {
      var p6 = h6 == null ? 0 : h6.length;
      return p6 ? Wr2(h6, g7) / p6 : _e3;
    }
    function $r3(h6) {
      return function(g7) {
        return g7 == null ? i3 : g7[h6];
      };
    }
    function Ur3(h6) {
      return function(g7) {
        return h6 == null ? i3 : h6[g7];
      };
    }
    function Es2(h6, g7, p6, A2, S5) {
      return S5(h6, function(U6, X3, M4) {
        p6 = A2 ? (A2 = false, U6) : g7(p6, U6, X3, M4);
      }), p6;
    }
    function sf(h6, g7) {
      var p6 = h6.length;
      for (h6.sort(g7); p6--; ) h6[p6] = h6[p6].value;
      return h6;
    }
    function Wr2(h6, g7) {
      for (var p6, A2 = -1, S5 = h6.length; ++A2 < S5; ) {
        var U6 = g7(h6[A2]);
        U6 !== i3 && (p6 = p6 === i3 ? U6 : p6 + U6);
      }
      return p6;
    }
    function Fr3(h6, g7) {
      for (var p6 = -1, A2 = Array(h6); ++p6 < h6; ) A2[p6] = g7(p6);
      return A2;
    }
    function uf(h6, g7) {
      return G5(g7, function(p6) {
        return [p6, h6[p6]];
      });
    }
    function ys2(h6) {
      return h6 && h6.slice(0, bs2(h6) + 1).replace(Er2, "");
    }
    function hn(h6) {
      return function(g7) {
        return h6(g7);
      };
    }
    function Mr3(h6, g7) {
      return G5(g7, function(p6) {
        return h6[p6];
      });
    }
    function jt4(h6, g7) {
      return h6.has(g7);
    }
    function Ss2(h6, g7) {
      for (var p6 = -1, A2 = h6.length; ++p6 < A2 && Tt3(g7, h6[p6], 0) > -1; ) ;
      return p6;
    }
    function Os2(h6, g7) {
      for (var p6 = h6.length; p6-- && Tt3(g7, h6[p6], 0) > -1; ) ;
      return p6;
    }
    function af(h6, g7) {
      for (var p6 = h6.length, A2 = 0; p6--; ) h6[p6] === g7 && ++A2;
      return A2;
    }
    var of = Ur3(zo2), ff = Ur3(Ko2);
    function cf(h6) {
      return "\\" + Zo2[h6];
    }
    function hf(h6, g7) {
      return h6 == null ? i3 : h6[g7];
    }
    function Lt4(h6) {
      return Mo2.test(h6);
    }
    function lf(h6) {
      return qo2.test(h6);
    }
    function pf(h6) {
      for (var g7, p6 = []; !(g7 = h6.next()).done; ) p6.push(g7.value);
      return p6;
    }
    function qr2(h6) {
      var g7 = -1, p6 = Array(h6.size);
      return h6.forEach(function(A2, S5) {
        p6[++g7] = [S5, A2];
      }), p6;
    }
    function Rs2(h6, g7) {
      return function(p6) {
        return h6(g7(p6));
      };
    }
    function tt2(h6, g7) {
      for (var p6 = -1, A2 = h6.length, S5 = 0, U6 = []; ++p6 < A2; ) {
        var X3 = h6[p6];
        (X3 === g7 || X3 === It4) && (h6[p6] = It4, U6[S5++] = p6);
      }
      return U6;
    }
    function Se3(h6) {
      var g7 = -1, p6 = Array(h6.size);
      return h6.forEach(function(A2) {
        p6[++g7] = A2;
      }), p6;
    }
    function df(h6) {
      var g7 = -1, p6 = Array(h6.size);
      return h6.forEach(function(A2) {
        p6[++g7] = [A2, A2];
      }), p6;
    }
    function gf(h6, g7, p6) {
      for (var A2 = p6 - 1, S5 = h6.length; ++A2 < S5; ) if (h6[A2] === g7) return A2;
      return -1;
    }
    function vf(h6, g7, p6) {
      for (var A2 = p6 + 1; A2--; ) if (h6[A2] === g7) return A2;
      return A2;
    }
    function Dt4(h6) {
      return Lt4(h6) ? mf(h6) : nf(h6);
    }
    function On2(h6) {
      return Lt4(h6) ? wf(h6) : tf(h6);
    }
    function bs2(h6) {
      for (var g7 = h6.length; g7-- && so2.test(h6.charAt(g7)); ) ;
      return g7;
    }
    var _f = Ur3(Yo2);
    function mf(h6) {
      for (var g7 = br2.lastIndex = 0; br2.test(h6); ) ++g7;
      return g7;
    }
    function wf(h6) {
      return h6.match(br2) || [];
    }
    function Pf(h6) {
      return h6.match(Fo2) || [];
    }
    var Af = function h6(g7) {
      g7 = g7 == null ? k5 : Ht4.defaults(k5.Object(), g7, Ht4.pick(k5, Bo2));
      var p6 = g7.Array, A2 = g7.Date, S5 = g7.Error, U6 = g7.Function, X3 = g7.Math, M4 = g7.Object, Br2 = g7.RegExp, Cf = g7.String, wn = g7.TypeError, Oe2 = p6.prototype, If = U6.prototype, Nt3 = M4.prototype, Re3 = g7["__core-js_shared__"], be2 = If.toString, F3 = Nt3.hasOwnProperty, xf = 0, Ts2 = function() {
        var n4 = /[^.]+$/.exec(Re3 && Re3.keys && Re3.keys.IE_PROTO || "");
        return n4 ? "Symbol(src)_1." + n4 : "";
      }(), Te3 = Nt3.toString, Ef = be2.call(M4), yf = k5._, Sf = Br2("^" + be2.call(F3).replace(xr3, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), Le3 = ds3 ? g7.Buffer : i3, et2 = g7.Symbol, De3 = g7.Uint8Array, Ls2 = Le3 ? Le3.allocUnsafe : i3, He3 = Rs2(M4.getPrototypeOf, M4), Ds2 = M4.create, Hs2 = Nt3.propertyIsEnumerable, Ne3 = Oe2.splice, Ns2 = et2 ? et2.isConcatSpreadable : i3, ne2 = et2 ? et2.iterator : i3, pt3 = et2 ? et2.toStringTag : i3, $e3 = function() {
        try {
          var n4 = mt3(M4, "defineProperty");
          return n4({}, "", {}), n4;
        } catch {
        }
      }(), Of = g7.clearTimeout !== k5.clearTimeout && g7.clearTimeout, Rf = A2 && A2.now !== k5.Date.now && A2.now, bf = g7.setTimeout !== k5.setTimeout && g7.setTimeout, Ue3 = X3.ceil, We3 = X3.floor, Gr2 = M4.getOwnPropertySymbols, Tf = Le3 ? Le3.isBuffer : i3, $s2 = g7.isFinite, Lf = Oe2.join, Df = Rs2(M4.keys, M4), Q5 = X3.max, nn = X3.min, Hf = A2.now, Nf = g7.parseInt, Us2 = X3.random, $f = Oe2.reverse, zr3 = mt3(g7, "DataView"), te5 = mt3(g7, "Map"), Kr2 = mt3(g7, "Promise"), $t3 = mt3(g7, "Set"), ee3 = mt3(g7, "WeakMap"), re2 = mt3(M4, "create"), Fe3 = ee3 && new ee3(), Ut3 = {}, Uf = wt4(zr3), Wf = wt4(te5), Ff = wt4(Kr2), Mf = wt4($t3), qf = wt4(ee3), Me3 = et2 ? et2.prototype : i3, ie2 = Me3 ? Me3.valueOf : i3, Ws2 = Me3 ? Me3.toString : i3;
      function a3(n4) {
        if (Y(n4) && !R2(n4) && !(n4 instanceof H3)) {
          if (n4 instanceof Pn2) return n4;
          if (F3.call(n4, "__wrapped__")) return Fu(n4);
        }
        return new Pn2(n4);
      }
      var Wt3 = /* @__PURE__ */ function() {
        function n4() {
        }
        return function(t) {
          if (!K3(t)) return {};
          if (Ds2) return Ds2(t);
          n4.prototype = t;
          var e2 = new n4();
          return n4.prototype = i3, e2;
        };
      }();
      function qe3() {
      }
      function Pn2(n4, t) {
        this.__wrapped__ = n4, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = i3;
      }
      a3.templateSettings = { escape: ja, evaluate: no2, interpolate: Zi2, variable: "", imports: { _: a3 } }, a3.prototype = qe3.prototype, a3.prototype.constructor = a3, Pn2.prototype = Wt3(qe3.prototype), Pn2.prototype.constructor = Pn2;
      function H3(n4) {
        this.__wrapped__ = n4, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = false, this.__iteratees__ = [], this.__takeCount__ = Nn2, this.__views__ = [];
      }
      function Bf() {
        var n4 = new H3(this.__wrapped__);
        return n4.__actions__ = un(this.__actions__), n4.__dir__ = this.__dir__, n4.__filtered__ = this.__filtered__, n4.__iteratees__ = un(this.__iteratees__), n4.__takeCount__ = this.__takeCount__, n4.__views__ = un(this.__views__), n4;
      }
      function Gf() {
        if (this.__filtered__) {
          var n4 = new H3(this);
          n4.__dir__ = -1, n4.__filtered__ = true;
        } else n4 = this.clone(), n4.__dir__ *= -1;
        return n4;
      }
      function zf() {
        var n4 = this.__wrapped__.value(), t = this.__dir__, e2 = R2(n4), r2 = t < 0, s2 = e2 ? n4.length : 0, o3 = eh(0, s2, this.__views__), f5 = o3.start, c5 = o3.end, l4 = c5 - f5, v6 = r2 ? c5 : f5 - 1, _5 = this.__iteratees__, m3 = _5.length, w7 = 0, I2 = nn(l4, this.__takeCount__);
        if (!e2 || !r2 && s2 == l4 && I2 == l4) return ou(n4, this.__actions__);
        var E6 = [];
        n: for (; l4-- && w7 < I2; ) {
          v6 += t;
          for (var T3 = -1, y7 = n4[v6]; ++T3 < m3; ) {
            var D5 = _5[T3], N12 = D5.iteratee, dn2 = D5.type, sn = N12(y7);
            if (dn2 == $a) y7 = sn;
            else if (!sn) {
              if (dn2 == Bi) continue n;
              break n;
            }
          }
          E6[w7++] = y7;
        }
        return E6;
      }
      H3.prototype = Wt3(qe3.prototype), H3.prototype.constructor = H3;
      function dt4(n4) {
        var t = -1, e2 = n4 == null ? 0 : n4.length;
        for (this.clear(); ++t < e2; ) {
          var r2 = n4[t];
          this.set(r2[0], r2[1]);
        }
      }
      function Kf() {
        this.__data__ = re2 ? re2(null) : {}, this.size = 0;
      }
      function Yf(n4) {
        var t = this.has(n4) && delete this.__data__[n4];
        return this.size -= t ? 1 : 0, t;
      }
      function Zf(n4) {
        var t = this.__data__;
        if (re2) {
          var e2 = t[n4];
          return e2 === zt4 ? i3 : e2;
        }
        return F3.call(t, n4) ? t[n4] : i3;
      }
      function Jf(n4) {
        var t = this.__data__;
        return re2 ? t[n4] !== i3 : F3.call(t, n4);
      }
      function Xf(n4, t) {
        var e2 = this.__data__;
        return this.size += this.has(n4) ? 0 : 1, e2[n4] = re2 && t === i3 ? zt4 : t, this;
      }
      dt4.prototype.clear = Kf, dt4.prototype.delete = Yf, dt4.prototype.get = Zf, dt4.prototype.has = Jf, dt4.prototype.set = Xf;
      function Bn2(n4) {
        var t = -1, e2 = n4 == null ? 0 : n4.length;
        for (this.clear(); ++t < e2; ) {
          var r2 = n4[t];
          this.set(r2[0], r2[1]);
        }
      }
      function Qf() {
        this.__data__ = [], this.size = 0;
      }
      function Vf(n4) {
        var t = this.__data__, e2 = Be3(t, n4);
        if (e2 < 0) return false;
        var r2 = t.length - 1;
        return e2 == r2 ? t.pop() : Ne3.call(t, e2, 1), --this.size, true;
      }
      function kf(n4) {
        var t = this.__data__, e2 = Be3(t, n4);
        return e2 < 0 ? i3 : t[e2][1];
      }
      function jf(n4) {
        return Be3(this.__data__, n4) > -1;
      }
      function nc(n4, t) {
        var e2 = this.__data__, r2 = Be3(e2, n4);
        return r2 < 0 ? (++this.size, e2.push([n4, t])) : e2[r2][1] = t, this;
      }
      Bn2.prototype.clear = Qf, Bn2.prototype.delete = Vf, Bn2.prototype.get = kf, Bn2.prototype.has = jf, Bn2.prototype.set = nc;
      function Gn2(n4) {
        var t = -1, e2 = n4 == null ? 0 : n4.length;
        for (this.clear(); ++t < e2; ) {
          var r2 = n4[t];
          this.set(r2[0], r2[1]);
        }
      }
      function tc() {
        this.size = 0, this.__data__ = { hash: new dt4(), map: new (te5 || Bn2)(), string: new dt4() };
      }
      function ec(n4) {
        var t = nr4(this, n4).delete(n4);
        return this.size -= t ? 1 : 0, t;
      }
      function rc(n4) {
        return nr4(this, n4).get(n4);
      }
      function ic(n4) {
        return nr4(this, n4).has(n4);
      }
      function sc(n4, t) {
        var e2 = nr4(this, n4), r2 = e2.size;
        return e2.set(n4, t), this.size += e2.size == r2 ? 0 : 1, this;
      }
      Gn2.prototype.clear = tc, Gn2.prototype.delete = ec, Gn2.prototype.get = rc, Gn2.prototype.has = ic, Gn2.prototype.set = sc;
      function gt4(n4) {
        var t = -1, e2 = n4 == null ? 0 : n4.length;
        for (this.__data__ = new Gn2(); ++t < e2; ) this.add(n4[t]);
      }
      function uc(n4) {
        return this.__data__.set(n4, zt4), this;
      }
      function ac(n4) {
        return this.__data__.has(n4);
      }
      gt4.prototype.add = gt4.prototype.push = uc, gt4.prototype.has = ac;
      function Rn2(n4) {
        var t = this.__data__ = new Bn2(n4);
        this.size = t.size;
      }
      function oc() {
        this.__data__ = new Bn2(), this.size = 0;
      }
      function fc(n4) {
        var t = this.__data__, e2 = t.delete(n4);
        return this.size = t.size, e2;
      }
      function cc(n4) {
        return this.__data__.get(n4);
      }
      function hc(n4) {
        return this.__data__.has(n4);
      }
      function lc(n4, t) {
        var e2 = this.__data__;
        if (e2 instanceof Bn2) {
          var r2 = e2.__data__;
          if (!te5 || r2.length < P5 - 1) return r2.push([n4, t]), this.size = ++e2.size, this;
          e2 = this.__data__ = new Gn2(r2);
        }
        return e2.set(n4, t), this.size = e2.size, this;
      }
      Rn2.prototype.clear = oc, Rn2.prototype.delete = fc, Rn2.prototype.get = cc, Rn2.prototype.has = hc, Rn2.prototype.set = lc;
      function Fs2(n4, t) {
        var e2 = R2(n4), r2 = !e2 && Pt3(n4), s2 = !e2 && !r2 && at3(n4), o3 = !e2 && !r2 && !s2 && Bt4(n4), f5 = e2 || r2 || s2 || o3, c5 = f5 ? Fr3(n4.length, Cf) : [], l4 = c5.length;
        for (var v6 in n4) (t || F3.call(n4, v6)) && !(f5 && (v6 == "length" || s2 && (v6 == "offset" || v6 == "parent") || o3 && (v6 == "buffer" || v6 == "byteLength" || v6 == "byteOffset") || Zn2(v6, l4))) && c5.push(v6);
        return c5;
      }
      function Ms2(n4) {
        var t = n4.length;
        return t ? n4[ei(0, t - 1)] : i3;
      }
      function pc(n4, t) {
        return tr4(un(n4), vt4(t, 0, n4.length));
      }
      function dc(n4) {
        return tr4(un(n4));
      }
      function Yr2(n4, t, e2) {
        (e2 !== i3 && !bn2(n4[t], e2) || e2 === i3 && !(t in n4)) && zn2(n4, t, e2);
      }
      function se(n4, t, e2) {
        var r2 = n4[t];
        (!(F3.call(n4, t) && bn2(r2, e2)) || e2 === i3 && !(t in n4)) && zn2(n4, t, e2);
      }
      function Be3(n4, t) {
        for (var e2 = n4.length; e2--; ) if (bn2(n4[e2][0], t)) return e2;
        return -1;
      }
      function gc(n4, t, e2, r2) {
        return rt4(n4, function(s2, o3, f5) {
          t(r2, s2, e2(s2), f5);
        }), r2;
      }
      function qs2(n4, t) {
        return n4 && Un3(t, V3(t), n4);
      }
      function vc(n4, t) {
        return n4 && Un3(t, on2(t), n4);
      }
      function zn2(n4, t, e2) {
        t == "__proto__" && $e3 ? $e3(n4, t, { configurable: true, enumerable: true, value: e2, writable: true }) : n4[t] = e2;
      }
      function Zr2(n4, t) {
        for (var e2 = -1, r2 = t.length, s2 = p6(r2), o3 = n4 == null; ++e2 < r2; ) s2[e2] = o3 ? i3 : Si(n4, t[e2]);
        return s2;
      }
      function vt4(n4, t, e2) {
        return n4 === n4 && (e2 !== i3 && (n4 = n4 <= e2 ? n4 : e2), t !== i3 && (n4 = n4 >= t ? n4 : t)), n4;
      }
      function An2(n4, t, e2, r2, s2, o3) {
        var f5, c5 = t & Ln3, l4 = t & Fn3, v6 = t & xt4;
        if (e2 && (f5 = s2 ? e2(n4, r2, s2, o3) : e2(n4)), f5 !== i3) return f5;
        if (!K3(n4)) return n4;
        var _5 = R2(n4);
        if (_5) {
          if (f5 = ih(n4), !c5) return un(n4, f5);
        } else {
          var m3 = tn(n4), w7 = m3 == Pe2 || m3 == Gi2;
          if (at3(n4)) return hu(n4, c5);
          if (m3 == qn3 || m3 == Ot3 || w7 && !s2) {
            if (f5 = l4 || w7 ? {} : bu(n4), !c5) return l4 ? Zc(n4, vc(f5, n4)) : Yc(n4, qs2(f5, n4));
          } else {
            if (!q2[m3]) return s2 ? n4 : {};
            f5 = sh(n4, m3, c5);
          }
        }
        o3 || (o3 = new Rn2());
        var I2 = o3.get(n4);
        if (I2) return I2;
        o3.set(n4, f5), sa(n4) ? n4.forEach(function(y7) {
          f5.add(An2(y7, t, e2, y7, n4, o3));
        }) : ra(n4) && n4.forEach(function(y7, D5) {
          f5.set(D5, An2(y7, t, e2, D5, n4, o3));
        });
        var E6 = v6 ? l4 ? pi : li : l4 ? on2 : V3, T3 = _5 ? i3 : E6(n4);
        return mn2(T3 || n4, function(y7, D5) {
          T3 && (D5 = y7, y7 = n4[D5]), se(f5, D5, An2(y7, t, e2, D5, n4, o3));
        }), f5;
      }
      function _c(n4) {
        var t = V3(n4);
        return function(e2) {
          return Bs2(e2, n4, t);
        };
      }
      function Bs2(n4, t, e2) {
        var r2 = e2.length;
        if (n4 == null) return !r2;
        for (n4 = M4(n4); r2--; ) {
          var s2 = e2[r2], o3 = t[s2], f5 = n4[s2];
          if (f5 === i3 && !(s2 in n4) || !o3(f5)) return false;
        }
        return true;
      }
      function Gs2(n4, t, e2) {
        if (typeof n4 != "function") throw new wn($4);
        return le4(function() {
          n4.apply(i3, e2);
        }, t);
      }
      function ue3(n4, t, e2, r2) {
        var s2 = -1, o3 = Ee2, f5 = true, c5 = n4.length, l4 = [], v6 = t.length;
        if (!c5) return l4;
        e2 && (t = G5(t, hn(e2))), r2 ? (o3 = Dr3, f5 = false) : t.length >= P5 && (o3 = jt4, f5 = false, t = new gt4(t));
        n: for (; ++s2 < c5; ) {
          var _5 = n4[s2], m3 = e2 == null ? _5 : e2(_5);
          if (_5 = r2 || _5 !== 0 ? _5 : 0, f5 && m3 === m3) {
            for (var w7 = v6; w7--; ) if (t[w7] === m3) continue n;
            l4.push(_5);
          } else o3(t, m3, r2) || l4.push(_5);
        }
        return l4;
      }
      var rt4 = vu($n2), zs2 = vu(Xr2, true);
      function mc(n4, t) {
        var e2 = true;
        return rt4(n4, function(r2, s2, o3) {
          return e2 = !!t(r2, s2, o3), e2;
        }), e2;
      }
      function Ge3(n4, t, e2) {
        for (var r2 = -1, s2 = n4.length; ++r2 < s2; ) {
          var o3 = n4[r2], f5 = t(o3);
          if (f5 != null && (c5 === i3 ? f5 === f5 && !pn(f5) : e2(f5, c5))) var c5 = f5, l4 = o3;
        }
        return l4;
      }
      function wc(n4, t, e2, r2) {
        var s2 = n4.length;
        for (e2 = b6(e2), e2 < 0 && (e2 = -e2 > s2 ? 0 : s2 + e2), r2 = r2 === i3 || r2 > s2 ? s2 : b6(r2), r2 < 0 && (r2 += s2), r2 = e2 > r2 ? 0 : aa(r2); e2 < r2; ) n4[e2++] = t;
        return n4;
      }
      function Ks2(n4, t) {
        var e2 = [];
        return rt4(n4, function(r2, s2, o3) {
          t(r2, s2, o3) && e2.push(r2);
        }), e2;
      }
      function j6(n4, t, e2, r2, s2) {
        var o3 = -1, f5 = n4.length;
        for (e2 || (e2 = ah), s2 || (s2 = []); ++o3 < f5; ) {
          var c5 = n4[o3];
          t > 0 && e2(c5) ? t > 1 ? j6(c5, t - 1, e2, r2, s2) : nt3(s2, c5) : r2 || (s2[s2.length] = c5);
        }
        return s2;
      }
      var Jr2 = _u(), Ys2 = _u(true);
      function $n2(n4, t) {
        return n4 && Jr2(n4, t, V3);
      }
      function Xr2(n4, t) {
        return n4 && Ys2(n4, t, V3);
      }
      function ze2(n4, t) {
        return jn2(t, function(e2) {
          return Jn3(n4[e2]);
        });
      }
      function _t3(n4, t) {
        t = st2(t, n4);
        for (var e2 = 0, r2 = t.length; n4 != null && e2 < r2; ) n4 = n4[Wn2(t[e2++])];
        return e2 && e2 == r2 ? n4 : i3;
      }
      function Zs2(n4, t, e2) {
        var r2 = t(n4);
        return R2(n4) ? r2 : nt3(r2, e2(n4));
      }
      function en3(n4) {
        return n4 == null ? n4 === i3 ? Ya : za : pt3 && pt3 in M4(n4) ? th(n4) : dh(n4);
      }
      function Qr2(n4, t) {
        return n4 > t;
      }
      function Pc(n4, t) {
        return n4 != null && F3.call(n4, t);
      }
      function Ac(n4, t) {
        return n4 != null && t in M4(n4);
      }
      function Cc(n4, t, e2) {
        return n4 >= nn(t, e2) && n4 < Q5(t, e2);
      }
      function Vr2(n4, t, e2) {
        for (var r2 = e2 ? Dr3 : Ee2, s2 = n4[0].length, o3 = n4.length, f5 = o3, c5 = p6(o3), l4 = 1 / 0, v6 = []; f5--; ) {
          var _5 = n4[f5];
          f5 && t && (_5 = G5(_5, hn(t))), l4 = nn(_5.length, l4), c5[f5] = !e2 && (t || s2 >= 120 && _5.length >= 120) ? new gt4(f5 && _5) : i3;
        }
        _5 = n4[0];
        var m3 = -1, w7 = c5[0];
        n: for (; ++m3 < s2 && v6.length < l4; ) {
          var I2 = _5[m3], E6 = t ? t(I2) : I2;
          if (I2 = e2 || I2 !== 0 ? I2 : 0, !(w7 ? jt4(w7, E6) : r2(v6, E6, e2))) {
            for (f5 = o3; --f5; ) {
              var T3 = c5[f5];
              if (!(T3 ? jt4(T3, E6) : r2(n4[f5], E6, e2))) continue n;
            }
            w7 && w7.push(E6), v6.push(I2);
          }
        }
        return v6;
      }
      function Ic(n4, t, e2, r2) {
        return $n2(n4, function(s2, o3, f5) {
          t(r2, e2(s2), o3, f5);
        }), r2;
      }
      function ae2(n4, t, e2) {
        t = st2(t, n4), n4 = Hu(n4, t);
        var r2 = n4 == null ? n4 : n4[Wn2(In2(t))];
        return r2 == null ? i3 : cn(r2, n4, e2);
      }
      function Js2(n4) {
        return Y(n4) && en3(n4) == Ot3;
      }
      function xc(n4) {
        return Y(n4) && en3(n4) == kt4;
      }
      function Ec(n4) {
        return Y(n4) && en3(n4) == Zt2;
      }
      function oe3(n4, t, e2, r2, s2) {
        return n4 === t ? true : n4 == null || t == null || !Y(n4) && !Y(t) ? n4 !== n4 && t !== t : yc(n4, t, e2, r2, oe3, s2);
      }
      function yc(n4, t, e2, r2, s2, o3) {
        var f5 = R2(n4), c5 = R2(t), l4 = f5 ? me2 : tn(n4), v6 = c5 ? me2 : tn(t);
        l4 = l4 == Ot3 ? qn3 : l4, v6 = v6 == Ot3 ? qn3 : v6;
        var _5 = l4 == qn3, m3 = v6 == qn3, w7 = l4 == v6;
        if (w7 && at3(n4)) {
          if (!at3(t)) return false;
          f5 = true, _5 = false;
        }
        if (w7 && !_5) return o3 || (o3 = new Rn2()), f5 || Bt4(n4) ? Su(n4, t, e2, r2, s2, o3) : jc(n4, t, l4, e2, r2, s2, o3);
        if (!(e2 & Et4)) {
          var I2 = _5 && F3.call(n4, "__wrapped__"), E6 = m3 && F3.call(t, "__wrapped__");
          if (I2 || E6) {
            var T3 = I2 ? n4.value() : n4, y7 = E6 ? t.value() : t;
            return o3 || (o3 = new Rn2()), s2(T3, y7, e2, r2, o3);
          }
        }
        return w7 ? (o3 || (o3 = new Rn2()), nh(n4, t, e2, r2, s2, o3)) : false;
      }
      function Sc(n4) {
        return Y(n4) && tn(n4) == yn2;
      }
      function kr2(n4, t, e2, r2) {
        var s2 = e2.length, o3 = s2, f5 = !r2;
        if (n4 == null) return !o3;
        for (n4 = M4(n4); s2--; ) {
          var c5 = e2[s2];
          if (f5 && c5[2] ? c5[1] !== n4[c5[0]] : !(c5[0] in n4)) return false;
        }
        for (; ++s2 < o3; ) {
          c5 = e2[s2];
          var l4 = c5[0], v6 = n4[l4], _5 = c5[1];
          if (f5 && c5[2]) {
            if (v6 === i3 && !(l4 in n4)) return false;
          } else {
            var m3 = new Rn2();
            if (r2) var w7 = r2(v6, _5, l4, n4, t, m3);
            if (!(w7 === i3 ? oe3(_5, v6, Et4 | ve3, r2, m3) : w7)) return false;
          }
        }
        return true;
      }
      function Xs2(n4) {
        if (!K3(n4) || fh(n4)) return false;
        var t = Jn3(n4) ? Sf : vo2;
        return t.test(wt4(n4));
      }
      function Oc(n4) {
        return Y(n4) && en3(n4) == Xt4;
      }
      function Rc(n4) {
        return Y(n4) && tn(n4) == Sn2;
      }
      function bc(n4) {
        return Y(n4) && ar3(n4.length) && !!B3[en3(n4)];
      }
      function Qs2(n4) {
        return typeof n4 == "function" ? n4 : n4 == null ? fn2 : typeof n4 == "object" ? R2(n4) ? js2(n4[0], n4[1]) : ks2(n4) : ma(n4);
      }
      function jr2(n4) {
        if (!he4(n4)) return Df(n4);
        var t = [];
        for (var e2 in M4(n4)) F3.call(n4, e2) && e2 != "constructor" && t.push(e2);
        return t;
      }
      function Tc(n4) {
        if (!K3(n4)) return ph(n4);
        var t = he4(n4), e2 = [];
        for (var r2 in n4) r2 == "constructor" && (t || !F3.call(n4, r2)) || e2.push(r2);
        return e2;
      }
      function ni(n4, t) {
        return n4 < t;
      }
      function Vs2(n4, t) {
        var e2 = -1, r2 = an(n4) ? p6(n4.length) : [];
        return rt4(n4, function(s2, o3, f5) {
          r2[++e2] = t(s2, o3, f5);
        }), r2;
      }
      function ks2(n4) {
        var t = gi(n4);
        return t.length == 1 && t[0][2] ? Lu(t[0][0], t[0][1]) : function(e2) {
          return e2 === n4 || kr2(e2, n4, t);
        };
      }
      function js2(n4, t) {
        return _i(n4) && Tu(t) ? Lu(Wn2(n4), t) : function(e2) {
          var r2 = Si(e2, n4);
          return r2 === i3 && r2 === t ? Oi(e2, n4) : oe3(t, r2, Et4 | ve3);
        };
      }
      function Ke3(n4, t, e2, r2, s2) {
        n4 !== t && Jr2(t, function(o3, f5) {
          if (s2 || (s2 = new Rn2()), K3(o3)) Lc(n4, t, f5, e2, Ke3, r2, s2);
          else {
            var c5 = r2 ? r2(wi(n4, f5), o3, f5 + "", n4, t, s2) : i3;
            c5 === i3 && (c5 = o3), Yr2(n4, f5, c5);
          }
        }, on2);
      }
      function Lc(n4, t, e2, r2, s2, o3, f5) {
        var c5 = wi(n4, e2), l4 = wi(t, e2), v6 = f5.get(l4);
        if (v6) {
          Yr2(n4, e2, v6);
          return;
        }
        var _5 = o3 ? o3(c5, l4, e2 + "", n4, t, f5) : i3, m3 = _5 === i3;
        if (m3) {
          var w7 = R2(l4), I2 = !w7 && at3(l4), E6 = !w7 && !I2 && Bt4(l4);
          _5 = l4, w7 || I2 || E6 ? R2(c5) ? _5 = c5 : Z2(c5) ? _5 = un(c5) : I2 ? (m3 = false, _5 = hu(l4, true)) : E6 ? (m3 = false, _5 = lu(l4, true)) : _5 = [] : pe4(l4) || Pt3(l4) ? (_5 = c5, Pt3(c5) ? _5 = oa(c5) : (!K3(c5) || Jn3(c5)) && (_5 = bu(l4))) : m3 = false;
        }
        m3 && (f5.set(l4, _5), s2(_5, l4, r2, o3, f5), f5.delete(l4)), Yr2(n4, e2, _5);
      }
      function nu(n4, t) {
        var e2 = n4.length;
        if (e2) return t += t < 0 ? e2 : 0, Zn2(t, e2) ? n4[t] : i3;
      }
      function tu(n4, t, e2) {
        t.length ? t = G5(t, function(o3) {
          return R2(o3) ? function(f5) {
            return _t3(f5, o3.length === 1 ? o3[0] : o3);
          } : o3;
        }) : t = [fn2];
        var r2 = -1;
        t = G5(t, hn(x4()));
        var s2 = Vs2(n4, function(o3, f5, c5) {
          var l4 = G5(t, function(v6) {
            return v6(o3);
          });
          return { criteria: l4, index: ++r2, value: o3 };
        });
        return sf(s2, function(o3, f5) {
          return Kc(o3, f5, e2);
        });
      }
      function Dc(n4, t) {
        return eu(n4, t, function(e2, r2) {
          return Oi(n4, r2);
        });
      }
      function eu(n4, t, e2) {
        for (var r2 = -1, s2 = t.length, o3 = {}; ++r2 < s2; ) {
          var f5 = t[r2], c5 = _t3(n4, f5);
          e2(c5, f5) && fe2(o3, st2(f5, n4), c5);
        }
        return o3;
      }
      function Hc(n4) {
        return function(t) {
          return _t3(t, n4);
        };
      }
      function ti(n4, t, e2, r2) {
        var s2 = r2 ? rf : Tt3, o3 = -1, f5 = t.length, c5 = n4;
        for (n4 === t && (t = un(t)), e2 && (c5 = G5(n4, hn(e2))); ++o3 < f5; ) for (var l4 = 0, v6 = t[o3], _5 = e2 ? e2(v6) : v6; (l4 = s2(c5, _5, l4, r2)) > -1; ) c5 !== n4 && Ne3.call(c5, l4, 1), Ne3.call(n4, l4, 1);
        return n4;
      }
      function ru(n4, t) {
        for (var e2 = n4 ? t.length : 0, r2 = e2 - 1; e2--; ) {
          var s2 = t[e2];
          if (e2 == r2 || s2 !== o3) {
            var o3 = s2;
            Zn2(s2) ? Ne3.call(n4, s2, 1) : si(n4, s2);
          }
        }
        return n4;
      }
      function ei(n4, t) {
        return n4 + We3(Us2() * (t - n4 + 1));
      }
      function Nc(n4, t, e2, r2) {
        for (var s2 = -1, o3 = Q5(Ue3((t - n4) / (e2 || 1)), 0), f5 = p6(o3); o3--; ) f5[r2 ? o3 : ++s2] = n4, n4 += e2;
        return f5;
      }
      function ri(n4, t) {
        var e2 = "";
        if (!n4 || t < 1 || t > kn3) return e2;
        do
          t % 2 && (e2 += n4), t = We3(t / 2), t && (n4 += n4);
        while (t);
        return e2;
      }
      function L4(n4, t) {
        return Pi(Du(n4, t, fn2), n4 + "");
      }
      function $c(n4) {
        return Ms2(Gt4(n4));
      }
      function Uc(n4, t) {
        var e2 = Gt4(n4);
        return tr4(e2, vt4(t, 0, e2.length));
      }
      function fe2(n4, t, e2, r2) {
        if (!K3(n4)) return n4;
        t = st2(t, n4);
        for (var s2 = -1, o3 = t.length, f5 = o3 - 1, c5 = n4; c5 != null && ++s2 < o3; ) {
          var l4 = Wn2(t[s2]), v6 = e2;
          if (l4 === "__proto__" || l4 === "constructor" || l4 === "prototype") return n4;
          if (s2 != f5) {
            var _5 = c5[l4];
            v6 = r2 ? r2(_5, l4, c5) : i3, v6 === i3 && (v6 = K3(_5) ? _5 : Zn2(t[s2 + 1]) ? [] : {});
          }
          se(c5, l4, v6), c5 = c5[l4];
        }
        return n4;
      }
      var iu = Fe3 ? function(n4, t) {
        return Fe3.set(n4, t), n4;
      } : fn2, Wc = $e3 ? function(n4, t) {
        return $e3(n4, "toString", { configurable: true, enumerable: false, value: bi(t), writable: true });
      } : fn2;
      function Fc(n4) {
        return tr4(Gt4(n4));
      }
      function Cn2(n4, t, e2) {
        var r2 = -1, s2 = n4.length;
        t < 0 && (t = -t > s2 ? 0 : s2 + t), e2 = e2 > s2 ? s2 : e2, e2 < 0 && (e2 += s2), s2 = t > e2 ? 0 : e2 - t >>> 0, t >>>= 0;
        for (var o3 = p6(s2); ++r2 < s2; ) o3[r2] = n4[r2 + t];
        return o3;
      }
      function Mc(n4, t) {
        var e2;
        return rt4(n4, function(r2, s2, o3) {
          return e2 = t(r2, s2, o3), !e2;
        }), !!e2;
      }
      function Ye3(n4, t, e2) {
        var r2 = 0, s2 = n4 == null ? r2 : n4.length;
        if (typeof t == "number" && t === t && s2 <= Ma) {
          for (; r2 < s2; ) {
            var o3 = r2 + s2 >>> 1, f5 = n4[o3];
            f5 !== null && !pn(f5) && (e2 ? f5 <= t : f5 < t) ? r2 = o3 + 1 : s2 = o3;
          }
          return s2;
        }
        return ii(n4, t, fn2, e2);
      }
      function ii(n4, t, e2, r2) {
        var s2 = 0, o3 = n4 == null ? 0 : n4.length;
        if (o3 === 0) return 0;
        t = e2(t);
        for (var f5 = t !== t, c5 = t === null, l4 = pn(t), v6 = t === i3; s2 < o3; ) {
          var _5 = We3((s2 + o3) / 2), m3 = e2(n4[_5]), w7 = m3 !== i3, I2 = m3 === null, E6 = m3 === m3, T3 = pn(m3);
          if (f5) var y7 = r2 || E6;
          else v6 ? y7 = E6 && (r2 || w7) : c5 ? y7 = E6 && w7 && (r2 || !I2) : l4 ? y7 = E6 && w7 && !I2 && (r2 || !T3) : I2 || T3 ? y7 = false : y7 = r2 ? m3 <= t : m3 < t;
          y7 ? s2 = _5 + 1 : o3 = _5;
        }
        return nn(o3, Fa);
      }
      function su(n4, t) {
        for (var e2 = -1, r2 = n4.length, s2 = 0, o3 = []; ++e2 < r2; ) {
          var f5 = n4[e2], c5 = t ? t(f5) : f5;
          if (!e2 || !bn2(c5, l4)) {
            var l4 = c5;
            o3[s2++] = f5 === 0 ? 0 : f5;
          }
        }
        return o3;
      }
      function uu(n4) {
        return typeof n4 == "number" ? n4 : pn(n4) ? _e3 : +n4;
      }
      function ln2(n4) {
        if (typeof n4 == "string") return n4;
        if (R2(n4)) return G5(n4, ln2) + "";
        if (pn(n4)) return Ws2 ? Ws2.call(n4) : "";
        var t = n4 + "";
        return t == "0" && 1 / n4 == -ht4 ? "-0" : t;
      }
      function it3(n4, t, e2) {
        var r2 = -1, s2 = Ee2, o3 = n4.length, f5 = true, c5 = [], l4 = c5;
        if (e2) f5 = false, s2 = Dr3;
        else if (o3 >= P5) {
          var v6 = t ? null : Vc(n4);
          if (v6) return Se3(v6);
          f5 = false, s2 = jt4, l4 = new gt4();
        } else l4 = t ? [] : c5;
        n: for (; ++r2 < o3; ) {
          var _5 = n4[r2], m3 = t ? t(_5) : _5;
          if (_5 = e2 || _5 !== 0 ? _5 : 0, f5 && m3 === m3) {
            for (var w7 = l4.length; w7--; ) if (l4[w7] === m3) continue n;
            t && l4.push(m3), c5.push(_5);
          } else s2(l4, m3, e2) || (l4 !== c5 && l4.push(m3), c5.push(_5));
        }
        return c5;
      }
      function si(n4, t) {
        return t = st2(t, n4), n4 = Hu(n4, t), n4 == null || delete n4[Wn2(In2(t))];
      }
      function au(n4, t, e2, r2) {
        return fe2(n4, t, e2(_t3(n4, t)), r2);
      }
      function Ze3(n4, t, e2, r2) {
        for (var s2 = n4.length, o3 = r2 ? s2 : -1; (r2 ? o3-- : ++o3 < s2) && t(n4[o3], o3, n4); ) ;
        return e2 ? Cn2(n4, r2 ? 0 : o3, r2 ? o3 + 1 : s2) : Cn2(n4, r2 ? o3 + 1 : 0, r2 ? s2 : o3);
      }
      function ou(n4, t) {
        var e2 = n4;
        return e2 instanceof H3 && (e2 = e2.value()), Hr2(t, function(r2, s2) {
          return s2.func.apply(s2.thisArg, nt3([r2], s2.args));
        }, e2);
      }
      function ui(n4, t, e2) {
        var r2 = n4.length;
        if (r2 < 2) return r2 ? it3(n4[0]) : [];
        for (var s2 = -1, o3 = p6(r2); ++s2 < r2; ) for (var f5 = n4[s2], c5 = -1; ++c5 < r2; ) c5 != s2 && (o3[s2] = ue3(o3[s2] || f5, n4[c5], t, e2));
        return it3(j6(o3, 1), t, e2);
      }
      function fu(n4, t, e2) {
        for (var r2 = -1, s2 = n4.length, o3 = t.length, f5 = {}; ++r2 < s2; ) {
          var c5 = r2 < o3 ? t[r2] : i3;
          e2(f5, n4[r2], c5);
        }
        return f5;
      }
      function ai(n4) {
        return Z2(n4) ? n4 : [];
      }
      function oi(n4) {
        return typeof n4 == "function" ? n4 : fn2;
      }
      function st2(n4, t) {
        return R2(n4) ? n4 : _i(n4, t) ? [n4] : Wu(W4(n4));
      }
      var qc = L4;
      function ut4(n4, t, e2) {
        var r2 = n4.length;
        return e2 = e2 === i3 ? r2 : e2, !t && e2 >= r2 ? n4 : Cn2(n4, t, e2);
      }
      var cu = Of || function(n4) {
        return k5.clearTimeout(n4);
      };
      function hu(n4, t) {
        if (t) return n4.slice();
        var e2 = n4.length, r2 = Ls2 ? Ls2(e2) : new n4.constructor(e2);
        return n4.copy(r2), r2;
      }
      function fi(n4) {
        var t = new n4.constructor(n4.byteLength);
        return new De3(t).set(new De3(n4)), t;
      }
      function Bc(n4, t) {
        var e2 = t ? fi(n4.buffer) : n4.buffer;
        return new n4.constructor(e2, n4.byteOffset, n4.byteLength);
      }
      function Gc(n4) {
        var t = new n4.constructor(n4.source, Ji2.exec(n4));
        return t.lastIndex = n4.lastIndex, t;
      }
      function zc(n4) {
        return ie2 ? M4(ie2.call(n4)) : {};
      }
      function lu(n4, t) {
        var e2 = t ? fi(n4.buffer) : n4.buffer;
        return new n4.constructor(e2, n4.byteOffset, n4.length);
      }
      function pu(n4, t) {
        if (n4 !== t) {
          var e2 = n4 !== i3, r2 = n4 === null, s2 = n4 === n4, o3 = pn(n4), f5 = t !== i3, c5 = t === null, l4 = t === t, v6 = pn(t);
          if (!c5 && !v6 && !o3 && n4 > t || o3 && f5 && l4 && !c5 && !v6 || r2 && f5 && l4 || !e2 && l4 || !s2) return 1;
          if (!r2 && !o3 && !v6 && n4 < t || v6 && e2 && s2 && !r2 && !o3 || c5 && e2 && s2 || !f5 && s2 || !l4) return -1;
        }
        return 0;
      }
      function Kc(n4, t, e2) {
        for (var r2 = -1, s2 = n4.criteria, o3 = t.criteria, f5 = s2.length, c5 = e2.length; ++r2 < f5; ) {
          var l4 = pu(s2[r2], o3[r2]);
          if (l4) {
            if (r2 >= c5) return l4;
            var v6 = e2[r2];
            return l4 * (v6 == "desc" ? -1 : 1);
          }
        }
        return n4.index - t.index;
      }
      function du(n4, t, e2, r2) {
        for (var s2 = -1, o3 = n4.length, f5 = e2.length, c5 = -1, l4 = t.length, v6 = Q5(o3 - f5, 0), _5 = p6(l4 + v6), m3 = !r2; ++c5 < l4; ) _5[c5] = t[c5];
        for (; ++s2 < f5; ) (m3 || s2 < o3) && (_5[e2[s2]] = n4[s2]);
        for (; v6--; ) _5[c5++] = n4[s2++];
        return _5;
      }
      function gu(n4, t, e2, r2) {
        for (var s2 = -1, o3 = n4.length, f5 = -1, c5 = e2.length, l4 = -1, v6 = t.length, _5 = Q5(o3 - c5, 0), m3 = p6(_5 + v6), w7 = !r2; ++s2 < _5; ) m3[s2] = n4[s2];
        for (var I2 = s2; ++l4 < v6; ) m3[I2 + l4] = t[l4];
        for (; ++f5 < c5; ) (w7 || s2 < o3) && (m3[I2 + e2[f5]] = n4[s2++]);
        return m3;
      }
      function un(n4, t) {
        var e2 = -1, r2 = n4.length;
        for (t || (t = p6(r2)); ++e2 < r2; ) t[e2] = n4[e2];
        return t;
      }
      function Un3(n4, t, e2, r2) {
        var s2 = !e2;
        e2 || (e2 = {});
        for (var o3 = -1, f5 = t.length; ++o3 < f5; ) {
          var c5 = t[o3], l4 = r2 ? r2(e2[c5], n4[c5], c5, e2, n4) : i3;
          l4 === i3 && (l4 = n4[c5]), s2 ? zn2(e2, c5, l4) : se(e2, c5, l4);
        }
        return e2;
      }
      function Yc(n4, t) {
        return Un3(n4, vi(n4), t);
      }
      function Zc(n4, t) {
        return Un3(n4, Ou(n4), t);
      }
      function Je4(n4, t) {
        return function(e2, r2) {
          var s2 = R2(e2) ? Vo2 : gc, o3 = t ? t() : {};
          return s2(e2, n4, x4(r2, 2), o3);
        };
      }
      function Ft4(n4) {
        return L4(function(t, e2) {
          var r2 = -1, s2 = e2.length, o3 = s2 > 1 ? e2[s2 - 1] : i3, f5 = s2 > 2 ? e2[2] : i3;
          for (o3 = n4.length > 3 && typeof o3 == "function" ? (s2--, o3) : i3, f5 && rn2(e2[0], e2[1], f5) && (o3 = s2 < 3 ? i3 : o3, s2 = 1), t = M4(t); ++r2 < s2; ) {
            var c5 = e2[r2];
            c5 && n4(t, c5, r2, o3);
          }
          return t;
        });
      }
      function vu(n4, t) {
        return function(e2, r2) {
          if (e2 == null) return e2;
          if (!an(e2)) return n4(e2, r2);
          for (var s2 = e2.length, o3 = t ? s2 : -1, f5 = M4(e2); (t ? o3-- : ++o3 < s2) && r2(f5[o3], o3, f5) !== false; ) ;
          return e2;
        };
      }
      function _u(n4) {
        return function(t, e2, r2) {
          for (var s2 = -1, o3 = M4(t), f5 = r2(t), c5 = f5.length; c5--; ) {
            var l4 = f5[n4 ? c5 : ++s2];
            if (e2(o3[l4], l4, o3) === false) break;
          }
          return t;
        };
      }
      function Jc(n4, t, e2) {
        var r2 = t & vn2, s2 = ce3(n4);
        function o3() {
          var f5 = this && this !== k5 && this instanceof o3 ? s2 : n4;
          return f5.apply(r2 ? e2 : this, arguments);
        }
        return o3;
      }
      function mu(n4) {
        return function(t) {
          t = W4(t);
          var e2 = Lt4(t) ? On2(t) : i3, r2 = e2 ? e2[0] : t.charAt(0), s2 = e2 ? ut4(e2, 1).join("") : t.slice(1);
          return r2[n4]() + s2;
        };
      }
      function Mt4(n4) {
        return function(t) {
          return Hr2(va(ga(t).replace(Uo2, "")), n4, "");
        };
      }
      function ce3(n4) {
        return function() {
          var t = arguments;
          switch (t.length) {
            case 0:
              return new n4();
            case 1:
              return new n4(t[0]);
            case 2:
              return new n4(t[0], t[1]);
            case 3:
              return new n4(t[0], t[1], t[2]);
            case 4:
              return new n4(t[0], t[1], t[2], t[3]);
            case 5:
              return new n4(t[0], t[1], t[2], t[3], t[4]);
            case 6:
              return new n4(t[0], t[1], t[2], t[3], t[4], t[5]);
            case 7:
              return new n4(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);
          }
          var e2 = Wt3(n4.prototype), r2 = n4.apply(e2, t);
          return K3(r2) ? r2 : e2;
        };
      }
      function Xc(n4, t, e2) {
        var r2 = ce3(n4);
        function s2() {
          for (var o3 = arguments.length, f5 = p6(o3), c5 = o3, l4 = qt4(s2); c5--; ) f5[c5] = arguments[c5];
          var v6 = o3 < 3 && f5[0] !== l4 && f5[o3 - 1] !== l4 ? [] : tt2(f5, l4);
          if (o3 -= v6.length, o3 < e2) return Iu(n4, t, Xe4, s2.placeholder, i3, f5, v6, i3, i3, e2 - o3);
          var _5 = this && this !== k5 && this instanceof s2 ? r2 : n4;
          return cn(_5, this, f5);
        }
        return s2;
      }
      function wu(n4) {
        return function(t, e2, r2) {
          var s2 = M4(t);
          if (!an(t)) {
            var o3 = x4(e2, 3);
            t = V3(t), e2 = function(c5) {
              return o3(s2[c5], c5, s2);
            };
          }
          var f5 = n4(t, e2, r2);
          return f5 > -1 ? s2[o3 ? t[f5] : f5] : i3;
        };
      }
      function Pu(n4) {
        return Yn2(function(t) {
          var e2 = t.length, r2 = e2, s2 = Pn2.prototype.thru;
          for (n4 && t.reverse(); r2--; ) {
            var o3 = t[r2];
            if (typeof o3 != "function") throw new wn($4);
            if (s2 && !f5 && je4(o3) == "wrapper") var f5 = new Pn2([], true);
          }
          for (r2 = f5 ? r2 : e2; ++r2 < e2; ) {
            o3 = t[r2];
            var c5 = je4(o3), l4 = c5 == "wrapper" ? di(o3) : i3;
            l4 && mi(l4[0]) && l4[1] == (Mn3 | Dn | Hn3 | Kt4) && !l4[4].length && l4[9] == 1 ? f5 = f5[je4(l4[0])].apply(f5, l4[3]) : f5 = o3.length == 1 && mi(o3) ? f5[c5]() : f5.thru(o3);
          }
          return function() {
            var v6 = arguments, _5 = v6[0];
            if (f5 && v6.length == 1 && R2(_5)) return f5.plant(_5).value();
            for (var m3 = 0, w7 = e2 ? t[m3].apply(this, v6) : _5; ++m3 < e2; ) w7 = t[m3].call(this, w7);
            return w7;
          };
        });
      }
      function Xe4(n4, t, e2, r2, s2, o3, f5, c5, l4, v6) {
        var _5 = t & Mn3, m3 = t & vn2, w7 = t & ct3, I2 = t & (Dn | yt4), E6 = t & dr3, T3 = w7 ? i3 : ce3(n4);
        function y7() {
          for (var D5 = arguments.length, N12 = p6(D5), dn2 = D5; dn2--; ) N12[dn2] = arguments[dn2];
          if (I2) var sn = qt4(y7), gn2 = af(N12, sn);
          if (r2 && (N12 = du(N12, r2, s2, I2)), o3 && (N12 = gu(N12, o3, f5, I2)), D5 -= gn2, I2 && D5 < v6) {
            var J2 = tt2(N12, sn);
            return Iu(n4, t, Xe4, y7.placeholder, e2, N12, J2, c5, l4, v6 - D5);
          }
          var Tn2 = m3 ? e2 : this, Qn3 = w7 ? Tn2[n4] : n4;
          return D5 = N12.length, c5 ? N12 = gh(N12, c5) : E6 && D5 > 1 && N12.reverse(), _5 && l4 < D5 && (N12.length = l4), this && this !== k5 && this instanceof y7 && (Qn3 = T3 || ce3(Qn3)), Qn3.apply(Tn2, N12);
        }
        return y7;
      }
      function Au(n4, t) {
        return function(e2, r2) {
          return Ic(e2, n4, t(r2), {});
        };
      }
      function Qe3(n4, t) {
        return function(e2, r2) {
          var s2;
          if (e2 === i3 && r2 === i3) return t;
          if (e2 !== i3 && (s2 = e2), r2 !== i3) {
            if (s2 === i3) return r2;
            typeof e2 == "string" || typeof r2 == "string" ? (e2 = ln2(e2), r2 = ln2(r2)) : (e2 = uu(e2), r2 = uu(r2)), s2 = n4(e2, r2);
          }
          return s2;
        };
      }
      function ci(n4) {
        return Yn2(function(t) {
          return t = G5(t, hn(x4())), L4(function(e2) {
            var r2 = this;
            return n4(t, function(s2) {
              return cn(s2, r2, e2);
            });
          });
        });
      }
      function Ve3(n4, t) {
        t = t === i3 ? " " : ln2(t);
        var e2 = t.length;
        if (e2 < 2) return e2 ? ri(t, n4) : t;
        var r2 = ri(t, Ue3(n4 / Dt4(t)));
        return Lt4(t) ? ut4(On2(r2), 0, n4).join("") : r2.slice(0, n4);
      }
      function Qc(n4, t, e2, r2) {
        var s2 = t & vn2, o3 = ce3(n4);
        function f5() {
          for (var c5 = -1, l4 = arguments.length, v6 = -1, _5 = r2.length, m3 = p6(_5 + l4), w7 = this && this !== k5 && this instanceof f5 ? o3 : n4; ++v6 < _5; ) m3[v6] = r2[v6];
          for (; l4--; ) m3[v6++] = arguments[++c5];
          return cn(w7, s2 ? e2 : this, m3);
        }
        return f5;
      }
      function Cu(n4) {
        return function(t, e2, r2) {
          return r2 && typeof r2 != "number" && rn2(t, e2, r2) && (e2 = r2 = i3), t = Xn3(t), e2 === i3 ? (e2 = t, t = 0) : e2 = Xn3(e2), r2 = r2 === i3 ? t < e2 ? 1 : -1 : Xn3(r2), Nc(t, e2, r2, n4);
        };
      }
      function ke3(n4) {
        return function(t, e2) {
          return typeof t == "string" && typeof e2 == "string" || (t = xn3(t), e2 = xn3(e2)), n4(t, e2);
        };
      }
      function Iu(n4, t, e2, r2, s2, o3, f5, c5, l4, v6) {
        var _5 = t & Dn, m3 = _5 ? f5 : i3, w7 = _5 ? i3 : f5, I2 = _5 ? o3 : i3, E6 = _5 ? i3 : o3;
        t |= _5 ? Hn3 : St3, t &= ~(_5 ? St3 : Hn3), t & qi || (t &= ~(vn2 | ct3));
        var T3 = [n4, t, s2, I2, m3, E6, w7, c5, l4, v6], y7 = e2.apply(i3, T3);
        return mi(n4) && Nu(y7, T3), y7.placeholder = r2, $u(y7, n4, t);
      }
      function hi(n4) {
        var t = X3[n4];
        return function(e2, r2) {
          if (e2 = xn3(e2), r2 = r2 == null ? 0 : nn(b6(r2), 292), r2 && $s2(e2)) {
            var s2 = (W4(e2) + "e").split("e"), o3 = t(s2[0] + "e" + (+s2[1] + r2));
            return s2 = (W4(o3) + "e").split("e"), +(s2[0] + "e" + (+s2[1] - r2));
          }
          return t(e2);
        };
      }
      var Vc = $t3 && 1 / Se3(new $t3([, -0]))[1] == ht4 ? function(n4) {
        return new $t3(n4);
      } : Di;
      function xu(n4) {
        return function(t) {
          var e2 = tn(t);
          return e2 == yn2 ? qr2(t) : e2 == Sn2 ? df(t) : uf(t, n4(t));
        };
      }
      function Kn3(n4, t, e2, r2, s2, o3, f5, c5) {
        var l4 = t & ct3;
        if (!l4 && typeof n4 != "function") throw new wn($4);
        var v6 = r2 ? r2.length : 0;
        if (v6 || (t &= ~(Hn3 | St3), r2 = s2 = i3), f5 = f5 === i3 ? f5 : Q5(b6(f5), 0), c5 = c5 === i3 ? c5 : b6(c5), v6 -= s2 ? s2.length : 0, t & St3) {
          var _5 = r2, m3 = s2;
          r2 = s2 = i3;
        }
        var w7 = l4 ? i3 : di(n4), I2 = [n4, t, e2, r2, s2, _5, m3, o3, f5, c5];
        if (w7 && lh(I2, w7), n4 = I2[0], t = I2[1], e2 = I2[2], r2 = I2[3], s2 = I2[4], c5 = I2[9] = I2[9] === i3 ? l4 ? 0 : n4.length : Q5(I2[9] - v6, 0), !c5 && t & (Dn | yt4) && (t &= ~(Dn | yt4)), !t || t == vn2) var E6 = Jc(n4, t, e2);
        else t == Dn || t == yt4 ? E6 = Xc(n4, t, c5) : (t == Hn3 || t == (vn2 | Hn3)) && !s2.length ? E6 = Qc(n4, t, e2, r2) : E6 = Xe4.apply(i3, I2);
        var T3 = w7 ? iu : Nu;
        return $u(T3(E6, I2), n4, t);
      }
      function Eu(n4, t, e2, r2) {
        return n4 === i3 || bn2(n4, Nt3[e2]) && !F3.call(r2, e2) ? t : n4;
      }
      function yu(n4, t, e2, r2, s2, o3) {
        return K3(n4) && K3(t) && (o3.set(t, n4), Ke3(n4, t, i3, yu, o3), o3.delete(t)), n4;
      }
      function kc(n4) {
        return pe4(n4) ? i3 : n4;
      }
      function Su(n4, t, e2, r2, s2, o3) {
        var f5 = e2 & Et4, c5 = n4.length, l4 = t.length;
        if (c5 != l4 && !(f5 && l4 > c5)) return false;
        var v6 = o3.get(n4), _5 = o3.get(t);
        if (v6 && _5) return v6 == t && _5 == n4;
        var m3 = -1, w7 = true, I2 = e2 & ve3 ? new gt4() : i3;
        for (o3.set(n4, t), o3.set(t, n4); ++m3 < c5; ) {
          var E6 = n4[m3], T3 = t[m3];
          if (r2) var y7 = f5 ? r2(T3, E6, m3, t, n4, o3) : r2(E6, T3, m3, n4, t, o3);
          if (y7 !== i3) {
            if (y7) continue;
            w7 = false;
            break;
          }
          if (I2) {
            if (!Nr3(t, function(D5, N12) {
              if (!jt4(I2, N12) && (E6 === D5 || s2(E6, D5, e2, r2, o3))) return I2.push(N12);
            })) {
              w7 = false;
              break;
            }
          } else if (!(E6 === T3 || s2(E6, T3, e2, r2, o3))) {
            w7 = false;
            break;
          }
        }
        return o3.delete(n4), o3.delete(t), w7;
      }
      function jc(n4, t, e2, r2, s2, o3, f5) {
        switch (e2) {
          case Rt3:
            if (n4.byteLength != t.byteLength || n4.byteOffset != t.byteOffset) return false;
            n4 = n4.buffer, t = t.buffer;
          case kt4:
            return !(n4.byteLength != t.byteLength || !o3(new De3(n4), new De3(t)));
          case Yt4:
          case Zt2:
          case Jt4:
            return bn2(+n4, +t);
          case we2:
            return n4.name == t.name && n4.message == t.message;
          case Xt4:
          case Qt3:
            return n4 == t + "";
          case yn2:
            var c5 = qr2;
          case Sn2:
            var l4 = r2 & Et4;
            if (c5 || (c5 = Se3), n4.size != t.size && !l4) return false;
            var v6 = f5.get(n4);
            if (v6) return v6 == t;
            r2 |= ve3, f5.set(n4, t);
            var _5 = Su(c5(n4), c5(t), r2, s2, o3, f5);
            return f5.delete(n4), _5;
          case Ae3:
            if (ie2) return ie2.call(n4) == ie2.call(t);
        }
        return false;
      }
      function nh(n4, t, e2, r2, s2, o3) {
        var f5 = e2 & Et4, c5 = li(n4), l4 = c5.length, v6 = li(t), _5 = v6.length;
        if (l4 != _5 && !f5) return false;
        for (var m3 = l4; m3--; ) {
          var w7 = c5[m3];
          if (!(f5 ? w7 in t : F3.call(t, w7))) return false;
        }
        var I2 = o3.get(n4), E6 = o3.get(t);
        if (I2 && E6) return I2 == t && E6 == n4;
        var T3 = true;
        o3.set(n4, t), o3.set(t, n4);
        for (var y7 = f5; ++m3 < l4; ) {
          w7 = c5[m3];
          var D5 = n4[w7], N12 = t[w7];
          if (r2) var dn2 = f5 ? r2(N12, D5, w7, t, n4, o3) : r2(D5, N12, w7, n4, t, o3);
          if (!(dn2 === i3 ? D5 === N12 || s2(D5, N12, e2, r2, o3) : dn2)) {
            T3 = false;
            break;
          }
          y7 || (y7 = w7 == "constructor");
        }
        if (T3 && !y7) {
          var sn = n4.constructor, gn2 = t.constructor;
          sn != gn2 && "constructor" in n4 && "constructor" in t && !(typeof sn == "function" && sn instanceof sn && typeof gn2 == "function" && gn2 instanceof gn2) && (T3 = false);
        }
        return o3.delete(n4), o3.delete(t), T3;
      }
      function Yn2(n4) {
        return Pi(Du(n4, i3, Bu), n4 + "");
      }
      function li(n4) {
        return Zs2(n4, V3, vi);
      }
      function pi(n4) {
        return Zs2(n4, on2, Ou);
      }
      var di = Fe3 ? function(n4) {
        return Fe3.get(n4);
      } : Di;
      function je4(n4) {
        for (var t = n4.name + "", e2 = Ut3[t], r2 = F3.call(Ut3, t) ? e2.length : 0; r2--; ) {
          var s2 = e2[r2], o3 = s2.func;
          if (o3 == null || o3 == n4) return s2.name;
        }
        return t;
      }
      function qt4(n4) {
        var t = F3.call(a3, "placeholder") ? a3 : n4;
        return t.placeholder;
      }
      function x4() {
        var n4 = a3.iteratee || Ti;
        return n4 = n4 === Ti ? Qs2 : n4, arguments.length ? n4(arguments[0], arguments[1]) : n4;
      }
      function nr4(n4, t) {
        var e2 = n4.__data__;
        return oh(t) ? e2[typeof t == "string" ? "string" : "hash"] : e2.map;
      }
      function gi(n4) {
        for (var t = V3(n4), e2 = t.length; e2--; ) {
          var r2 = t[e2], s2 = n4[r2];
          t[e2] = [r2, s2, Tu(s2)];
        }
        return t;
      }
      function mt3(n4, t) {
        var e2 = hf(n4, t);
        return Xs2(e2) ? e2 : i3;
      }
      function th(n4) {
        var t = F3.call(n4, pt3), e2 = n4[pt3];
        try {
          n4[pt3] = i3;
          var r2 = true;
        } catch {
        }
        var s2 = Te3.call(n4);
        return r2 && (t ? n4[pt3] = e2 : delete n4[pt3]), s2;
      }
      var vi = Gr2 ? function(n4) {
        return n4 == null ? [] : (n4 = M4(n4), jn2(Gr2(n4), function(t) {
          return Hs2.call(n4, t);
        }));
      } : Hi2, Ou = Gr2 ? function(n4) {
        for (var t = []; n4; ) nt3(t, vi(n4)), n4 = He3(n4);
        return t;
      } : Hi2, tn = en3;
      (zr3 && tn(new zr3(new ArrayBuffer(1))) != Rt3 || te5 && tn(new te5()) != yn2 || Kr2 && tn(Kr2.resolve()) != zi || $t3 && tn(new $t3()) != Sn2 || ee3 && tn(new ee3()) != Vt4) && (tn = function(n4) {
        var t = en3(n4), e2 = t == qn3 ? n4.constructor : i3, r2 = e2 ? wt4(e2) : "";
        if (r2) switch (r2) {
          case Uf:
            return Rt3;
          case Wf:
            return yn2;
          case Ff:
            return zi;
          case Mf:
            return Sn2;
          case qf:
            return Vt4;
        }
        return t;
      });
      function eh(n4, t, e2) {
        for (var r2 = -1, s2 = e2.length; ++r2 < s2; ) {
          var o3 = e2[r2], f5 = o3.size;
          switch (o3.type) {
            case "drop":
              n4 += f5;
              break;
            case "dropRight":
              t -= f5;
              break;
            case "take":
              t = nn(t, n4 + f5);
              break;
            case "takeRight":
              n4 = Q5(n4, t - f5);
              break;
          }
        }
        return { start: n4, end: t };
      }
      function rh(n4) {
        var t = n4.match(ao2);
        return t ? t[1].split(oo2) : [];
      }
      function Ru(n4, t, e2) {
        t = st2(t, n4);
        for (var r2 = -1, s2 = t.length, o3 = false; ++r2 < s2; ) {
          var f5 = Wn2(t[r2]);
          if (!(o3 = n4 != null && e2(n4, f5))) break;
          n4 = n4[f5];
        }
        return o3 || ++r2 != s2 ? o3 : (s2 = n4 == null ? 0 : n4.length, !!s2 && ar3(s2) && Zn2(f5, s2) && (R2(n4) || Pt3(n4)));
      }
      function ih(n4) {
        var t = n4.length, e2 = new n4.constructor(t);
        return t && typeof n4[0] == "string" && F3.call(n4, "index") && (e2.index = n4.index, e2.input = n4.input), e2;
      }
      function bu(n4) {
        return typeof n4.constructor == "function" && !he4(n4) ? Wt3(He3(n4)) : {};
      }
      function sh(n4, t, e2) {
        var r2 = n4.constructor;
        switch (t) {
          case kt4:
            return fi(n4);
          case Yt4:
          case Zt2:
            return new r2(+n4);
          case Rt3:
            return Bc(n4, e2);
          case gr3:
          case vr3:
          case _r3:
          case mr3:
          case wr2:
          case Pr3:
          case Ar3:
          case Cr3:
          case Ir3:
            return lu(n4, e2);
          case yn2:
            return new r2();
          case Jt4:
          case Qt3:
            return new r2(n4);
          case Xt4:
            return Gc(n4);
          case Sn2:
            return new r2();
          case Ae3:
            return zc(n4);
        }
      }
      function uh(n4, t) {
        var e2 = t.length;
        if (!e2) return n4;
        var r2 = e2 - 1;
        return t[r2] = (e2 > 1 ? "& " : "") + t[r2], t = t.join(e2 > 2 ? ", " : " "), n4.replace(uo2, `{
/* [wrapped with ` + t + `] */
`);
      }
      function ah(n4) {
        return R2(n4) || Pt3(n4) || !!(Ns2 && n4 && n4[Ns2]);
      }
      function Zn2(n4, t) {
        var e2 = typeof n4;
        return t = t ?? kn3, !!t && (e2 == "number" || e2 != "symbol" && mo2.test(n4)) && n4 > -1 && n4 % 1 == 0 && n4 < t;
      }
      function rn2(n4, t, e2) {
        if (!K3(e2)) return false;
        var r2 = typeof t;
        return (r2 == "number" ? an(e2) && Zn2(t, e2.length) : r2 == "string" && t in e2) ? bn2(e2[t], n4) : false;
      }
      function _i(n4, t) {
        if (R2(n4)) return false;
        var e2 = typeof n4;
        return e2 == "number" || e2 == "symbol" || e2 == "boolean" || n4 == null || pn(n4) ? true : eo2.test(n4) || !to2.test(n4) || t != null && n4 in M4(t);
      }
      function oh(n4) {
        var t = typeof n4;
        return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? n4 !== "__proto__" : n4 === null;
      }
      function mi(n4) {
        var t = je4(n4), e2 = a3[t];
        if (typeof e2 != "function" || !(t in H3.prototype)) return false;
        if (n4 === e2) return true;
        var r2 = di(e2);
        return !!r2 && n4 === r2[0];
      }
      function fh(n4) {
        return !!Ts2 && Ts2 in n4;
      }
      var ch = Re3 ? Jn3 : Ni;
      function he4(n4) {
        var t = n4 && n4.constructor, e2 = typeof t == "function" && t.prototype || Nt3;
        return n4 === e2;
      }
      function Tu(n4) {
        return n4 === n4 && !K3(n4);
      }
      function Lu(n4, t) {
        return function(e2) {
          return e2 == null ? false : e2[n4] === t && (t !== i3 || n4 in M4(e2));
        };
      }
      function hh(n4) {
        var t = sr3(n4, function(r2) {
          return e2.size === pr3 && e2.clear(), r2;
        }), e2 = t.cache;
        return t;
      }
      function lh(n4, t) {
        var e2 = n4[1], r2 = t[1], s2 = e2 | r2, o3 = s2 < (vn2 | ct3 | Mn3), f5 = r2 == Mn3 && e2 == Dn || r2 == Mn3 && e2 == Kt4 && n4[7].length <= t[8] || r2 == (Mn3 | Kt4) && t[7].length <= t[8] && e2 == Dn;
        if (!(o3 || f5)) return n4;
        r2 & vn2 && (n4[2] = t[2], s2 |= e2 & vn2 ? 0 : qi);
        var c5 = t[3];
        if (c5) {
          var l4 = n4[3];
          n4[3] = l4 ? du(l4, c5, t[4]) : c5, n4[4] = l4 ? tt2(n4[3], It4) : t[4];
        }
        return c5 = t[5], c5 && (l4 = n4[5], n4[5] = l4 ? gu(l4, c5, t[6]) : c5, n4[6] = l4 ? tt2(n4[5], It4) : t[6]), c5 = t[7], c5 && (n4[7] = c5), r2 & Mn3 && (n4[8] = n4[8] == null ? t[8] : nn(n4[8], t[8])), n4[9] == null && (n4[9] = t[9]), n4[0] = t[0], n4[1] = s2, n4;
      }
      function ph(n4) {
        var t = [];
        if (n4 != null) for (var e2 in M4(n4)) t.push(e2);
        return t;
      }
      function dh(n4) {
        return Te3.call(n4);
      }
      function Du(n4, t, e2) {
        return t = Q5(t === i3 ? n4.length - 1 : t, 0), function() {
          for (var r2 = arguments, s2 = -1, o3 = Q5(r2.length - t, 0), f5 = p6(o3); ++s2 < o3; ) f5[s2] = r2[t + s2];
          s2 = -1;
          for (var c5 = p6(t + 1); ++s2 < t; ) c5[s2] = r2[s2];
          return c5[t] = e2(f5), cn(n4, this, c5);
        };
      }
      function Hu(n4, t) {
        return t.length < 2 ? n4 : _t3(n4, Cn2(t, 0, -1));
      }
      function gh(n4, t) {
        for (var e2 = n4.length, r2 = nn(t.length, e2), s2 = un(n4); r2--; ) {
          var o3 = t[r2];
          n4[r2] = Zn2(o3, e2) ? s2[o3] : i3;
        }
        return n4;
      }
      function wi(n4, t) {
        if (!(t === "constructor" && typeof n4[t] == "function") && t != "__proto__") return n4[t];
      }
      var Nu = Uu(iu), le4 = bf || function(n4, t) {
        return k5.setTimeout(n4, t);
      }, Pi = Uu(Wc);
      function $u(n4, t, e2) {
        var r2 = t + "";
        return Pi(n4, uh(r2, vh(rh(r2), e2)));
      }
      function Uu(n4) {
        var t = 0, e2 = 0;
        return function() {
          var r2 = Hf(), s2 = Na - (r2 - e2);
          if (e2 = r2, s2 > 0) {
            if (++t >= Ha) return arguments[0];
          } else t = 0;
          return n4.apply(i3, arguments);
        };
      }
      function tr4(n4, t) {
        var e2 = -1, r2 = n4.length, s2 = r2 - 1;
        for (t = t === i3 ? r2 : t; ++e2 < t; ) {
          var o3 = ei(e2, s2), f5 = n4[o3];
          n4[o3] = n4[e2], n4[e2] = f5;
        }
        return n4.length = t, n4;
      }
      var Wu = hh(function(n4) {
        var t = [];
        return n4.charCodeAt(0) === 46 && t.push(""), n4.replace(ro2, function(e2, r2, s2, o3) {
          t.push(s2 ? o3.replace(ho2, "$1") : r2 || e2);
        }), t;
      });
      function Wn2(n4) {
        if (typeof n4 == "string" || pn(n4)) return n4;
        var t = n4 + "";
        return t == "0" && 1 / n4 == -ht4 ? "-0" : t;
      }
      function wt4(n4) {
        if (n4 != null) {
          try {
            return be2.call(n4);
          } catch {
          }
          try {
            return n4 + "";
          } catch {
          }
        }
        return "";
      }
      function vh(n4, t) {
        return mn2(qa, function(e2) {
          var r2 = "_." + e2[0];
          t & e2[1] && !Ee2(n4, r2) && n4.push(r2);
        }), n4.sort();
      }
      function Fu(n4) {
        if (n4 instanceof H3) return n4.clone();
        var t = new Pn2(n4.__wrapped__, n4.__chain__);
        return t.__actions__ = un(n4.__actions__), t.__index__ = n4.__index__, t.__values__ = n4.__values__, t;
      }
      function _h(n4, t, e2) {
        (e2 ? rn2(n4, t, e2) : t === i3) ? t = 1 : t = Q5(b6(t), 0);
        var r2 = n4 == null ? 0 : n4.length;
        if (!r2 || t < 1) return [];
        for (var s2 = 0, o3 = 0, f5 = p6(Ue3(r2 / t)); s2 < r2; ) f5[o3++] = Cn2(n4, s2, s2 += t);
        return f5;
      }
      function mh(n4) {
        for (var t = -1, e2 = n4 == null ? 0 : n4.length, r2 = 0, s2 = []; ++t < e2; ) {
          var o3 = n4[t];
          o3 && (s2[r2++] = o3);
        }
        return s2;
      }
      function wh() {
        var n4 = arguments.length;
        if (!n4) return [];
        for (var t = p6(n4 - 1), e2 = arguments[0], r2 = n4; r2--; ) t[r2 - 1] = arguments[r2];
        return nt3(R2(e2) ? un(e2) : [e2], j6(t, 1));
      }
      var Ph = L4(function(n4, t) {
        return Z2(n4) ? ue3(n4, j6(t, 1, Z2, true)) : [];
      }), Ah = L4(function(n4, t) {
        var e2 = In2(t);
        return Z2(e2) && (e2 = i3), Z2(n4) ? ue3(n4, j6(t, 1, Z2, true), x4(e2, 2)) : [];
      }), Ch = L4(function(n4, t) {
        var e2 = In2(t);
        return Z2(e2) && (e2 = i3), Z2(n4) ? ue3(n4, j6(t, 1, Z2, true), i3, e2) : [];
      });
      function Ih(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        return r2 ? (t = e2 || t === i3 ? 1 : b6(t), Cn2(n4, t < 0 ? 0 : t, r2)) : [];
      }
      function xh(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        return r2 ? (t = e2 || t === i3 ? 1 : b6(t), t = r2 - t, Cn2(n4, 0, t < 0 ? 0 : t)) : [];
      }
      function Eh(n4, t) {
        return n4 && n4.length ? Ze3(n4, x4(t, 3), true, true) : [];
      }
      function yh(n4, t) {
        return n4 && n4.length ? Ze3(n4, x4(t, 3), true) : [];
      }
      function Sh(n4, t, e2, r2) {
        var s2 = n4 == null ? 0 : n4.length;
        return s2 ? (e2 && typeof e2 != "number" && rn2(n4, t, e2) && (e2 = 0, r2 = s2), wc(n4, t, e2, r2)) : [];
      }
      function Mu(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        if (!r2) return -1;
        var s2 = e2 == null ? 0 : b6(e2);
        return s2 < 0 && (s2 = Q5(r2 + s2, 0)), ye2(n4, x4(t, 3), s2);
      }
      function qu(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        if (!r2) return -1;
        var s2 = r2 - 1;
        return e2 !== i3 && (s2 = b6(e2), s2 = e2 < 0 ? Q5(r2 + s2, 0) : nn(s2, r2 - 1)), ye2(n4, x4(t, 3), s2, true);
      }
      function Bu(n4) {
        var t = n4 == null ? 0 : n4.length;
        return t ? j6(n4, 1) : [];
      }
      function Oh(n4) {
        var t = n4 == null ? 0 : n4.length;
        return t ? j6(n4, ht4) : [];
      }
      function Rh(n4, t) {
        var e2 = n4 == null ? 0 : n4.length;
        return e2 ? (t = t === i3 ? 1 : b6(t), j6(n4, t)) : [];
      }
      function bh(n4) {
        for (var t = -1, e2 = n4 == null ? 0 : n4.length, r2 = {}; ++t < e2; ) {
          var s2 = n4[t];
          r2[s2[0]] = s2[1];
        }
        return r2;
      }
      function Gu(n4) {
        return n4 && n4.length ? n4[0] : i3;
      }
      function Th(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        if (!r2) return -1;
        var s2 = e2 == null ? 0 : b6(e2);
        return s2 < 0 && (s2 = Q5(r2 + s2, 0)), Tt3(n4, t, s2);
      }
      function Lh(n4) {
        var t = n4 == null ? 0 : n4.length;
        return t ? Cn2(n4, 0, -1) : [];
      }
      var Dh = L4(function(n4) {
        var t = G5(n4, ai);
        return t.length && t[0] === n4[0] ? Vr2(t) : [];
      }), Hh = L4(function(n4) {
        var t = In2(n4), e2 = G5(n4, ai);
        return t === In2(e2) ? t = i3 : e2.pop(), e2.length && e2[0] === n4[0] ? Vr2(e2, x4(t, 2)) : [];
      }), Nh = L4(function(n4) {
        var t = In2(n4), e2 = G5(n4, ai);
        return t = typeof t == "function" ? t : i3, t && e2.pop(), e2.length && e2[0] === n4[0] ? Vr2(e2, i3, t) : [];
      });
      function $h(n4, t) {
        return n4 == null ? "" : Lf.call(n4, t);
      }
      function In2(n4) {
        var t = n4 == null ? 0 : n4.length;
        return t ? n4[t - 1] : i3;
      }
      function Uh(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        if (!r2) return -1;
        var s2 = r2;
        return e2 !== i3 && (s2 = b6(e2), s2 = s2 < 0 ? Q5(r2 + s2, 0) : nn(s2, r2 - 1)), t === t ? vf(n4, t, s2) : ye2(n4, Is2, s2, true);
      }
      function Wh(n4, t) {
        return n4 && n4.length ? nu(n4, b6(t)) : i3;
      }
      var Fh = L4(zu);
      function zu(n4, t) {
        return n4 && n4.length && t && t.length ? ti(n4, t) : n4;
      }
      function Mh(n4, t, e2) {
        return n4 && n4.length && t && t.length ? ti(n4, t, x4(e2, 2)) : n4;
      }
      function qh(n4, t, e2) {
        return n4 && n4.length && t && t.length ? ti(n4, t, i3, e2) : n4;
      }
      var Bh = Yn2(function(n4, t) {
        var e2 = n4 == null ? 0 : n4.length, r2 = Zr2(n4, t);
        return ru(n4, G5(t, function(s2) {
          return Zn2(s2, e2) ? +s2 : s2;
        }).sort(pu)), r2;
      });
      function Gh(n4, t) {
        var e2 = [];
        if (!(n4 && n4.length)) return e2;
        var r2 = -1, s2 = [], o3 = n4.length;
        for (t = x4(t, 3); ++r2 < o3; ) {
          var f5 = n4[r2];
          t(f5, r2, n4) && (e2.push(f5), s2.push(r2));
        }
        return ru(n4, s2), e2;
      }
      function Ai(n4) {
        return n4 == null ? n4 : $f.call(n4);
      }
      function zh(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        return r2 ? (e2 && typeof e2 != "number" && rn2(n4, t, e2) ? (t = 0, e2 = r2) : (t = t == null ? 0 : b6(t), e2 = e2 === i3 ? r2 : b6(e2)), Cn2(n4, t, e2)) : [];
      }
      function Kh(n4, t) {
        return Ye3(n4, t);
      }
      function Yh(n4, t, e2) {
        return ii(n4, t, x4(e2, 2));
      }
      function Zh(n4, t) {
        var e2 = n4 == null ? 0 : n4.length;
        if (e2) {
          var r2 = Ye3(n4, t);
          if (r2 < e2 && bn2(n4[r2], t)) return r2;
        }
        return -1;
      }
      function Jh(n4, t) {
        return Ye3(n4, t, true);
      }
      function Xh(n4, t, e2) {
        return ii(n4, t, x4(e2, 2), true);
      }
      function Qh(n4, t) {
        var e2 = n4 == null ? 0 : n4.length;
        if (e2) {
          var r2 = Ye3(n4, t, true) - 1;
          if (bn2(n4[r2], t)) return r2;
        }
        return -1;
      }
      function Vh(n4) {
        return n4 && n4.length ? su(n4) : [];
      }
      function kh(n4, t) {
        return n4 && n4.length ? su(n4, x4(t, 2)) : [];
      }
      function jh(n4) {
        var t = n4 == null ? 0 : n4.length;
        return t ? Cn2(n4, 1, t) : [];
      }
      function nl(n4, t, e2) {
        return n4 && n4.length ? (t = e2 || t === i3 ? 1 : b6(t), Cn2(n4, 0, t < 0 ? 0 : t)) : [];
      }
      function tl(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        return r2 ? (t = e2 || t === i3 ? 1 : b6(t), t = r2 - t, Cn2(n4, t < 0 ? 0 : t, r2)) : [];
      }
      function el(n4, t) {
        return n4 && n4.length ? Ze3(n4, x4(t, 3), false, true) : [];
      }
      function rl(n4, t) {
        return n4 && n4.length ? Ze3(n4, x4(t, 3)) : [];
      }
      var il = L4(function(n4) {
        return it3(j6(n4, 1, Z2, true));
      }), sl = L4(function(n4) {
        var t = In2(n4);
        return Z2(t) && (t = i3), it3(j6(n4, 1, Z2, true), x4(t, 2));
      }), ul = L4(function(n4) {
        var t = In2(n4);
        return t = typeof t == "function" ? t : i3, it3(j6(n4, 1, Z2, true), i3, t);
      });
      function al(n4) {
        return n4 && n4.length ? it3(n4) : [];
      }
      function ol(n4, t) {
        return n4 && n4.length ? it3(n4, x4(t, 2)) : [];
      }
      function fl(n4, t) {
        return t = typeof t == "function" ? t : i3, n4 && n4.length ? it3(n4, i3, t) : [];
      }
      function Ci(n4) {
        if (!(n4 && n4.length)) return [];
        var t = 0;
        return n4 = jn2(n4, function(e2) {
          if (Z2(e2)) return t = Q5(e2.length, t), true;
        }), Fr3(t, function(e2) {
          return G5(n4, $r3(e2));
        });
      }
      function Ku(n4, t) {
        if (!(n4 && n4.length)) return [];
        var e2 = Ci(n4);
        return t == null ? e2 : G5(e2, function(r2) {
          return cn(t, i3, r2);
        });
      }
      var cl = L4(function(n4, t) {
        return Z2(n4) ? ue3(n4, t) : [];
      }), hl = L4(function(n4) {
        return ui(jn2(n4, Z2));
      }), ll = L4(function(n4) {
        var t = In2(n4);
        return Z2(t) && (t = i3), ui(jn2(n4, Z2), x4(t, 2));
      }), pl = L4(function(n4) {
        var t = In2(n4);
        return t = typeof t == "function" ? t : i3, ui(jn2(n4, Z2), i3, t);
      }), dl = L4(Ci);
      function gl(n4, t) {
        return fu(n4 || [], t || [], se);
      }
      function vl(n4, t) {
        return fu(n4 || [], t || [], fe2);
      }
      var _l = L4(function(n4) {
        var t = n4.length, e2 = t > 1 ? n4[t - 1] : i3;
        return e2 = typeof e2 == "function" ? (n4.pop(), e2) : i3, Ku(n4, e2);
      });
      function Yu(n4) {
        var t = a3(n4);
        return t.__chain__ = true, t;
      }
      function ml(n4, t) {
        return t(n4), n4;
      }
      function er4(n4, t) {
        return t(n4);
      }
      var wl = Yn2(function(n4) {
        var t = n4.length, e2 = t ? n4[0] : 0, r2 = this.__wrapped__, s2 = function(o3) {
          return Zr2(o3, n4);
        };
        return t > 1 || this.__actions__.length || !(r2 instanceof H3) || !Zn2(e2) ? this.thru(s2) : (r2 = r2.slice(e2, +e2 + (t ? 1 : 0)), r2.__actions__.push({ func: er4, args: [s2], thisArg: i3 }), new Pn2(r2, this.__chain__).thru(function(o3) {
          return t && !o3.length && o3.push(i3), o3;
        }));
      });
      function Pl() {
        return Yu(this);
      }
      function Al() {
        return new Pn2(this.value(), this.__chain__);
      }
      function Cl() {
        this.__values__ === i3 && (this.__values__ = ua(this.value()));
        var n4 = this.__index__ >= this.__values__.length, t = n4 ? i3 : this.__values__[this.__index__++];
        return { done: n4, value: t };
      }
      function Il() {
        return this;
      }
      function xl(n4) {
        for (var t, e2 = this; e2 instanceof qe3; ) {
          var r2 = Fu(e2);
          r2.__index__ = 0, r2.__values__ = i3, t ? s2.__wrapped__ = r2 : t = r2;
          var s2 = r2;
          e2 = e2.__wrapped__;
        }
        return s2.__wrapped__ = n4, t;
      }
      function El() {
        var n4 = this.__wrapped__;
        if (n4 instanceof H3) {
          var t = n4;
          return this.__actions__.length && (t = new H3(this)), t = t.reverse(), t.__actions__.push({ func: er4, args: [Ai], thisArg: i3 }), new Pn2(t, this.__chain__);
        }
        return this.thru(Ai);
      }
      function yl() {
        return ou(this.__wrapped__, this.__actions__);
      }
      var Sl = Je4(function(n4, t, e2) {
        F3.call(n4, e2) ? ++n4[e2] : zn2(n4, e2, 1);
      });
      function Ol(n4, t, e2) {
        var r2 = R2(n4) ? As2 : mc;
        return e2 && rn2(n4, t, e2) && (t = i3), r2(n4, x4(t, 3));
      }
      function Rl(n4, t) {
        var e2 = R2(n4) ? jn2 : Ks2;
        return e2(n4, x4(t, 3));
      }
      var bl = wu(Mu), Tl = wu(qu);
      function Ll(n4, t) {
        return j6(rr3(n4, t), 1);
      }
      function Dl(n4, t) {
        return j6(rr3(n4, t), ht4);
      }
      function Hl(n4, t, e2) {
        return e2 = e2 === i3 ? 1 : b6(e2), j6(rr3(n4, t), e2);
      }
      function Zu(n4, t) {
        var e2 = R2(n4) ? mn2 : rt4;
        return e2(n4, x4(t, 3));
      }
      function Ju(n4, t) {
        var e2 = R2(n4) ? ko2 : zs2;
        return e2(n4, x4(t, 3));
      }
      var Nl = Je4(function(n4, t, e2) {
        F3.call(n4, e2) ? n4[e2].push(t) : zn2(n4, e2, [t]);
      });
      function $l(n4, t, e2, r2) {
        n4 = an(n4) ? n4 : Gt4(n4), e2 = e2 && !r2 ? b6(e2) : 0;
        var s2 = n4.length;
        return e2 < 0 && (e2 = Q5(s2 + e2, 0)), or4(n4) ? e2 <= s2 && n4.indexOf(t, e2) > -1 : !!s2 && Tt3(n4, t, e2) > -1;
      }
      var Ul = L4(function(n4, t, e2) {
        var r2 = -1, s2 = typeof t == "function", o3 = an(n4) ? p6(n4.length) : [];
        return rt4(n4, function(f5) {
          o3[++r2] = s2 ? cn(t, f5, e2) : ae2(f5, t, e2);
        }), o3;
      }), Wl = Je4(function(n4, t, e2) {
        zn2(n4, e2, t);
      });
      function rr3(n4, t) {
        var e2 = R2(n4) ? G5 : Vs2;
        return e2(n4, x4(t, 3));
      }
      function Fl(n4, t, e2, r2) {
        return n4 == null ? [] : (R2(t) || (t = t == null ? [] : [t]), e2 = r2 ? i3 : e2, R2(e2) || (e2 = e2 == null ? [] : [e2]), tu(n4, t, e2));
      }
      var Ml = Je4(function(n4, t, e2) {
        n4[e2 ? 0 : 1].push(t);
      }, function() {
        return [[], []];
      });
      function ql(n4, t, e2) {
        var r2 = R2(n4) ? Hr2 : Es2, s2 = arguments.length < 3;
        return r2(n4, x4(t, 4), e2, s2, rt4);
      }
      function Bl(n4, t, e2) {
        var r2 = R2(n4) ? jo2 : Es2, s2 = arguments.length < 3;
        return r2(n4, x4(t, 4), e2, s2, zs2);
      }
      function Gl(n4, t) {
        var e2 = R2(n4) ? jn2 : Ks2;
        return e2(n4, ur3(x4(t, 3)));
      }
      function zl(n4) {
        var t = R2(n4) ? Ms2 : $c;
        return t(n4);
      }
      function Kl(n4, t, e2) {
        (e2 ? rn2(n4, t, e2) : t === i3) ? t = 1 : t = b6(t);
        var r2 = R2(n4) ? pc : Uc;
        return r2(n4, t);
      }
      function Yl(n4) {
        var t = R2(n4) ? dc : Fc;
        return t(n4);
      }
      function Zl(n4) {
        if (n4 == null) return 0;
        if (an(n4)) return or4(n4) ? Dt4(n4) : n4.length;
        var t = tn(n4);
        return t == yn2 || t == Sn2 ? n4.size : jr2(n4).length;
      }
      function Jl(n4, t, e2) {
        var r2 = R2(n4) ? Nr3 : Mc;
        return e2 && rn2(n4, t, e2) && (t = i3), r2(n4, x4(t, 3));
      }
      var Xl = L4(function(n4, t) {
        if (n4 == null) return [];
        var e2 = t.length;
        return e2 > 1 && rn2(n4, t[0], t[1]) ? t = [] : e2 > 2 && rn2(t[0], t[1], t[2]) && (t = [t[0]]), tu(n4, j6(t, 1), []);
      }), ir3 = Rf || function() {
        return k5.Date.now();
      };
      function Ql(n4, t) {
        if (typeof t != "function") throw new wn($4);
        return n4 = b6(n4), function() {
          if (--n4 < 1) return t.apply(this, arguments);
        };
      }
      function Xu(n4, t, e2) {
        return t = e2 ? i3 : t, t = n4 && t == null ? n4.length : t, Kn3(n4, Mn3, i3, i3, i3, i3, t);
      }
      function Qu(n4, t) {
        var e2;
        if (typeof t != "function") throw new wn($4);
        return n4 = b6(n4), function() {
          return --n4 > 0 && (e2 = t.apply(this, arguments)), n4 <= 1 && (t = i3), e2;
        };
      }
      var Ii = L4(function(n4, t, e2) {
        var r2 = vn2;
        if (e2.length) {
          var s2 = tt2(e2, qt4(Ii));
          r2 |= Hn3;
        }
        return Kn3(n4, r2, t, e2, s2);
      }), Vu = L4(function(n4, t, e2) {
        var r2 = vn2 | ct3;
        if (e2.length) {
          var s2 = tt2(e2, qt4(Vu));
          r2 |= Hn3;
        }
        return Kn3(t, r2, n4, e2, s2);
      });
      function ku(n4, t, e2) {
        t = e2 ? i3 : t;
        var r2 = Kn3(n4, Dn, i3, i3, i3, i3, i3, t);
        return r2.placeholder = ku.placeholder, r2;
      }
      function ju(n4, t, e2) {
        t = e2 ? i3 : t;
        var r2 = Kn3(n4, yt4, i3, i3, i3, i3, i3, t);
        return r2.placeholder = ju.placeholder, r2;
      }
      function na(n4, t, e2) {
        var r2, s2, o3, f5, c5, l4, v6 = 0, _5 = false, m3 = false, w7 = true;
        if (typeof n4 != "function") throw new wn($4);
        t = xn3(t) || 0, K3(e2) && (_5 = !!e2.leading, m3 = "maxWait" in e2, o3 = m3 ? Q5(xn3(e2.maxWait) || 0, t) : o3, w7 = "trailing" in e2 ? !!e2.trailing : w7);
        function I2(J2) {
          var Tn2 = r2, Qn3 = s2;
          return r2 = s2 = i3, v6 = J2, f5 = n4.apply(Qn3, Tn2), f5;
        }
        function E6(J2) {
          return v6 = J2, c5 = le4(D5, t), _5 ? I2(J2) : f5;
        }
        function T3(J2) {
          var Tn2 = J2 - l4, Qn3 = J2 - v6, wa = t - Tn2;
          return m3 ? nn(wa, o3 - Qn3) : wa;
        }
        function y7(J2) {
          var Tn2 = J2 - l4, Qn3 = J2 - v6;
          return l4 === i3 || Tn2 >= t || Tn2 < 0 || m3 && Qn3 >= o3;
        }
        function D5() {
          var J2 = ir3();
          if (y7(J2)) return N12(J2);
          c5 = le4(D5, T3(J2));
        }
        function N12(J2) {
          return c5 = i3, w7 && r2 ? I2(J2) : (r2 = s2 = i3, f5);
        }
        function dn2() {
          c5 !== i3 && cu(c5), v6 = 0, r2 = l4 = s2 = c5 = i3;
        }
        function sn() {
          return c5 === i3 ? f5 : N12(ir3());
        }
        function gn2() {
          var J2 = ir3(), Tn2 = y7(J2);
          if (r2 = arguments, s2 = this, l4 = J2, Tn2) {
            if (c5 === i3) return E6(l4);
            if (m3) return cu(c5), c5 = le4(D5, t), I2(l4);
          }
          return c5 === i3 && (c5 = le4(D5, t)), f5;
        }
        return gn2.cancel = dn2, gn2.flush = sn, gn2;
      }
      var Vl = L4(function(n4, t) {
        return Gs2(n4, 1, t);
      }), kl = L4(function(n4, t, e2) {
        return Gs2(n4, xn3(t) || 0, e2);
      });
      function jl(n4) {
        return Kn3(n4, dr3);
      }
      function sr3(n4, t) {
        if (typeof n4 != "function" || t != null && typeof t != "function") throw new wn($4);
        var e2 = function() {
          var r2 = arguments, s2 = t ? t.apply(this, r2) : r2[0], o3 = e2.cache;
          if (o3.has(s2)) return o3.get(s2);
          var f5 = n4.apply(this, r2);
          return e2.cache = o3.set(s2, f5) || o3, f5;
        };
        return e2.cache = new (sr3.Cache || Gn2)(), e2;
      }
      sr3.Cache = Gn2;
      function ur3(n4) {
        if (typeof n4 != "function") throw new wn($4);
        return function() {
          var t = arguments;
          switch (t.length) {
            case 0:
              return !n4.call(this);
            case 1:
              return !n4.call(this, t[0]);
            case 2:
              return !n4.call(this, t[0], t[1]);
            case 3:
              return !n4.call(this, t[0], t[1], t[2]);
          }
          return !n4.apply(this, t);
        };
      }
      function np(n4) {
        return Qu(2, n4);
      }
      var tp = qc(function(n4, t) {
        t = t.length == 1 && R2(t[0]) ? G5(t[0], hn(x4())) : G5(j6(t, 1), hn(x4()));
        var e2 = t.length;
        return L4(function(r2) {
          for (var s2 = -1, o3 = nn(r2.length, e2); ++s2 < o3; ) r2[s2] = t[s2].call(this, r2[s2]);
          return cn(n4, this, r2);
        });
      }), xi = L4(function(n4, t) {
        var e2 = tt2(t, qt4(xi));
        return Kn3(n4, Hn3, i3, t, e2);
      }), ta = L4(function(n4, t) {
        var e2 = tt2(t, qt4(ta));
        return Kn3(n4, St3, i3, t, e2);
      }), ep = Yn2(function(n4, t) {
        return Kn3(n4, Kt4, i3, i3, i3, t);
      });
      function rp(n4, t) {
        if (typeof n4 != "function") throw new wn($4);
        return t = t === i3 ? t : b6(t), L4(n4, t);
      }
      function ip(n4, t) {
        if (typeof n4 != "function") throw new wn($4);
        return t = t == null ? 0 : Q5(b6(t), 0), L4(function(e2) {
          var r2 = e2[t], s2 = ut4(e2, 0, t);
          return r2 && nt3(s2, r2), cn(n4, this, s2);
        });
      }
      function sp(n4, t, e2) {
        var r2 = true, s2 = true;
        if (typeof n4 != "function") throw new wn($4);
        return K3(e2) && (r2 = "leading" in e2 ? !!e2.leading : r2, s2 = "trailing" in e2 ? !!e2.trailing : s2), na(n4, t, { leading: r2, maxWait: t, trailing: s2 });
      }
      function up(n4) {
        return Xu(n4, 1);
      }
      function ap(n4, t) {
        return xi(oi(t), n4);
      }
      function op() {
        if (!arguments.length) return [];
        var n4 = arguments[0];
        return R2(n4) ? n4 : [n4];
      }
      function fp(n4) {
        return An2(n4, xt4);
      }
      function cp(n4, t) {
        return t = typeof t == "function" ? t : i3, An2(n4, xt4, t);
      }
      function hp(n4) {
        return An2(n4, Ln3 | xt4);
      }
      function lp(n4, t) {
        return t = typeof t == "function" ? t : i3, An2(n4, Ln3 | xt4, t);
      }
      function pp(n4, t) {
        return t == null || Bs2(n4, t, V3(t));
      }
      function bn2(n4, t) {
        return n4 === t || n4 !== n4 && t !== t;
      }
      var dp = ke3(Qr2), gp = ke3(function(n4, t) {
        return n4 >= t;
      }), Pt3 = Js2(/* @__PURE__ */ function() {
        return arguments;
      }()) ? Js2 : function(n4) {
        return Y(n4) && F3.call(n4, "callee") && !Hs2.call(n4, "callee");
      }, R2 = p6.isArray, vp = gs3 ? hn(gs3) : xc;
      function an(n4) {
        return n4 != null && ar3(n4.length) && !Jn3(n4);
      }
      function Z2(n4) {
        return Y(n4) && an(n4);
      }
      function _p(n4) {
        return n4 === true || n4 === false || Y(n4) && en3(n4) == Yt4;
      }
      var at3 = Tf || Ni, mp = vs2 ? hn(vs2) : Ec;
      function wp(n4) {
        return Y(n4) && n4.nodeType === 1 && !pe4(n4);
      }
      function Pp(n4) {
        if (n4 == null) return true;
        if (an(n4) && (R2(n4) || typeof n4 == "string" || typeof n4.splice == "function" || at3(n4) || Bt4(n4) || Pt3(n4))) return !n4.length;
        var t = tn(n4);
        if (t == yn2 || t == Sn2) return !n4.size;
        if (he4(n4)) return !jr2(n4).length;
        for (var e2 in n4) if (F3.call(n4, e2)) return false;
        return true;
      }
      function Ap(n4, t) {
        return oe3(n4, t);
      }
      function Cp(n4, t, e2) {
        e2 = typeof e2 == "function" ? e2 : i3;
        var r2 = e2 ? e2(n4, t) : i3;
        return r2 === i3 ? oe3(n4, t, i3, e2) : !!r2;
      }
      function Ei(n4) {
        if (!Y(n4)) return false;
        var t = en3(n4);
        return t == we2 || t == Ga || typeof n4.message == "string" && typeof n4.name == "string" && !pe4(n4);
      }
      function Ip(n4) {
        return typeof n4 == "number" && $s2(n4);
      }
      function Jn3(n4) {
        if (!K3(n4)) return false;
        var t = en3(n4);
        return t == Pe2 || t == Gi2 || t == Ba || t == Ka;
      }
      function ea(n4) {
        return typeof n4 == "number" && n4 == b6(n4);
      }
      function ar3(n4) {
        return typeof n4 == "number" && n4 > -1 && n4 % 1 == 0 && n4 <= kn3;
      }
      function K3(n4) {
        var t = typeof n4;
        return n4 != null && (t == "object" || t == "function");
      }
      function Y(n4) {
        return n4 != null && typeof n4 == "object";
      }
      var ra = _s2 ? hn(_s2) : Sc;
      function xp(n4, t) {
        return n4 === t || kr2(n4, t, gi(t));
      }
      function Ep(n4, t, e2) {
        return e2 = typeof e2 == "function" ? e2 : i3, kr2(n4, t, gi(t), e2);
      }
      function yp(n4) {
        return ia(n4) && n4 != +n4;
      }
      function Sp(n4) {
        if (ch(n4)) throw new S5(O6);
        return Xs2(n4);
      }
      function Op(n4) {
        return n4 === null;
      }
      function Rp(n4) {
        return n4 == null;
      }
      function ia(n4) {
        return typeof n4 == "number" || Y(n4) && en3(n4) == Jt4;
      }
      function pe4(n4) {
        if (!Y(n4) || en3(n4) != qn3) return false;
        var t = He3(n4);
        if (t === null) return true;
        var e2 = F3.call(t, "constructor") && t.constructor;
        return typeof e2 == "function" && e2 instanceof e2 && be2.call(e2) == Ef;
      }
      var yi = ms2 ? hn(ms2) : Oc;
      function bp(n4) {
        return ea(n4) && n4 >= -kn3 && n4 <= kn3;
      }
      var sa = ws2 ? hn(ws2) : Rc;
      function or4(n4) {
        return typeof n4 == "string" || !R2(n4) && Y(n4) && en3(n4) == Qt3;
      }
      function pn(n4) {
        return typeof n4 == "symbol" || Y(n4) && en3(n4) == Ae3;
      }
      var Bt4 = Ps2 ? hn(Ps2) : bc;
      function Tp(n4) {
        return n4 === i3;
      }
      function Lp(n4) {
        return Y(n4) && tn(n4) == Vt4;
      }
      function Dp(n4) {
        return Y(n4) && en3(n4) == Za;
      }
      var Hp = ke3(ni), Np = ke3(function(n4, t) {
        return n4 <= t;
      });
      function ua(n4) {
        if (!n4) return [];
        if (an(n4)) return or4(n4) ? On2(n4) : un(n4);
        if (ne2 && n4[ne2]) return pf(n4[ne2]());
        var t = tn(n4), e2 = t == yn2 ? qr2 : t == Sn2 ? Se3 : Gt4;
        return e2(n4);
      }
      function Xn3(n4) {
        if (!n4) return n4 === 0 ? n4 : 0;
        if (n4 = xn3(n4), n4 === ht4 || n4 === -ht4) {
          var t = n4 < 0 ? -1 : 1;
          return t * Wa;
        }
        return n4 === n4 ? n4 : 0;
      }
      function b6(n4) {
        var t = Xn3(n4), e2 = t % 1;
        return t === t ? e2 ? t - e2 : t : 0;
      }
      function aa(n4) {
        return n4 ? vt4(b6(n4), 0, Nn2) : 0;
      }
      function xn3(n4) {
        if (typeof n4 == "number") return n4;
        if (pn(n4)) return _e3;
        if (K3(n4)) {
          var t = typeof n4.valueOf == "function" ? n4.valueOf() : n4;
          n4 = K3(t) ? t + "" : t;
        }
        if (typeof n4 != "string") return n4 === 0 ? n4 : +n4;
        n4 = ys2(n4);
        var e2 = go2.test(n4);
        return e2 || _o2.test(n4) ? Xo(n4.slice(2), e2 ? 2 : 8) : po2.test(n4) ? _e3 : +n4;
      }
      function oa(n4) {
        return Un3(n4, on2(n4));
      }
      function $p(n4) {
        return n4 ? vt4(b6(n4), -kn3, kn3) : n4 === 0 ? n4 : 0;
      }
      function W4(n4) {
        return n4 == null ? "" : ln2(n4);
      }
      var Up = Ft4(function(n4, t) {
        if (he4(t) || an(t)) {
          Un3(t, V3(t), n4);
          return;
        }
        for (var e2 in t) F3.call(t, e2) && se(n4, e2, t[e2]);
      }), fa = Ft4(function(n4, t) {
        Un3(t, on2(t), n4);
      }), fr2 = Ft4(function(n4, t, e2, r2) {
        Un3(t, on2(t), n4, r2);
      }), Wp = Ft4(function(n4, t, e2, r2) {
        Un3(t, V3(t), n4, r2);
      }), Fp = Yn2(Zr2);
      function Mp(n4, t) {
        var e2 = Wt3(n4);
        return t == null ? e2 : qs2(e2, t);
      }
      var qp = L4(function(n4, t) {
        n4 = M4(n4);
        var e2 = -1, r2 = t.length, s2 = r2 > 2 ? t[2] : i3;
        for (s2 && rn2(t[0], t[1], s2) && (r2 = 1); ++e2 < r2; ) for (var o3 = t[e2], f5 = on2(o3), c5 = -1, l4 = f5.length; ++c5 < l4; ) {
          var v6 = f5[c5], _5 = n4[v6];
          (_5 === i3 || bn2(_5, Nt3[v6]) && !F3.call(n4, v6)) && (n4[v6] = o3[v6]);
        }
        return n4;
      }), Bp = L4(function(n4) {
        return n4.push(i3, yu), cn(ca, i3, n4);
      });
      function Gp(n4, t) {
        return Cs2(n4, x4(t, 3), $n2);
      }
      function zp(n4, t) {
        return Cs2(n4, x4(t, 3), Xr2);
      }
      function Kp(n4, t) {
        return n4 == null ? n4 : Jr2(n4, x4(t, 3), on2);
      }
      function Yp(n4, t) {
        return n4 == null ? n4 : Ys2(n4, x4(t, 3), on2);
      }
      function Zp(n4, t) {
        return n4 && $n2(n4, x4(t, 3));
      }
      function Jp(n4, t) {
        return n4 && Xr2(n4, x4(t, 3));
      }
      function Xp(n4) {
        return n4 == null ? [] : ze2(n4, V3(n4));
      }
      function Qp(n4) {
        return n4 == null ? [] : ze2(n4, on2(n4));
      }
      function Si(n4, t, e2) {
        var r2 = n4 == null ? i3 : _t3(n4, t);
        return r2 === i3 ? e2 : r2;
      }
      function Vp(n4, t) {
        return n4 != null && Ru(n4, t, Pc);
      }
      function Oi(n4, t) {
        return n4 != null && Ru(n4, t, Ac);
      }
      var kp = Au(function(n4, t, e2) {
        t != null && typeof t.toString != "function" && (t = Te3.call(t)), n4[t] = e2;
      }, bi(fn2)), jp = Au(function(n4, t, e2) {
        t != null && typeof t.toString != "function" && (t = Te3.call(t)), F3.call(n4, t) ? n4[t].push(e2) : n4[t] = [e2];
      }, x4), nd = L4(ae2);
      function V3(n4) {
        return an(n4) ? Fs2(n4) : jr2(n4);
      }
      function on2(n4) {
        return an(n4) ? Fs2(n4, true) : Tc(n4);
      }
      function td(n4, t) {
        var e2 = {};
        return t = x4(t, 3), $n2(n4, function(r2, s2, o3) {
          zn2(e2, t(r2, s2, o3), r2);
        }), e2;
      }
      function ed(n4, t) {
        var e2 = {};
        return t = x4(t, 3), $n2(n4, function(r2, s2, o3) {
          zn2(e2, s2, t(r2, s2, o3));
        }), e2;
      }
      var rd = Ft4(function(n4, t, e2) {
        Ke3(n4, t, e2);
      }), ca = Ft4(function(n4, t, e2, r2) {
        Ke3(n4, t, e2, r2);
      }), id = Yn2(function(n4, t) {
        var e2 = {};
        if (n4 == null) return e2;
        var r2 = false;
        t = G5(t, function(o3) {
          return o3 = st2(o3, n4), r2 || (r2 = o3.length > 1), o3;
        }), Un3(n4, pi(n4), e2), r2 && (e2 = An2(e2, Ln3 | Fn3 | xt4, kc));
        for (var s2 = t.length; s2--; ) si(e2, t[s2]);
        return e2;
      });
      function sd(n4, t) {
        return ha(n4, ur3(x4(t)));
      }
      var ud = Yn2(function(n4, t) {
        return n4 == null ? {} : Dc(n4, t);
      });
      function ha(n4, t) {
        if (n4 == null) return {};
        var e2 = G5(pi(n4), function(r2) {
          return [r2];
        });
        return t = x4(t), eu(n4, e2, function(r2, s2) {
          return t(r2, s2[0]);
        });
      }
      function ad(n4, t, e2) {
        t = st2(t, n4);
        var r2 = -1, s2 = t.length;
        for (s2 || (s2 = 1, n4 = i3); ++r2 < s2; ) {
          var o3 = n4 == null ? i3 : n4[Wn2(t[r2])];
          o3 === i3 && (r2 = s2, o3 = e2), n4 = Jn3(o3) ? o3.call(n4) : o3;
        }
        return n4;
      }
      function od(n4, t, e2) {
        return n4 == null ? n4 : fe2(n4, t, e2);
      }
      function fd(n4, t, e2, r2) {
        return r2 = typeof r2 == "function" ? r2 : i3, n4 == null ? n4 : fe2(n4, t, e2, r2);
      }
      var la = xu(V3), pa = xu(on2);
      function cd(n4, t, e2) {
        var r2 = R2(n4), s2 = r2 || at3(n4) || Bt4(n4);
        if (t = x4(t, 4), e2 == null) {
          var o3 = n4 && n4.constructor;
          s2 ? e2 = r2 ? new o3() : [] : K3(n4) ? e2 = Jn3(o3) ? Wt3(He3(n4)) : {} : e2 = {};
        }
        return (s2 ? mn2 : $n2)(n4, function(f5, c5, l4) {
          return t(e2, f5, c5, l4);
        }), e2;
      }
      function hd(n4, t) {
        return n4 == null ? true : si(n4, t);
      }
      function ld(n4, t, e2) {
        return n4 == null ? n4 : au(n4, t, oi(e2));
      }
      function pd(n4, t, e2, r2) {
        return r2 = typeof r2 == "function" ? r2 : i3, n4 == null ? n4 : au(n4, t, oi(e2), r2);
      }
      function Gt4(n4) {
        return n4 == null ? [] : Mr3(n4, V3(n4));
      }
      function dd(n4) {
        return n4 == null ? [] : Mr3(n4, on2(n4));
      }
      function gd(n4, t, e2) {
        return e2 === i3 && (e2 = t, t = i3), e2 !== i3 && (e2 = xn3(e2), e2 = e2 === e2 ? e2 : 0), t !== i3 && (t = xn3(t), t = t === t ? t : 0), vt4(xn3(n4), t, e2);
      }
      function vd(n4, t, e2) {
        return t = Xn3(t), e2 === i3 ? (e2 = t, t = 0) : e2 = Xn3(e2), n4 = xn3(n4), Cc(n4, t, e2);
      }
      function _d(n4, t, e2) {
        if (e2 && typeof e2 != "boolean" && rn2(n4, t, e2) && (t = e2 = i3), e2 === i3 && (typeof t == "boolean" ? (e2 = t, t = i3) : typeof n4 == "boolean" && (e2 = n4, n4 = i3)), n4 === i3 && t === i3 ? (n4 = 0, t = 1) : (n4 = Xn3(n4), t === i3 ? (t = n4, n4 = 0) : t = Xn3(t)), n4 > t) {
          var r2 = n4;
          n4 = t, t = r2;
        }
        if (e2 || n4 % 1 || t % 1) {
          var s2 = Us2();
          return nn(n4 + s2 * (t - n4 + Jo2("1e-" + ((s2 + "").length - 1))), t);
        }
        return ei(n4, t);
      }
      var md = Mt4(function(n4, t, e2) {
        return t = t.toLowerCase(), n4 + (e2 ? da(t) : t);
      });
      function da(n4) {
        return Ri(W4(n4).toLowerCase());
      }
      function ga(n4) {
        return n4 = W4(n4), n4 && n4.replace(wo2, of).replace(Wo2, "");
      }
      function wd(n4, t, e2) {
        n4 = W4(n4), t = ln2(t);
        var r2 = n4.length;
        e2 = e2 === i3 ? r2 : vt4(b6(e2), 0, r2);
        var s2 = e2;
        return e2 -= t.length, e2 >= 0 && n4.slice(e2, s2) == t;
      }
      function Pd(n4) {
        return n4 = W4(n4), n4 && ka.test(n4) ? n4.replace(Yi2, ff) : n4;
      }
      function Ad(n4) {
        return n4 = W4(n4), n4 && io2.test(n4) ? n4.replace(xr3, "\\$&") : n4;
      }
      var Cd = Mt4(function(n4, t, e2) {
        return n4 + (e2 ? "-" : "") + t.toLowerCase();
      }), Id = Mt4(function(n4, t, e2) {
        return n4 + (e2 ? " " : "") + t.toLowerCase();
      }), xd = mu("toLowerCase");
      function Ed(n4, t, e2) {
        n4 = W4(n4), t = b6(t);
        var r2 = t ? Dt4(n4) : 0;
        if (!t || r2 >= t) return n4;
        var s2 = (t - r2) / 2;
        return Ve3(We3(s2), e2) + n4 + Ve3(Ue3(s2), e2);
      }
      function yd(n4, t, e2) {
        n4 = W4(n4), t = b6(t);
        var r2 = t ? Dt4(n4) : 0;
        return t && r2 < t ? n4 + Ve3(t - r2, e2) : n4;
      }
      function Sd(n4, t, e2) {
        n4 = W4(n4), t = b6(t);
        var r2 = t ? Dt4(n4) : 0;
        return t && r2 < t ? Ve3(t - r2, e2) + n4 : n4;
      }
      function Od(n4, t, e2) {
        return e2 || t == null ? t = 0 : t && (t = +t), Nf(W4(n4).replace(Er2, ""), t || 0);
      }
      function Rd(n4, t, e2) {
        return (e2 ? rn2(n4, t, e2) : t === i3) ? t = 1 : t = b6(t), ri(W4(n4), t);
      }
      function bd() {
        var n4 = arguments, t = W4(n4[0]);
        return n4.length < 3 ? t : t.replace(n4[1], n4[2]);
      }
      var Td = Mt4(function(n4, t, e2) {
        return n4 + (e2 ? "_" : "") + t.toLowerCase();
      });
      function Ld(n4, t, e2) {
        return e2 && typeof e2 != "number" && rn2(n4, t, e2) && (t = e2 = i3), e2 = e2 === i3 ? Nn2 : e2 >>> 0, e2 ? (n4 = W4(n4), n4 && (typeof t == "string" || t != null && !yi(t)) && (t = ln2(t), !t && Lt4(n4)) ? ut4(On2(n4), 0, e2) : n4.split(t, e2)) : [];
      }
      var Dd = Mt4(function(n4, t, e2) {
        return n4 + (e2 ? " " : "") + Ri(t);
      });
      function Hd(n4, t, e2) {
        return n4 = W4(n4), e2 = e2 == null ? 0 : vt4(b6(e2), 0, n4.length), t = ln2(t), n4.slice(e2, e2 + t.length) == t;
      }
      function Nd(n4, t, e2) {
        var r2 = a3.templateSettings;
        e2 && rn2(n4, t, e2) && (t = i3), n4 = W4(n4), t = fr2({}, t, r2, Eu);
        var s2 = fr2({}, t.imports, r2.imports, Eu), o3 = V3(s2), f5 = Mr3(s2, o3), c5, l4, v6 = 0, _5 = t.interpolate || Ce2, m3 = "__p += '", w7 = Br2((t.escape || Ce2).source + "|" + _5.source + "|" + (_5 === Zi2 ? lo2 : Ce2).source + "|" + (t.evaluate || Ce2).source + "|$", "g"), I2 = "//# sourceURL=" + (F3.call(t, "sourceURL") ? (t.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++Go2 + "]") + `
`;
        n4.replace(w7, function(y7, D5, N12, dn2, sn, gn2) {
          return N12 || (N12 = dn2), m3 += n4.slice(v6, gn2).replace(Po2, cf), D5 && (c5 = true, m3 += `' +
__e(` + D5 + `) +
'`), sn && (l4 = true, m3 += `';
` + sn + `;
__p += '`), N12 && (m3 += `' +
((__t = (` + N12 + `)) == null ? '' : __t) +
'`), v6 = gn2 + y7.length, y7;
        }), m3 += `';
`;
        var E6 = F3.call(t, "variable") && t.variable;
        if (!E6) m3 = `with (obj) {
` + m3 + `
}
`;
        else if (co2.test(E6)) throw new S5(En2);
        m3 = (l4 ? m3.replace(Ja, "") : m3).replace(Xa, "$1").replace(Qa, "$1;"), m3 = "function(" + (E6 || "obj") + `) {
` + (E6 ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (c5 ? ", __e = _.escape" : "") + (l4 ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + m3 + `return __p
}`;
        var T3 = _a(function() {
          return U6(o3, I2 + "return " + m3).apply(i3, f5);
        });
        if (T3.source = m3, Ei(T3)) throw T3;
        return T3;
      }
      function $d(n4) {
        return W4(n4).toLowerCase();
      }
      function Ud(n4) {
        return W4(n4).toUpperCase();
      }
      function Wd(n4, t, e2) {
        if (n4 = W4(n4), n4 && (e2 || t === i3)) return ys2(n4);
        if (!n4 || !(t = ln2(t))) return n4;
        var r2 = On2(n4), s2 = On2(t), o3 = Ss2(r2, s2), f5 = Os2(r2, s2) + 1;
        return ut4(r2, o3, f5).join("");
      }
      function Fd(n4, t, e2) {
        if (n4 = W4(n4), n4 && (e2 || t === i3)) return n4.slice(0, bs2(n4) + 1);
        if (!n4 || !(t = ln2(t))) return n4;
        var r2 = On2(n4), s2 = Os2(r2, On2(t)) + 1;
        return ut4(r2, 0, s2).join("");
      }
      function Md(n4, t, e2) {
        if (n4 = W4(n4), n4 && (e2 || t === i3)) return n4.replace(Er2, "");
        if (!n4 || !(t = ln2(t))) return n4;
        var r2 = On2(n4), s2 = Ss2(r2, On2(t));
        return ut4(r2, s2).join("");
      }
      function qd(n4, t) {
        var e2 = La, r2 = Da;
        if (K3(t)) {
          var s2 = "separator" in t ? t.separator : s2;
          e2 = "length" in t ? b6(t.length) : e2, r2 = "omission" in t ? ln2(t.omission) : r2;
        }
        n4 = W4(n4);
        var o3 = n4.length;
        if (Lt4(n4)) {
          var f5 = On2(n4);
          o3 = f5.length;
        }
        if (e2 >= o3) return n4;
        var c5 = e2 - Dt4(r2);
        if (c5 < 1) return r2;
        var l4 = f5 ? ut4(f5, 0, c5).join("") : n4.slice(0, c5);
        if (s2 === i3) return l4 + r2;
        if (f5 && (c5 += l4.length - c5), yi(s2)) {
          if (n4.slice(c5).search(s2)) {
            var v6, _5 = l4;
            for (s2.global || (s2 = Br2(s2.source, W4(Ji2.exec(s2)) + "g")), s2.lastIndex = 0; v6 = s2.exec(_5); ) var m3 = v6.index;
            l4 = l4.slice(0, m3 === i3 ? c5 : m3);
          }
        } else if (n4.indexOf(ln2(s2), c5) != c5) {
          var w7 = l4.lastIndexOf(s2);
          w7 > -1 && (l4 = l4.slice(0, w7));
        }
        return l4 + r2;
      }
      function Bd(n4) {
        return n4 = W4(n4), n4 && Va.test(n4) ? n4.replace(Ki, _f) : n4;
      }
      var Gd = Mt4(function(n4, t, e2) {
        return n4 + (e2 ? " " : "") + t.toUpperCase();
      }), Ri = mu("toUpperCase");
      function va(n4, t, e2) {
        return n4 = W4(n4), t = e2 ? i3 : t, t === i3 ? lf(n4) ? Pf(n4) : ef(n4) : n4.match(t) || [];
      }
      var _a = L4(function(n4, t) {
        try {
          return cn(n4, i3, t);
        } catch (e2) {
          return Ei(e2) ? e2 : new S5(e2);
        }
      }), zd = Yn2(function(n4, t) {
        return mn2(t, function(e2) {
          e2 = Wn2(e2), zn2(n4, e2, Ii(n4[e2], n4));
        }), n4;
      });
      function Kd(n4) {
        var t = n4 == null ? 0 : n4.length, e2 = x4();
        return n4 = t ? G5(n4, function(r2) {
          if (typeof r2[1] != "function") throw new wn($4);
          return [e2(r2[0]), r2[1]];
        }) : [], L4(function(r2) {
          for (var s2 = -1; ++s2 < t; ) {
            var o3 = n4[s2];
            if (cn(o3[0], this, r2)) return cn(o3[1], this, r2);
          }
        });
      }
      function Yd(n4) {
        return _c(An2(n4, Ln3));
      }
      function bi(n4) {
        return function() {
          return n4;
        };
      }
      function Zd(n4, t) {
        return n4 == null || n4 !== n4 ? t : n4;
      }
      var Jd = Pu(), Xd = Pu(true);
      function fn2(n4) {
        return n4;
      }
      function Ti(n4) {
        return Qs2(typeof n4 == "function" ? n4 : An2(n4, Ln3));
      }
      function Qd(n4) {
        return ks2(An2(n4, Ln3));
      }
      function Vd(n4, t) {
        return js2(n4, An2(t, Ln3));
      }
      var kd = L4(function(n4, t) {
        return function(e2) {
          return ae2(e2, n4, t);
        };
      }), jd = L4(function(n4, t) {
        return function(e2) {
          return ae2(n4, e2, t);
        };
      });
      function Li(n4, t, e2) {
        var r2 = V3(t), s2 = ze2(t, r2);
        e2 == null && !(K3(t) && (s2.length || !r2.length)) && (e2 = t, t = n4, n4 = this, s2 = ze2(t, V3(t)));
        var o3 = !(K3(e2) && "chain" in e2) || !!e2.chain, f5 = Jn3(n4);
        return mn2(s2, function(c5) {
          var l4 = t[c5];
          n4[c5] = l4, f5 && (n4.prototype[c5] = function() {
            var v6 = this.__chain__;
            if (o3 || v6) {
              var _5 = n4(this.__wrapped__), m3 = _5.__actions__ = un(this.__actions__);
              return m3.push({ func: l4, args: arguments, thisArg: n4 }), _5.__chain__ = v6, _5;
            }
            return l4.apply(n4, nt3([this.value()], arguments));
          });
        }), n4;
      }
      function ng() {
        return k5._ === this && (k5._ = yf), this;
      }
      function Di() {
      }
      function tg(n4) {
        return n4 = b6(n4), L4(function(t) {
          return nu(t, n4);
        });
      }
      var eg = ci(G5), rg = ci(As2), ig = ci(Nr3);
      function ma(n4) {
        return _i(n4) ? $r3(Wn2(n4)) : Hc(n4);
      }
      function sg(n4) {
        return function(t) {
          return n4 == null ? i3 : _t3(n4, t);
        };
      }
      var ug = Cu(), ag = Cu(true);
      function Hi2() {
        return [];
      }
      function Ni() {
        return false;
      }
      function og() {
        return {};
      }
      function fg() {
        return "";
      }
      function cg() {
        return true;
      }
      function hg(n4, t) {
        if (n4 = b6(n4), n4 < 1 || n4 > kn3) return [];
        var e2 = Nn2, r2 = nn(n4, Nn2);
        t = x4(t), n4 -= Nn2;
        for (var s2 = Fr3(r2, t); ++e2 < n4; ) t(e2);
        return s2;
      }
      function lg(n4) {
        return R2(n4) ? G5(n4, Wn2) : pn(n4) ? [n4] : un(Wu(W4(n4)));
      }
      function pg(n4) {
        var t = ++xf;
        return W4(n4) + t;
      }
      var dg = Qe3(function(n4, t) {
        return n4 + t;
      }, 0), gg = hi("ceil"), vg = Qe3(function(n4, t) {
        return n4 / t;
      }, 1), _g = hi("floor");
      function mg(n4) {
        return n4 && n4.length ? Ge3(n4, fn2, Qr2) : i3;
      }
      function wg(n4, t) {
        return n4 && n4.length ? Ge3(n4, x4(t, 2), Qr2) : i3;
      }
      function Pg(n4) {
        return xs2(n4, fn2);
      }
      function Ag(n4, t) {
        return xs2(n4, x4(t, 2));
      }
      function Cg(n4) {
        return n4 && n4.length ? Ge3(n4, fn2, ni) : i3;
      }
      function Ig(n4, t) {
        return n4 && n4.length ? Ge3(n4, x4(t, 2), ni) : i3;
      }
      var xg = Qe3(function(n4, t) {
        return n4 * t;
      }, 1), Eg = hi("round"), yg = Qe3(function(n4, t) {
        return n4 - t;
      }, 0);
      function Sg(n4) {
        return n4 && n4.length ? Wr2(n4, fn2) : 0;
      }
      function Og(n4, t) {
        return n4 && n4.length ? Wr2(n4, x4(t, 2)) : 0;
      }
      return a3.after = Ql, a3.ary = Xu, a3.assign = Up, a3.assignIn = fa, a3.assignInWith = fr2, a3.assignWith = Wp, a3.at = Fp, a3.before = Qu, a3.bind = Ii, a3.bindAll = zd, a3.bindKey = Vu, a3.castArray = op, a3.chain = Yu, a3.chunk = _h, a3.compact = mh, a3.concat = wh, a3.cond = Kd, a3.conforms = Yd, a3.constant = bi, a3.countBy = Sl, a3.create = Mp, a3.curry = ku, a3.curryRight = ju, a3.debounce = na, a3.defaults = qp, a3.defaultsDeep = Bp, a3.defer = Vl, a3.delay = kl, a3.difference = Ph, a3.differenceBy = Ah, a3.differenceWith = Ch, a3.drop = Ih, a3.dropRight = xh, a3.dropRightWhile = Eh, a3.dropWhile = yh, a3.fill = Sh, a3.filter = Rl, a3.flatMap = Ll, a3.flatMapDeep = Dl, a3.flatMapDepth = Hl, a3.flatten = Bu, a3.flattenDeep = Oh, a3.flattenDepth = Rh, a3.flip = jl, a3.flow = Jd, a3.flowRight = Xd, a3.fromPairs = bh, a3.functions = Xp, a3.functionsIn = Qp, a3.groupBy = Nl, a3.initial = Lh, a3.intersection = Dh, a3.intersectionBy = Hh, a3.intersectionWith = Nh, a3.invert = kp, a3.invertBy = jp, a3.invokeMap = Ul, a3.iteratee = Ti, a3.keyBy = Wl, a3.keys = V3, a3.keysIn = on2, a3.map = rr3, a3.mapKeys = td, a3.mapValues = ed, a3.matches = Qd, a3.matchesProperty = Vd, a3.memoize = sr3, a3.merge = rd, a3.mergeWith = ca, a3.method = kd, a3.methodOf = jd, a3.mixin = Li, a3.negate = ur3, a3.nthArg = tg, a3.omit = id, a3.omitBy = sd, a3.once = np, a3.orderBy = Fl, a3.over = eg, a3.overArgs = tp, a3.overEvery = rg, a3.overSome = ig, a3.partial = xi, a3.partialRight = ta, a3.partition = Ml, a3.pick = ud, a3.pickBy = ha, a3.property = ma, a3.propertyOf = sg, a3.pull = Fh, a3.pullAll = zu, a3.pullAllBy = Mh, a3.pullAllWith = qh, a3.pullAt = Bh, a3.range = ug, a3.rangeRight = ag, a3.rearg = ep, a3.reject = Gl, a3.remove = Gh, a3.rest = rp, a3.reverse = Ai, a3.sampleSize = Kl, a3.set = od, a3.setWith = fd, a3.shuffle = Yl, a3.slice = zh, a3.sortBy = Xl, a3.sortedUniq = Vh, a3.sortedUniqBy = kh, a3.split = Ld, a3.spread = ip, a3.tail = jh, a3.take = nl, a3.takeRight = tl, a3.takeRightWhile = el, a3.takeWhile = rl, a3.tap = ml, a3.throttle = sp, a3.thru = er4, a3.toArray = ua, a3.toPairs = la, a3.toPairsIn = pa, a3.toPath = lg, a3.toPlainObject = oa, a3.transform = cd, a3.unary = up, a3.union = il, a3.unionBy = sl, a3.unionWith = ul, a3.uniq = al, a3.uniqBy = ol, a3.uniqWith = fl, a3.unset = hd, a3.unzip = Ci, a3.unzipWith = Ku, a3.update = ld, a3.updateWith = pd, a3.values = Gt4, a3.valuesIn = dd, a3.without = cl, a3.words = va, a3.wrap = ap, a3.xor = hl, a3.xorBy = ll, a3.xorWith = pl, a3.zip = dl, a3.zipObject = gl, a3.zipObjectDeep = vl, a3.zipWith = _l, a3.entries = la, a3.entriesIn = pa, a3.extend = fa, a3.extendWith = fr2, Li(a3, a3), a3.add = dg, a3.attempt = _a, a3.camelCase = md, a3.capitalize = da, a3.ceil = gg, a3.clamp = gd, a3.clone = fp, a3.cloneDeep = hp, a3.cloneDeepWith = lp, a3.cloneWith = cp, a3.conformsTo = pp, a3.deburr = ga, a3.defaultTo = Zd, a3.divide = vg, a3.endsWith = wd, a3.eq = bn2, a3.escape = Pd, a3.escapeRegExp = Ad, a3.every = Ol, a3.find = bl, a3.findIndex = Mu, a3.findKey = Gp, a3.findLast = Tl, a3.findLastIndex = qu, a3.findLastKey = zp, a3.floor = _g, a3.forEach = Zu, a3.forEachRight = Ju, a3.forIn = Kp, a3.forInRight = Yp, a3.forOwn = Zp, a3.forOwnRight = Jp, a3.get = Si, a3.gt = dp, a3.gte = gp, a3.has = Vp, a3.hasIn = Oi, a3.head = Gu, a3.identity = fn2, a3.includes = $l, a3.indexOf = Th, a3.inRange = vd, a3.invoke = nd, a3.isArguments = Pt3, a3.isArray = R2, a3.isArrayBuffer = vp, a3.isArrayLike = an, a3.isArrayLikeObject = Z2, a3.isBoolean = _p, a3.isBuffer = at3, a3.isDate = mp, a3.isElement = wp, a3.isEmpty = Pp, a3.isEqual = Ap, a3.isEqualWith = Cp, a3.isError = Ei, a3.isFinite = Ip, a3.isFunction = Jn3, a3.isInteger = ea, a3.isLength = ar3, a3.isMap = ra, a3.isMatch = xp, a3.isMatchWith = Ep, a3.isNaN = yp, a3.isNative = Sp, a3.isNil = Rp, a3.isNull = Op, a3.isNumber = ia, a3.isObject = K3, a3.isObjectLike = Y, a3.isPlainObject = pe4, a3.isRegExp = yi, a3.isSafeInteger = bp, a3.isSet = sa, a3.isString = or4, a3.isSymbol = pn, a3.isTypedArray = Bt4, a3.isUndefined = Tp, a3.isWeakMap = Lp, a3.isWeakSet = Dp, a3.join = $h, a3.kebabCase = Cd, a3.last = In2, a3.lastIndexOf = Uh, a3.lowerCase = Id, a3.lowerFirst = xd, a3.lt = Hp, a3.lte = Np, a3.max = mg, a3.maxBy = wg, a3.mean = Pg, a3.meanBy = Ag, a3.min = Cg, a3.minBy = Ig, a3.stubArray = Hi2, a3.stubFalse = Ni, a3.stubObject = og, a3.stubString = fg, a3.stubTrue = cg, a3.multiply = xg, a3.nth = Wh, a3.noConflict = ng, a3.noop = Di, a3.now = ir3, a3.pad = Ed, a3.padEnd = yd, a3.padStart = Sd, a3.parseInt = Od, a3.random = _d, a3.reduce = ql, a3.reduceRight = Bl, a3.repeat = Rd, a3.replace = bd, a3.result = ad, a3.round = Eg, a3.runInContext = h6, a3.sample = zl, a3.size = Zl, a3.snakeCase = Td, a3.some = Jl, a3.sortedIndex = Kh, a3.sortedIndexBy = Yh, a3.sortedIndexOf = Zh, a3.sortedLastIndex = Jh, a3.sortedLastIndexBy = Xh, a3.sortedLastIndexOf = Qh, a3.startCase = Dd, a3.startsWith = Hd, a3.subtract = yg, a3.sum = Sg, a3.sumBy = Og, a3.template = Nd, a3.times = hg, a3.toFinite = Xn3, a3.toInteger = b6, a3.toLength = aa, a3.toLower = $d, a3.toNumber = xn3, a3.toSafeInteger = $p, a3.toString = W4, a3.toUpper = Ud, a3.trim = Wd, a3.trimEnd = Fd, a3.trimStart = Md, a3.truncate = qd, a3.unescape = Bd, a3.uniqueId = pg, a3.upperCase = Gd, a3.upperFirst = Ri, a3.each = Zu, a3.eachRight = Ju, a3.first = Gu, Li(a3, function() {
        var n4 = {};
        return $n2(a3, function(t, e2) {
          F3.call(a3.prototype, e2) || (n4[e2] = t);
        }), n4;
      }(), { chain: false }), a3.VERSION = d3, mn2(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(n4) {
        a3[n4].placeholder = a3;
      }), mn2(["drop", "take"], function(n4, t) {
        H3.prototype[n4] = function(e2) {
          e2 = e2 === i3 ? 1 : Q5(b6(e2), 0);
          var r2 = this.__filtered__ && !t ? new H3(this) : this.clone();
          return r2.__filtered__ ? r2.__takeCount__ = nn(e2, r2.__takeCount__) : r2.__views__.push({ size: nn(e2, Nn2), type: n4 + (r2.__dir__ < 0 ? "Right" : "") }), r2;
        }, H3.prototype[n4 + "Right"] = function(e2) {
          return this.reverse()[n4](e2).reverse();
        };
      }), mn2(["filter", "map", "takeWhile"], function(n4, t) {
        var e2 = t + 1, r2 = e2 == Bi || e2 == Ua;
        H3.prototype[n4] = function(s2) {
          var o3 = this.clone();
          return o3.__iteratees__.push({ iteratee: x4(s2, 3), type: e2 }), o3.__filtered__ = o3.__filtered__ || r2, o3;
        };
      }), mn2(["head", "last"], function(n4, t) {
        var e2 = "take" + (t ? "Right" : "");
        H3.prototype[n4] = function() {
          return this[e2](1).value()[0];
        };
      }), mn2(["initial", "tail"], function(n4, t) {
        var e2 = "drop" + (t ? "" : "Right");
        H3.prototype[n4] = function() {
          return this.__filtered__ ? new H3(this) : this[e2](1);
        };
      }), H3.prototype.compact = function() {
        return this.filter(fn2);
      }, H3.prototype.find = function(n4) {
        return this.filter(n4).head();
      }, H3.prototype.findLast = function(n4) {
        return this.reverse().find(n4);
      }, H3.prototype.invokeMap = L4(function(n4, t) {
        return typeof n4 == "function" ? new H3(this) : this.map(function(e2) {
          return ae2(e2, n4, t);
        });
      }), H3.prototype.reject = function(n4) {
        return this.filter(ur3(x4(n4)));
      }, H3.prototype.slice = function(n4, t) {
        n4 = b6(n4);
        var e2 = this;
        return e2.__filtered__ && (n4 > 0 || t < 0) ? new H3(e2) : (n4 < 0 ? e2 = e2.takeRight(-n4) : n4 && (e2 = e2.drop(n4)), t !== i3 && (t = b6(t), e2 = t < 0 ? e2.dropRight(-t) : e2.take(t - n4)), e2);
      }, H3.prototype.takeRightWhile = function(n4) {
        return this.reverse().takeWhile(n4).reverse();
      }, H3.prototype.toArray = function() {
        return this.take(Nn2);
      }, $n2(H3.prototype, function(n4, t) {
        var e2 = /^(?:filter|find|map|reject)|While$/.test(t), r2 = /^(?:head|last)$/.test(t), s2 = a3[r2 ? "take" + (t == "last" ? "Right" : "") : t], o3 = r2 || /^find/.test(t);
        s2 && (a3.prototype[t] = function() {
          var f5 = this.__wrapped__, c5 = r2 ? [1] : arguments, l4 = f5 instanceof H3, v6 = c5[0], _5 = l4 || R2(f5), m3 = function(D5) {
            var N12 = s2.apply(a3, nt3([D5], c5));
            return r2 && w7 ? N12[0] : N12;
          };
          _5 && e2 && typeof v6 == "function" && v6.length != 1 && (l4 = _5 = false);
          var w7 = this.__chain__, I2 = !!this.__actions__.length, E6 = o3 && !w7, T3 = l4 && !I2;
          if (!o3 && _5) {
            f5 = T3 ? f5 : new H3(this);
            var y7 = n4.apply(f5, c5);
            return y7.__actions__.push({ func: er4, args: [m3], thisArg: i3 }), new Pn2(y7, w7);
          }
          return E6 && T3 ? n4.apply(this, c5) : (y7 = this.thru(m3), E6 ? r2 ? y7.value()[0] : y7.value() : y7);
        });
      }), mn2(["pop", "push", "shift", "sort", "splice", "unshift"], function(n4) {
        var t = Oe2[n4], e2 = /^(?:push|sort|unshift)$/.test(n4) ? "tap" : "thru", r2 = /^(?:pop|shift)$/.test(n4);
        a3.prototype[n4] = function() {
          var s2 = arguments;
          if (r2 && !this.__chain__) {
            var o3 = this.value();
            return t.apply(R2(o3) ? o3 : [], s2);
          }
          return this[e2](function(f5) {
            return t.apply(R2(f5) ? f5 : [], s2);
          });
        };
      }), $n2(H3.prototype, function(n4, t) {
        var e2 = a3[t];
        if (e2) {
          var r2 = e2.name + "";
          F3.call(Ut3, r2) || (Ut3[r2] = []), Ut3[r2].push({ name: t, func: e2 });
        }
      }), Ut3[Xe4(i3, ct3).name] = [{ name: "wrapper", func: i3 }], H3.prototype.clone = Bf, H3.prototype.reverse = Gf, H3.prototype.value = zf, a3.prototype.at = wl, a3.prototype.chain = Pl, a3.prototype.commit = Al, a3.prototype.next = Cl, a3.prototype.plant = xl, a3.prototype.reverse = El, a3.prototype.toJSON = a3.prototype.valueOf = a3.prototype.value = yl, a3.prototype.first = a3.prototype.head, ne2 && (a3.prototype[ne2] = Il), a3;
    }, Ht4 = Af();
    lt3 ? ((lt3.exports = Ht4)._ = Ht4, Tr3._ = Ht4) : k5._ = Ht4;
  }).call(ge3);
})(Ui, Ui.exports);
var Bg = Object.defineProperty;
var Gg = Object.defineProperties;
var zg = Object.getOwnPropertyDescriptors;
var Ea = Object.getOwnPropertySymbols;
var Kg = Object.prototype.hasOwnProperty;
var Yg = Object.prototype.propertyIsEnumerable;
var ya = (C2, u4, i3) => u4 in C2 ? Bg(C2, u4, { enumerable: true, configurable: true, writable: true, value: i3 }) : C2[u4] = i3;
var cr3 = (C2, u4) => {
  for (var i3 in u4 || (u4 = {})) Kg.call(u4, i3) && ya(C2, i3, u4[i3]);
  if (Ea) for (var i3 of Ea(u4)) Yg.call(u4, i3) && ya(C2, i3, u4[i3]);
  return C2;
};
var Zg = (C2, u4) => Gg(C2, zg(u4));
function ft4(C2, u4, i3) {
  var d3;
  const P5 = ve(C2);
  return ((d3 = u4.rpcMap) == null ? void 0 : d3[P5.reference]) || `${qg}?chainId=${P5.namespace}:${P5.reference}&projectId=${i3}`;
}
function Ct2(C2) {
  return C2.includes(":") ? C2.split(":")[1] : C2;
}
function Sa(C2) {
  return C2.map((u4) => `${u4.split(":")[0]}:${u4.split(":")[1]}`);
}
function Jg(C2, u4) {
  const i3 = Object.keys(u4.namespaces).filter((P5) => P5.includes(C2));
  if (!i3.length) return [];
  const d3 = [];
  return i3.forEach((P5) => {
    const O6 = u4.namespaces[P5].accounts;
    d3.push(...O6);
  }), d3;
}
function Xg(C2 = {}, u4 = {}) {
  const i3 = Oa(C2), d3 = Oa(u4);
  return Ui.exports.merge(i3, d3);
}
function Oa(C2) {
  var u4, i3, d3, P5;
  const O6 = {};
  if (!B(C2)) return O6;
  for (const [$4, En2] of Object.entries(C2)) {
    const zt4 = oe($4) ? [$4] : En2.chains, pr3 = En2.methods || [], It4 = En2.events || [], Ln3 = En2.rpcMap || {}, Fn3 = en($4);
    O6[Fn3] = Zg(cr3(cr3({}, O6[Fn3]), En2), { chains: S(zt4, (u4 = O6[Fn3]) == null ? void 0 : u4.chains), methods: S(pr3, (i3 = O6[Fn3]) == null ? void 0 : i3.methods), events: S(It4, (d3 = O6[Fn3]) == null ? void 0 : d3.events), rpcMap: cr3(cr3({}, Ln3), (P5 = O6[Fn3]) == null ? void 0 : P5.rpcMap) });
  }
  return O6;
}
function Qg(C2) {
  return C2.includes(":") ? C2.split(":")[2] : C2;
}
function Vg(C2) {
  const u4 = {};
  for (const [i3, d3] of Object.entries(C2)) {
    const P5 = d3.methods || [], O6 = d3.events || [], $4 = d3.accounts || [], En2 = oe(i3) ? [i3] : d3.chains ? d3.chains : Sa(d3.accounts);
    u4[i3] = { chains: En2, methods: P5, events: O6, accounts: $4 };
  }
  return u4;
}
function Wi2(C2) {
  return typeof C2 == "number" ? C2 : C2.includes("0x") ? parseInt(C2, 16) : C2.includes(":") ? Number(C2.split(":")[1]) : Number(C2);
}
var Ra = {};
var z3 = (C2) => Ra[C2];
var Fi = (C2, u4) => {
  Ra[C2] = u4;
};
var kg = class {
  constructor(u4) {
    this.name = "polkadot", this.namespace = u4.namespace, this.events = z3("events"), this.client = z3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4) throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    this.httpProviders[u4] || this.setHttpProvider(u4, i3), this.chainId = u4, this.events.emit(Vn3.DEFAULT_CHAIN_CHANGED, `${this.name}:${u4}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]) || [] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var d3;
      const P5 = Ct2(i3);
      u4[P5] = this.createHttpProvider(P5, (d3 = this.namespace.rpcMap) == null ? void 0 : d3[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const d3 = this.createHttpProvider(u4, i3);
    d3 && (this.httpProviders[u4] = d3);
  }
  createHttpProvider(u4, i3) {
    const d3 = i3 || ft4(u4, this.namespace, this.client.core.projectId);
    if (!d3) throw new Error(`No RPC url provided for chainId: ${u4}`);
    return new JsonRpcProvider2(new f3(d3, z3("disableProviderPing")));
  }
};
var jg = class {
  constructor(u4) {
    this.name = "eip155", this.namespace = u4.namespace, this.events = z3("events"), this.client = z3("client"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());
  }
  async request(u4) {
    switch (u4.request.method) {
      case "eth_requestAccounts":
        return this.getAccounts();
      case "eth_accounts":
        return this.getAccounts();
      case "wallet_switchEthereumChain":
        return await this.handleSwitchChain(u4);
      case "eth_chainId":
        return parseInt(this.getDefaultChain());
    }
    return this.namespace.methods.includes(u4.request.method) ? await this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  setDefaultChain(u4, i3) {
    this.httpProviders[u4] || this.setHttpProvider(parseInt(u4), i3), this.chainId = parseInt(u4), this.events.emit(Vn3.DEFAULT_CHAIN_CHANGED, `${this.name}:${u4}`);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId.toString();
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4) throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  createHttpProvider(u4, i3) {
    const d3 = i3 || ft4(`${this.name}:${u4}`, this.namespace, this.client.core.projectId);
    if (!d3) throw new Error(`No RPC url provided for chainId: ${u4}`);
    return new JsonRpcProvider2(new f3(d3, z3("disableProviderPing")));
  }
  setHttpProvider(u4, i3) {
    const d3 = this.createHttpProvider(u4, i3);
    d3 && (this.httpProviders[u4] = d3);
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var d3;
      const P5 = parseInt(Ct2(i3));
      u4[P5] = this.createHttpProvider(P5, (d3 = this.namespace.rpcMap) == null ? void 0 : d3[i3]);
    }), u4;
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  getHttpProvider() {
    const u4 = this.chainId, i3 = this.httpProviders[u4];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  async handleSwitchChain(u4) {
    var i3, d3;
    let P5 = u4.request.params ? (i3 = u4.request.params[0]) == null ? void 0 : i3.chainId : "0x0";
    P5 = P5.startsWith("0x") ? P5 : `0x${P5}`;
    const O6 = parseInt(P5, 16);
    if (this.isChainApproved(O6)) this.setDefaultChain(`${O6}`);
    else if (this.namespace.methods.includes("wallet_switchEthereumChain")) await this.client.request({ topic: u4.topic, request: { method: u4.request.method, params: [{ chainId: P5 }] }, chainId: (d3 = this.namespace.chains) == null ? void 0 : d3[0] }), this.setDefaultChain(`${O6}`);
    else throw new Error(`Failed to switch to chain 'eip155:${O6}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);
    return null;
  }
  isChainApproved(u4) {
    return this.namespace.chains.includes(`${this.name}:${u4}`);
  }
};
var nv = class {
  constructor(u4) {
    this.name = "solana", this.namespace = u4.namespace, this.events = z3("events"), this.client = z3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    this.httpProviders[u4] || this.setHttpProvider(u4, i3), this.chainId = u4, this.events.emit(Vn3.DEFAULT_CHAIN_CHANGED, `${this.name}:${u4}`);
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4) throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var d3;
      const P5 = Ct2(i3);
      u4[P5] = this.createHttpProvider(P5, (d3 = this.namespace.rpcMap) == null ? void 0 : d3[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const d3 = this.createHttpProvider(u4, i3);
    d3 && (this.httpProviders[u4] = d3);
  }
  createHttpProvider(u4, i3) {
    const d3 = i3 || ft4(u4, this.namespace, this.client.core.projectId);
    if (!d3) throw new Error(`No RPC url provided for chainId: ${u4}`);
    return new JsonRpcProvider2(new f3(d3, z3("disableProviderPing")));
  }
};
var tv = class {
  constructor(u4) {
    this.name = "cosmos", this.namespace = u4.namespace, this.events = z3("events"), this.client = z3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4) throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    this.httpProviders[u4] || this.setHttpProvider(u4, i3), this.chainId = u4, this.events.emit(Vn3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var d3;
      const P5 = Ct2(i3);
      u4[P5] = this.createHttpProvider(P5, (d3 = this.namespace.rpcMap) == null ? void 0 : d3[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const d3 = this.createHttpProvider(u4, i3);
    d3 && (this.httpProviders[u4] = d3);
  }
  createHttpProvider(u4, i3) {
    const d3 = i3 || ft4(u4, this.namespace, this.client.core.projectId);
    if (!d3) throw new Error(`No RPC url provided for chainId: ${u4}`);
    return new JsonRpcProvider2(new f3(d3, z3("disableProviderPing")));
  }
};
var ev = class {
  constructor(u4) {
    this.name = "cip34", this.namespace = u4.namespace, this.events = z3("events"), this.client = z3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4) throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    this.httpProviders[u4] || this.setHttpProvider(u4, i3), this.chainId = u4, this.events.emit(Vn3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      const d3 = this.getCardanoRPCUrl(i3), P5 = Ct2(i3);
      u4[P5] = this.createHttpProvider(P5, d3);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  getCardanoRPCUrl(u4) {
    const i3 = this.namespace.rpcMap;
    if (i3) return i3[u4];
  }
  setHttpProvider(u4, i3) {
    const d3 = this.createHttpProvider(u4, i3);
    d3 && (this.httpProviders[u4] = d3);
  }
  createHttpProvider(u4, i3) {
    const d3 = i3 || this.getCardanoRPCUrl(u4);
    if (!d3) throw new Error(`No RPC url provided for chainId: ${u4}`);
    return new JsonRpcProvider2(new f3(d3, z3("disableProviderPing")));
  }
};
var rv = class {
  constructor(u4) {
    this.name = "elrond", this.namespace = u4.namespace, this.events = z3("events"), this.client = z3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    this.httpProviders[u4] || this.setHttpProvider(u4, i3), this.chainId = u4, this.events.emit(Vn3.DEFAULT_CHAIN_CHANGED, `${this.name}:${u4}`);
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4) throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var d3;
      const P5 = Ct2(i3);
      u4[P5] = this.createHttpProvider(P5, (d3 = this.namespace.rpcMap) == null ? void 0 : d3[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const d3 = this.createHttpProvider(u4, i3);
    d3 && (this.httpProviders[u4] = d3);
  }
  createHttpProvider(u4, i3) {
    const d3 = i3 || ft4(u4, this.namespace, this.client.core.projectId);
    if (!d3) throw new Error(`No RPC url provided for chainId: ${u4}`);
    return new JsonRpcProvider2(new f3(d3, z3("disableProviderPing")));
  }
};
var iv = class {
  constructor(u4) {
    this.name = "multiversx", this.namespace = u4.namespace, this.events = z3("events"), this.client = z3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    this.httpProviders[u4] || this.setHttpProvider(u4, i3), this.chainId = u4, this.events.emit(Vn3.DEFAULT_CHAIN_CHANGED, `${this.name}:${u4}`);
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4) throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? [...new Set(u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var d3;
      const P5 = Ct2(i3);
      u4[P5] = this.createHttpProvider(P5, (d3 = this.namespace.rpcMap) == null ? void 0 : d3[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const d3 = this.createHttpProvider(u4, i3);
    d3 && (this.httpProviders[u4] = d3);
  }
  createHttpProvider(u4, i3) {
    const d3 = i3 || ft4(u4, this.namespace, this.client.core.projectId);
    if (!d3) throw new Error(`No RPC url provided for chainId: ${u4}`);
    return new JsonRpcProvider2(new f3(d3, z3("disableProviderPing")));
  }
};
var sv = class {
  constructor(u4) {
    this.name = "near", this.namespace = u4.namespace, this.events = z3("events"), this.client = z3("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u4) {
    this.namespace = Object.assign(this.namespace, u4);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u4 = this.namespace.chains[0];
    if (!u4) throw new Error("ChainId not found");
    return u4.split(":")[1];
  }
  request(u4) {
    return this.namespace.methods.includes(u4.request.method) ? this.client.request(u4) : this.getHttpProvider().request(u4.request);
  }
  setDefaultChain(u4, i3) {
    if (this.chainId = u4, !this.httpProviders[u4]) {
      const d3 = i3 || ft4(`${this.name}:${u4}`, this.namespace);
      if (!d3) throw new Error(`No RPC url provided for chainId: ${u4}`);
      this.setHttpProvider(u4, d3);
    }
    this.events.emit(Vn3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u4 = this.namespace.accounts;
    return u4 ? u4.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]) || [] : [];
  }
  createHttpProviders() {
    const u4 = {};
    return this.namespace.chains.forEach((i3) => {
      var d3;
      u4[i3] = this.createHttpProvider(i3, (d3 = this.namespace.rpcMap) == null ? void 0 : d3[i3]);
    }), u4;
  }
  getHttpProvider() {
    const u4 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u4];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u4} not found`);
    return i3;
  }
  setHttpProvider(u4, i3) {
    const d3 = this.createHttpProvider(u4, i3);
    d3 && (this.httpProviders[u4] = d3);
  }
  createHttpProvider(u4, i3) {
    const d3 = i3 || ft4(u4, this.namespace);
    return typeof d3 > "u" ? void 0 : new JsonRpcProvider2(new f3(d3, z3("disableProviderPing")));
  }
};
var uv = Object.defineProperty;
var av = Object.defineProperties;
var ov = Object.getOwnPropertyDescriptors;
var ba = Object.getOwnPropertySymbols;
var fv = Object.prototype.hasOwnProperty;
var cv = Object.prototype.propertyIsEnumerable;
var Ta = (C2, u4, i3) => u4 in C2 ? uv(C2, u4, { enumerable: true, configurable: true, writable: true, value: i3 }) : C2[u4] = i3;
var hr3 = (C2, u4) => {
  for (var i3 in u4 || (u4 = {})) fv.call(u4, i3) && Ta(C2, i3, u4[i3]);
  if (ba) for (var i3 of ba(u4)) cv.call(u4, i3) && Ta(C2, i3, u4[i3]);
  return C2;
};
var Mi2 = (C2, u4) => av(C2, ov(u4));
var lr3 = class _lr {
  constructor(u4) {
    this.events = new import_events9.default(), this.rpcProviders = {}, this.shouldAbortPairingAttempt = false, this.maxPairingAttempts = 10, this.disableProviderPing = false, this.providerOpts = u4, this.logger = typeof (u4 == null ? void 0 : u4.logger) < "u" && typeof (u4 == null ? void 0 : u4.logger) != "string" ? u4.logger : (0, import_pino2.default)(k3({ level: (u4 == null ? void 0 : u4.logger) || Ia })), this.disableProviderPing = (u4 == null ? void 0 : u4.disableProviderPing) || false;
  }
  static async init(u4) {
    const i3 = new _lr(u4);
    return await i3.initialize(), i3;
  }
  async request(u4, i3) {
    const [d3, P5] = this.validateChain(i3);
    if (!this.session) throw new Error("Please call connect() before request()");
    return await this.getProvider(d3).request({ request: hr3({}, u4), chainId: `${d3}:${P5}`, topic: this.session.topic });
  }
  sendAsync(u4, i3, d3) {
    const P5 = (/* @__PURE__ */ new Date()).getTime();
    this.request(u4, d3).then((O6) => i3(null, formatJsonRpcResult(P5, O6))).catch((O6) => i3(O6, void 0));
  }
  async enable() {
    if (!this.client) throw new Error("Sign Client not initialized");
    return this.session || await this.connect({ namespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties }), await this.requestAccounts();
  }
  async disconnect() {
    var u4;
    if (!this.session) throw new Error("Please call connect() before enable()");
    await this.client.disconnect({ topic: (u4 = this.session) == null ? void 0 : u4.topic, reason: U("USER_DISCONNECTED") }), await this.cleanup();
  }
  async connect(u4) {
    if (!this.client) throw new Error("Sign Client not initialized");
    if (this.setNamespaces(u4), await this.cleanupPendingPairings(), !u4.skipPairing) return await this.pair(u4.pairingTopic);
  }
  on(u4, i3) {
    this.events.on(u4, i3);
  }
  once(u4, i3) {
    this.events.once(u4, i3);
  }
  removeListener(u4, i3) {
    this.events.removeListener(u4, i3);
  }
  off(u4, i3) {
    this.events.off(u4, i3);
  }
  get isWalletConnect() {
    return true;
  }
  async pair(u4) {
    this.shouldAbortPairingAttempt = false;
    let i3 = 0;
    do {
      if (this.shouldAbortPairingAttempt) throw new Error("Pairing aborted");
      if (i3 >= this.maxPairingAttempts) throw new Error("Max auto pairing attempts reached");
      const { uri: d3, approval: P5 } = await this.client.connect({ pairingTopic: u4, requiredNamespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties });
      d3 && (this.uri = d3, this.events.emit("display_uri", d3)), await P5().then((O6) => {
        this.session = O6, this.namespaces || (this.namespaces = Vg(O6.namespaces), this.persist("namespaces", this.namespaces));
      }).catch((O6) => {
        if (O6.message !== oe2) throw O6;
        i3++;
      });
    } while (!this.session);
    return this.onConnect(), this.session;
  }
  setDefaultChain(u4, i3) {
    try {
      if (!this.session) return;
      const [d3, P5] = this.validateChain(u4);
      this.getProvider(d3).setDefaultChain(P5, i3);
    } catch (d3) {
      if (!/Please call connect/.test(d3.message)) throw d3;
    }
  }
  async cleanupPendingPairings(u4 = {}) {
    this.logger.info("Cleaning up inactive pairings...");
    const i3 = this.client.pairing.getAll();
    if (k(i3)) {
      for (const d3 of i3) u4.deletePairings ? this.client.core.expirer.set(d3.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(d3.topic);
      this.logger.info(`Inactive pairings cleared: ${i3.length}`);
    }
  }
  abortPairingAttempt() {
    this.shouldAbortPairingAttempt = true;
  }
  async checkStorage() {
    if (this.namespaces = await this.getFromStore("namespaces"), this.optionalNamespaces = await this.getFromStore("optionalNamespaces") || {}, this.client.session.length) {
      const u4 = this.client.session.keys.length - 1;
      this.session = this.client.session.get(this.client.session.keys[u4]), this.createProviders();
    }
  }
  async initialize() {
    this.logger.trace("Initialized"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();
  }
  async createClient() {
    this.client = this.providerOpts.client || await Q3.init({ logger: this.providerOpts.logger || Ia, relayUrl: this.providerOpts.relayUrl || Wg, projectId: this.providerOpts.projectId, metadata: this.providerOpts.metadata, storageOptions: this.providerOpts.storageOptions, storage: this.providerOpts.storage, name: this.providerOpts.name }), this.logger.trace("SignClient Initialized");
  }
  createProviders() {
    if (!this.client) throw new Error("Sign Client not initialized");
    if (!this.session) throw new Error("Session not initialized. Please call connect() before enable()");
    const u4 = [...new Set(Object.keys(this.session.namespaces).map((i3) => en(i3)))];
    Fi("client", this.client), Fi("events", this.events), Fi("disableProviderPing", this.disableProviderPing), u4.forEach((i3) => {
      if (!this.session) return;
      const d3 = Jg(i3, this.session), P5 = Sa(d3), O6 = Xg(this.namespaces, this.optionalNamespaces), $4 = Mi2(hr3({}, O6[i3]), { accounts: d3, chains: P5 });
      switch (i3) {
        case "eip155":
          this.rpcProviders[i3] = new jg({ namespace: $4 });
          break;
        case "solana":
          this.rpcProviders[i3] = new nv({ namespace: $4 });
          break;
        case "cosmos":
          this.rpcProviders[i3] = new tv({ namespace: $4 });
          break;
        case "polkadot":
          this.rpcProviders[i3] = new kg({ namespace: $4 });
          break;
        case "cip34":
          this.rpcProviders[i3] = new ev({ namespace: $4 });
          break;
        case "elrond":
          this.rpcProviders[i3] = new rv({ namespace: $4 });
          break;
        case "multiversx":
          this.rpcProviders[i3] = new iv({ namespace: $4 });
          break;
        case "near":
          this.rpcProviders[i3] = new sv({ namespace: $4 });
          break;
      }
    });
  }
  registerEventListeners() {
    if (typeof this.client > "u") throw new Error("Sign Client is not initialized");
    this.client.on("session_ping", (u4) => {
      this.events.emit("session_ping", u4);
    }), this.client.on("session_event", (u4) => {
      const { params: i3 } = u4, { event: d3 } = i3;
      if (d3.name === "accountsChanged") {
        const P5 = d3.data;
        P5 && k(P5) && this.events.emit("accountsChanged", P5.map(Qg));
      } else if (d3.name === "chainChanged") {
        const P5 = i3.chainId, O6 = i3.event.data, $4 = en(P5), En2 = Wi2(P5) !== Wi2(O6) ? `${$4}:${Wi2(O6)}` : P5;
        this.onChainChanged(En2);
      } else this.events.emit(d3.name, d3.data);
      this.events.emit("session_event", u4);
    }), this.client.on("session_update", ({ topic: u4, params: i3 }) => {
      var d3;
      const { namespaces: P5 } = i3, O6 = (d3 = this.client) == null ? void 0 : d3.session.get(u4);
      this.session = Mi2(hr3({}, O6), { namespaces: P5 }), this.onSessionUpdate(), this.events.emit("session_update", { topic: u4, params: i3 });
    }), this.client.on("session_delete", async (u4) => {
      await this.cleanup(), this.events.emit("session_delete", u4), this.events.emit("disconnect", Mi2(hr3({}, U("USER_DISCONNECTED")), { data: u4.topic }));
    }), this.on(Vn3.DEFAULT_CHAIN_CHANGED, (u4) => {
      this.onChainChanged(u4, true);
    });
  }
  getProvider(u4) {
    if (!this.rpcProviders[u4]) throw new Error(`Provider not found: ${u4}`);
    return this.rpcProviders[u4];
  }
  onSessionUpdate() {
    Object.keys(this.rpcProviders).forEach((u4) => {
      var i3;
      this.getProvider(u4).updateNamespace((i3 = this.session) == null ? void 0 : i3.namespaces[u4]);
    });
  }
  setNamespaces(u4) {
    const { namespaces: i3, optionalNamespaces: d3, sessionProperties: P5 } = u4;
    i3 && Object.keys(i3).length && (this.namespaces = i3), d3 && Object.keys(d3).length && (this.optionalNamespaces = d3), this.sessionProperties = P5, this.persist("namespaces", i3), this.persist("optionalNamespaces", d3);
  }
  validateChain(u4) {
    const [i3, d3] = (u4 == null ? void 0 : u4.split(":")) || ["", ""];
    if (!this.namespaces || !Object.keys(this.namespaces).length) return [i3, d3];
    if (i3 && !Object.keys(this.namespaces || {}).map(($4) => en($4)).includes(i3)) throw new Error(`Namespace '${i3}' is not configured. Please call connect() first with namespace config.`);
    if (i3 && d3) return [i3, d3];
    const P5 = en(Object.keys(this.namespaces)[0]), O6 = this.rpcProviders[P5].getDefaultChain();
    return [P5, O6];
  }
  async requestAccounts() {
    const [u4] = this.validateChain();
    return await this.getProvider(u4).requestAccounts();
  }
  onChainChanged(u4, i3 = false) {
    var d3;
    if (!this.namespaces) return;
    const [P5, O6] = this.validateChain(u4);
    i3 || this.getProvider(P5).setDefaultChain(O6), ((d3 = this.namespaces[P5]) != null ? d3 : this.namespaces[`${P5}:${O6}`]).defaultChain = O6, this.persist("namespaces", this.namespaces), this.events.emit("chainChanged", O6);
  }
  onConnect() {
    this.createProviders(), this.events.emit("connect", { session: this.session });
  }
  async cleanup() {
    this.session = void 0, this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, this.persist("namespaces", void 0), this.persist("optionalNamespaces", void 0), this.persist("sessionProperties", void 0), await this.cleanupPendingPairings({ deletePairings: true });
  }
  persist(u4, i3) {
    this.client.core.storage.setItem(`${xa}/${u4}`, i3);
  }
  async getFromStore(u4) {
    return await this.client.core.storage.getItem(`${xa}/${u4}`);
  }
};
var hv = lr3;

// node_modules/@walletconnect/ethereum-provider/dist/index.es.js
var P4 = "wc";
var S4 = "ethereum_provider";
var $3 = `${P4}@2:${S4}:`;
var j5 = "https://rpc.walletconnect.com/v1/";
var u3 = ["eth_sendTransaction", "personal_sign"];
var E5 = ["eth_accounts", "eth_requestAccounts", "eth_sendRawTransaction", "eth_sign", "eth_signTransaction", "eth_signTypedData", "eth_signTypedData_v3", "eth_signTypedData_v4", "eth_sendTransaction", "personal_sign", "wallet_switchEthereumChain", "wallet_addEthereumChain", "wallet_getPermissions", "wallet_requestPermissions", "wallet_registerOnboarding", "wallet_watchAsset", "wallet_scanQRCode"];
var m2 = ["chainChanged", "accountsChanged"];
var _4 = ["chainChanged", "accountsChanged", "message", "disconnect", "connect"];
var N11 = Object.defineProperty;
var q = Object.defineProperties;
var D4 = Object.getOwnPropertyDescriptors;
var y6 = Object.getOwnPropertySymbols;
var U5 = Object.prototype.hasOwnProperty;
var Q4 = Object.prototype.propertyIsEnumerable;
var O5 = (a3, t, s2) => t in a3 ? N11(a3, t, { enumerable: true, configurable: true, writable: true, value: s2 }) : a3[t] = s2;
var p5 = (a3, t) => {
  for (var s2 in t || (t = {})) U5.call(t, s2) && O5(a3, s2, t[s2]);
  if (y6) for (var s2 of y6(t)) Q4.call(t, s2) && O5(a3, s2, t[s2]);
  return a3;
};
var M3 = (a3, t) => q(a3, D4(t));
function g6(a3) {
  return Number(a3[0].split(":")[1]);
}
function f4(a3) {
  return `0x${a3.toString(16)}`;
}
function L3(a3) {
  const { chains: t, optionalChains: s2, methods: i3, optionalMethods: n4, events: e2, optionalEvents: h6, rpcMap: c5 } = a3;
  if (!k(t)) throw new Error("Invalid chains");
  const o3 = { chains: t, methods: i3 || u3, events: e2 || m2, rpcMap: p5({}, t.length ? { [g6(t)]: c5[g6(t)] } : {}) }, r2 = e2 == null ? void 0 : e2.filter((l4) => !m2.includes(l4)), d3 = i3 == null ? void 0 : i3.filter((l4) => !u3.includes(l4));
  if (!s2 && !h6 && !n4 && !(r2 != null && r2.length) && !(d3 != null && d3.length)) return { required: t.length ? o3 : void 0 };
  const C2 = (r2 == null ? void 0 : r2.length) && (d3 == null ? void 0 : d3.length) || !s2, I2 = { chains: [...new Set(C2 ? o3.chains.concat(s2 || []) : s2)], methods: [...new Set(o3.methods.concat(n4 != null && n4.length ? n4 : E5))], events: [...new Set(o3.events.concat(h6 != null && h6.length ? h6 : _4))], rpcMap: c5 };
  return { required: t.length ? o3 : void 0, optional: s2.length ? I2 : void 0 };
}
var v5 = class _v {
  constructor() {
    this.events = new import_events10.EventEmitter(), this.namespace = "eip155", this.accounts = [], this.chainId = 1, this.STORAGE_KEY = $3, this.on = (t, s2) => (this.events.on(t, s2), this), this.once = (t, s2) => (this.events.once(t, s2), this), this.removeListener = (t, s2) => (this.events.removeListener(t, s2), this), this.off = (t, s2) => (this.events.off(t, s2), this), this.parseAccount = (t) => this.isCompatibleChainId(t) ? this.parseAccountId(t).address : t, this.signer = {}, this.rpc = {};
  }
  static async init(t) {
    const s2 = new _v();
    return await s2.initialize(t), s2;
  }
  async request(t) {
    return await this.signer.request(t, this.formatChainId(this.chainId));
  }
  sendAsync(t, s2) {
    this.signer.sendAsync(t, s2, this.formatChainId(this.chainId));
  }
  get connected() {
    return this.signer.client ? this.signer.client.core.relayer.connected : false;
  }
  get connecting() {
    return this.signer.client ? this.signer.client.core.relayer.connecting : false;
  }
  async enable() {
    return this.session || await this.connect(), await this.request({ method: "eth_requestAccounts" });
  }
  async connect(t) {
    if (!this.signer.client) throw new Error("Provider not initialized. Call init() first");
    this.loadConnectOpts(t);
    const { required: s2, optional: i3 } = L3(this.rpc);
    try {
      const n4 = await new Promise(async (h6, c5) => {
        var o3;
        this.rpc.showQrModal && ((o3 = this.modal) == null || o3.subscribeModal((r2) => {
          !r2.open && !this.signer.session && (this.signer.abortPairingAttempt(), c5(new Error("Connection request reset. Please try again.")));
        })), await this.signer.connect(M3(p5({ namespaces: p5({}, s2 && { [this.namespace]: s2 }) }, i3 && { optionalNamespaces: { [this.namespace]: i3 } }), { pairingTopic: t == null ? void 0 : t.pairingTopic })).then((r2) => {
          h6(r2);
        }).catch((r2) => {
          c5(new Error(r2.message));
        });
      });
      if (!n4) return;
      const e2 = Un(n4.namespaces, [this.namespace]);
      this.setChainIds(this.rpc.chains.length ? this.rpc.chains : e2), this.setAccounts(e2), this.events.emit("connect", { chainId: f4(this.chainId) });
    } catch (n4) {
      throw this.signer.logger.error(n4), n4;
    } finally {
      this.modal && this.modal.closeModal();
    }
  }
  async disconnect() {
    this.session && await this.signer.disconnect(), this.reset();
  }
  get isWalletConnect() {
    return true;
  }
  get session() {
    return this.signer.session;
  }
  registerEventListeners() {
    this.signer.on("session_event", (t) => {
      const { params: s2 } = t, { event: i3 } = s2;
      i3.name === "accountsChanged" ? (this.accounts = this.parseAccounts(i3.data), this.events.emit("accountsChanged", this.accounts)) : i3.name === "chainChanged" ? this.setChainId(this.formatChainId(i3.data)) : this.events.emit(i3.name, i3.data), this.events.emit("session_event", t);
    }), this.signer.on("chainChanged", (t) => {
      const s2 = parseInt(t);
      this.chainId = s2, this.events.emit("chainChanged", f4(this.chainId)), this.persist();
    }), this.signer.on("session_update", (t) => {
      this.events.emit("session_update", t);
    }), this.signer.on("session_delete", (t) => {
      this.reset(), this.events.emit("session_delete", t), this.events.emit("disconnect", M3(p5({}, U("USER_DISCONNECTED")), { data: t.topic, name: "USER_DISCONNECTED" }));
    }), this.signer.on("display_uri", (t) => {
      var s2, i3;
      this.rpc.showQrModal && ((s2 = this.modal) == null || s2.closeModal(), (i3 = this.modal) == null || i3.openModal({ uri: t })), this.events.emit("display_uri", t);
    });
  }
  switchEthereumChain(t) {
    this.request({ method: "wallet_switchEthereumChain", params: [{ chainId: t.toString(16) }] });
  }
  isCompatibleChainId(t) {
    return typeof t == "string" ? t.startsWith(`${this.namespace}:`) : false;
  }
  formatChainId(t) {
    return `${this.namespace}:${t}`;
  }
  parseChainId(t) {
    return Number(t.split(":")[1]);
  }
  setChainIds(t) {
    const s2 = t.filter((i3) => this.isCompatibleChainId(i3)).map((i3) => this.parseChainId(i3));
    s2.length && (this.chainId = s2[0], this.events.emit("chainChanged", f4(this.chainId)), this.persist());
  }
  setChainId(t) {
    if (this.isCompatibleChainId(t)) {
      const s2 = this.parseChainId(t);
      this.chainId = s2, this.switchEthereumChain(s2);
    }
  }
  parseAccountId(t) {
    const [s2, i3, n4] = t.split(":");
    return { chainId: `${s2}:${i3}`, address: n4 };
  }
  setAccounts(t) {
    this.accounts = t.filter((s2) => this.parseChainId(this.parseAccountId(s2).chainId) === this.chainId).map((s2) => this.parseAccountId(s2).address), this.events.emit("accountsChanged", this.accounts);
  }
  getRpcConfig(t) {
    var s2, i3;
    const n4 = (s2 = t == null ? void 0 : t.chains) != null ? s2 : [], e2 = (i3 = t == null ? void 0 : t.optionalChains) != null ? i3 : [], h6 = n4.concat(e2);
    if (!h6.length) throw new Error("No chains specified in either `chains` or `optionalChains`");
    const c5 = n4.length ? (t == null ? void 0 : t.methods) || u3 : [], o3 = n4.length ? (t == null ? void 0 : t.events) || m2 : [], r2 = (t == null ? void 0 : t.optionalMethods) || [], d3 = (t == null ? void 0 : t.optionalEvents) || [], C2 = (t == null ? void 0 : t.rpcMap) || this.buildRpcMap(h6, t.projectId), I2 = (t == null ? void 0 : t.qrModalOptions) || void 0;
    return { chains: n4 == null ? void 0 : n4.map((l4) => this.formatChainId(l4)), optionalChains: e2.map((l4) => this.formatChainId(l4)), methods: c5, events: o3, optionalMethods: r2, optionalEvents: d3, rpcMap: C2, showQrModal: !!(t != null && t.showQrModal), qrModalOptions: I2, projectId: t.projectId, metadata: t.metadata };
  }
  buildRpcMap(t, s2) {
    const i3 = {};
    return t.forEach((n4) => {
      i3[n4] = this.getRpcUrl(n4, s2);
    }), i3;
  }
  async initialize(t) {
    if (this.rpc = this.getRpcConfig(t), this.chainId = this.rpc.chains.length ? g6(this.rpc.chains) : g6(this.rpc.optionalChains), this.signer = await hv.init({ projectId: this.rpc.projectId, metadata: this.rpc.metadata, disableProviderPing: t.disableProviderPing, relayUrl: t.relayUrl, storageOptions: t.storageOptions }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal) {
      let s2;
      try {
        const { WalletConnectModal: i3 } = await import("./dist-D3I425AF.js");
        s2 = i3;
      } catch {
        throw new Error("To use QR modal, please install @walletconnect/modal package");
      }
      if (s2) try {
        this.modal = new s2(p5({ projectId: this.rpc.projectId }, this.rpc.qrModalOptions));
      } catch (i3) {
        throw this.signer.logger.error(i3), new Error("Could not generate WalletConnectModal Instance");
      }
    }
  }
  loadConnectOpts(t) {
    if (!t) return;
    const { chains: s2, optionalChains: i3, rpcMap: n4 } = t;
    s2 && k(s2) && (this.rpc.chains = s2.map((e2) => this.formatChainId(e2)), s2.forEach((e2) => {
      this.rpc.rpcMap[e2] = (n4 == null ? void 0 : n4[e2]) || this.getRpcUrl(e2);
    })), i3 && k(i3) && (this.rpc.optionalChains = [], this.rpc.optionalChains = i3 == null ? void 0 : i3.map((e2) => this.formatChainId(e2)), i3.forEach((e2) => {
      this.rpc.rpcMap[e2] = (n4 == null ? void 0 : n4[e2]) || this.getRpcUrl(e2);
    }));
  }
  getRpcUrl(t, s2) {
    var i3;
    return ((i3 = this.rpc.rpcMap) == null ? void 0 : i3[t]) || `${j5}?chainId=eip155:${t}&projectId=${s2 || this.rpc.projectId}`;
  }
  async loadPersistedSession() {
    if (!this.session) return;
    const t = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`), s2 = this.session.namespaces[`${this.namespace}:${t}`] ? this.session.namespaces[`${this.namespace}:${t}`] : this.session.namespaces[this.namespace];
    this.setChainIds(t ? [this.formatChainId(t)] : s2 == null ? void 0 : s2.accounts), this.setAccounts(s2 == null ? void 0 : s2.accounts);
  }
  reset() {
    this.chainId = 1, this.accounts = [];
  }
  persist() {
    this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId);
  }
  parseAccounts(t) {
    return typeof t == "string" || t instanceof String ? [this.parseAccount(t)] : t.map((s2) => this.parseAccount(s2));
  }
};
var G4 = v5;
export {
  G4 as EthereumProvider,
  _4 as OPTIONAL_EVENTS,
  E5 as OPTIONAL_METHODS,
  m2 as REQUIRED_EVENTS,
  u3 as REQUIRED_METHODS,
  v5 as default
};
/*! Bundled license information:

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

@walletconnect/relay-auth/dist/index.es.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@walletconnect/universal-provider/dist/index.es.js:
  (**
  * @license
  * Lodash <https://lodash.com/>
  * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
  * Released under MIT license <https://lodash.com/license>
  * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
  * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
  *)
*/
//# sourceMappingURL=index.es-JXWCE44I.js.map
